Fhkdh\kdbc]hkm^Zjkl\_ggucmgb\_jkbl_lbfF<Ehfhghkh\Z
GZmqgh-bkke_^h\Zl_evkdbc\uqbkebl_evgucp_glj

:K:glhgh\

I:J:EE?EVGH?IJH=J:FFBJH<:GB?
KBKIHEVAH<:GB?FL?OGHEH=BB
MPI

Ba^Zl_evkl\h
Fhkdh\kdh]hmgb\_jkbl_lZ
2004

M>D681.3.06
;;D– 018.2*32.973
:
J_p_ga_glu
aZf^bj_dlhjZGB<PF=Mqe_g-dhjj_kihg^_glJ:G<e<<h_\h^bg
aZf^bj_dlhjZGBBYNF=M^hdlhjnbabdh-fZl_fZlbq_kdbogZmd
<:Bevbg
:glhgh\:K
:
IZjZee_evgh_ijh]jZffbjh\Zgb_kbkihevah\Zgb_f
l_ogheh]bbMPI: Mq_[gh_ihkh[b_–F Ba^-\hF=M–k
ISBN 5-211-04907-1
Ihkh[b_ ij_^gZagZq_gh ^ey hk\h_gby ijZdlbq_kdh]h dmjkZ iZjZee_evgh]h
ijh]jZffbjh\Zgby k bkihevah\Zgb_f l_ogheh]bb MPI < gZklhys__ \j_fy
l_ogheh]by MPI y\ey_lky hkgh\guf kj_^kl\hf ijh]jZffbjh\Zgby ^ey deZkl_jguo
kbkl_fbdhfivxl_jh\kjZkij_^_e_gghciZfylvxghfh`_lijbf_gylvkylZd`_b
gZ \uqbkebl_evguo kbkl_fZo ^jm]bo lbih\ Dmjk \dexqZ_l \ k_[y hibkZgb_
[hevrbgkl\Zhkgh\guoijhp_^mjklZg^ZjlZMPI-kijbf_jZfbboijbf_g_gbyb
ijZdlbq_kdb_ k\_^_gby dhlhju_ fh]ml ihlj_[h\Zlvky ijb gZibkZgbb j_Zevguo
ijh]jZffHkgh\gh_hibkZgb_\_^_lkykbkihevah\Zgb_f\uah\h\ijhp_^mjMPIba
ijh]jZff gZ yaud_ NhjljZg h^gZdh mdZaZgu lZd`_ hkgh\gu_ hlebqby \
bkihevah\Zgbb \uah\h\ ZgZeh]bqguo nmgdpbc ba ijh]jZff gZ yaud_ Kb
Ijb\h^ylky ijbf_ju g_[hevrbo aZdhgq_gguo iZjZee_evguo ijh]jZff l_dklu
dhlhjuo
fh`gh
kdZqZlv
\
k_lb
Bgl_jg_l
kh
kljZgbpu
http://parallel.ru/tech/tech_dev/MPI/examples/ < dhgp_ jZa^_eh\ ijb\h^ylky
dhgljhevgu_ \hijhku b aZ^Zgby dhlhju_ fh`gh bkihevah\Zlv \ ijhp_kk_
h[mq_gbyIhkh[b_hkgh\ZghgZdmjk_aZgylbcijh\_^_gguoZ\lhjhf\bxg_
]h^Z\dhfiZgbb©Rexf[_j`_ª
>ey klm^_glh\ ZkibjZglh\ b gZmqguo khljm^gbdh\ qvy ^_yl_evghklv
k\yaZgZkiZjZee_evgufb\uqbke_gbyfb

M>D
;;D– 018.2*32.973

Fhkdh\kdbc]hkm^Zjkl\_gguc
mgb\_jkbl_l

ISBN 5-211-04907-1

2



Kh^_j`Zgb_

Bg^_dkihnmgdpbyf03,....................................................................................... 4
Hkgh\gu_ihgylby................................................................................................... 5
H[sb_ijhp_^mju03,........................................................................................... 8
AZ^Zgby................................................................................................................ 11
I_j_^ZqZijb_fkhh[s_gbcf_`^mhl^_evgufbijhp_kkZfb ......................... 11
I_j_^ZqZijb_fkhh[s_gbck[ehdbjh\dhc ................................................... 12
I_j_^ZqZijb_fkhh[s_gbc[_a[ehdbjh\db.................................................. 21
Hleh`_ggu_aZijhkugZ\aZbfh^_ckl\b_ ....................................................... 30
Lmibdh\u_kblmZpbb deadlock) ....................................................................... 32
AZ^Zgby................................................................................................................ 34
Dhee_dlb\gu_\aZbfh^_ckl\byijhp_kkh\ ......................................................... 36
AZ^Zgby................................................................................................................ 47
=jmiiubdhffmgbdZlhju .................................................................................... 48
Hi_jZpbbk]jmiiZfbijhp_kkh\...................................................................... 48
Hi_jZpbbkdhffmgbdZlhjZfb ......................................................................... 52
AZ^Zgby................................................................................................................ 55
<bjlmZevgu_lhiheh]bb ....................................................................................... 55
>_dZjlh\Z lhiheh]by ......................................................................................... 56
Lhiheh]by ]jZnZ ................................................................................................ 60
AZ^Zgby................................................................................................................ 62
I_j_kuedZjZaghlbiguo^Zgguo ......................................................................... 63
Ijhba\h^gu_lbiu^Zgguo............................................................................... 63
MiZdh\dZ^Zgguo ............................................................................................... 68
AZ^Zgby................................................................................................................ 70
Ebl_jZlmjZ ............................................................................................................. 71

3

Bg^_dkihnmgdpbyf03,
MPI_ADDRESS ................ 66
MPI_ALLGATHER .............. 42
MPI_ALLGATHERV ............. 42
MPI_ALLREDUCE .............. 45
MPI_ALLTOALL ............... 42
MPI_ALLTOALLV .............. 43
MPI_BARRIER ................ 36
MPI_BCAST .................. 38
MPI_BSEND .................. 14
MPI_BSEND_INIT ............. 30
MPI_BUFFER_ATTACH .......... 15
MPI_BUFFER_DETACH .......... 15
MPI_CART_COORDS ............ 58
MPI_CART_CREATE ............ 56
MPI_CART_GET ............... 59
MPI_CART_RANK .............. 58
MPI_CART_SHIFT ............. 59
MPI_CART_SUB ............... 58
MPI_CARTDIM_GET ............ 58
MPI_COMM_CREATE ............ 53
MPI_COMM_DUP ............... 53
MPI_COMM_FREE .............. 54
MPI_COMM_GROUP ............. 49
MPI_COMM_RANK ............... 9
MPI_COMM_SIZE ............... 9
MPI_COMM_SPLIT ............. 54
MPI_DIMS_CREATE ............ 57
MPI_FINALIZE ................ 8
MPI_GATHER ................. 39
MPI_GATHERV ................ 40
MPI_GET_COUNT .............. 19
MPI_GET_PROCESSOR_NAME ..... 10
MPI_GRAPH_CREATE ........... 60
MPI_GRAPH_GET .............. 61
MPI_GRAPH_NEIGHBORS ........ 61
MPI_GRAPH_NEIGHBORS_COUNT .. 61
MPI_GRAPHDIMS_GET .......... 61
MPI_GROUP_COMPARE .......... 51
MPI_GROUP_DIFFERENCE ....... 50
MPI_GROUP_EXCL ............. 49
MPI_GROUP_FREE ............. 51
MPI_GROUP_INCL ............. 49
MPI_GROUP_INTERSECTION ..... 50
MPI_GROUP_RANK ............. 50
MPI_GROUP_SIZE ............. 50
MPI_GROUP_TRANSLATE_RANKS .. 51
MPI_GROUP_UNION ............ 50
MPI_IBSEND ................. 23
MPI_INIT .................... 8
MPI_INITIALIZED ............. 9
MPI_IPROBE ................. 23

MPI_IRECV .................. 23
MPI_IRSEND ................. 23
MPI_ISEND .................. 22
MPI_ISSEND ................. 23
MPI_OP_CREATE .............. 46
MPI_OP_FREE ................ 46
MPI_PACK ................... 69
MPI_PACK_SIZE .............. 69
MPI_PROBE .................. 19
MPI_RECV ................... 16
MPI_RECV_INIT .............. 30
MPI_REDUCE ................. 43
MPI_REDUCE_SCATTER ......... 45
MPI_REQUEST_FREE ........... 31
MPI_RSEND .................. 14
MPI_RSEND_INIT ............. 30
MPI_SCAN ................... 46
MPI_SCATTER ................ 40
MPI_SCATTERV ............... 41
MPI_SEND ................... 12
MPI_SEND_INIT .............. 30
MPI_SENDRECV ............... 33
MPI_SENDRECV_REPLACE ....... 34
MPI_SSEND .................. 14
MPI_SSEND_INIT ............. 30
MPI_START .................. 31
MPI_STARTALL ............... 31
MPI_TEST ................... 27
MPI_TESTALL ................ 27
MPI_TESTANY ................ 27
MPI_TESTSOME ............... 28
MPI_TOPO_TEST .............. 56
MPI_TYPE_COMMIT ............ 66
MPI_TYPE_CONTIGUOUS ........ 64
MPI_TYPE_EXTENT ............ 67
MPI_TYPE_FREE .............. 66
MPI_TYPE_HINDEXED .......... 65
MPI_TYPE_HVECTOR ........... 65
MPI_TYPE_INDEXED ........... 65
MPI_TYPE_LB ................ 67
MPI_TYPE_SIZE .............. 66
MPI_TYPE_STRUCT ............ 65
MPI_TYPE_UB ................ 67
MPI_TYPE_VECTOR ............ 64
MPI_UNPACK ................. 69
MPI_WAIT ................... 23
MPI_WAITALL ................ 24
MPI_WAITANY ................ 25
MPI_WAITSOME ............... 25
MPI_WTICK .................. 10
MPI_WTIME .................. 10
4

Hkgh\gu_ihgylby
GZb[he__jZkijhkljZg_gghcl_ogheh]b_cijh]jZffbjh\Zgby^eyiZjZee_evguo dhfivxl_jh\ k jZkij_^_e_gghc iZfylvx \ gZklhys__ \j_fy y\ey_lky
03, Hkgh\guf kihkh[hf \aZbfh^_ckl\by iZjZee_evguo ijhp_kkh\ \ lZdbo
kbkl_fZoy\ey_lkyi_j_^ZqZkhh[s_gbc^jm]^jm]mWlhbhljZ`_gh\gZa\Zgbb ^Zgghc l_ogheh]bb — 0HVVDJH 3DVVLQJ ,QWHUIDFH bgl_jn_ck i_j_^Zqb
khh[s_gbc  KlZg^Zjl MPI nbdkbjm_l bgl_jn_ck dhlhjuc ^he`_g
kh[ex^Zlvky dZd kbkl_fhc ijh]jZffbjh\Zgby gZ dZ`^hc \uqbkebl_evghc
ieZlnhjf_lZdbihevah\Zl_e_fijbkha^Zgbbk\hboijh]jZffKh\j_f_ggu_
j_ZebaZpbb qZs_ \k_]hkhhl\_lkl\mxlklZg^Zjlm03,\_jkbb <—
 ]h^Zo ihy\beky klZg^Zjl 03,- agZqbl_evgh jZkrbjb\rbc
nmgdpbhgZevghklvij_^u^ms_c\_jkbbH^gZdh^hkboihjwlhl\ZjbZglMPI
g_ihemqberbjhdh]hjZkijhkljZg_gbyb\iheghfh[t_f_g_j_Zebah\Zggb
gZ h^ghc kbkl_f_ <_a^_ ^Ze__ _keb bgh]h g_ h]h\hj_gh fu [m^_f bf_lv
^_ehkhklZg^ZjlhfMPI-1.1.
03, ih^^_j`b\Z_l jZ[hlm k yaudZfb NhjljZg b Kb < ^Zgghf ihkh[bb
ijbf_jubhibkZgby\k_oijhp_^mj[m^ml^Zgukbkihevah\Zgb_fyaudZNhjljZg H^gZdh wlh kh\_jr_ggh g_ y\ey_lky ijbgpbibZevguf ihkdhevdm hkgh\gu_ b^_b 03, b ijZ\beZ hnhjfe_gby hl^_evguo dhgkljmdpbc ^ey wlbo
yaudh\\hfgh]hfkoh`bIhegZy\_jkbybgl_jn_ckZkh^_j`blhibkZgb_[he__ ijhp_^mj b nmgdpbcGZrZaZ^ZqZ — h[tykgblvb^_xl_ogheh]bbb
ihfhqv hk\hblv g_h[oh^bfu_ gZ ijZdlbd_ dhfihg_glu >hihegbl_evgmx
bgnhjfZpbx h[ bgl_jn_ck_ MPI fh`gh gZclb gZ l_fZlbq_kdhc kljZgbp_
BgnhjfZpbhggh-ZgZeblbq_kdh]h p_gljZ ih iZjZee_evguf \uqbke_gbyf \
k_lbBgl_jg_lhttp://parallel.ru/tech/tech_dev/mpi.html.
Bgl_jn_ck MPI ih^^_j`b\Z_l kha^Zgb_ iZjZee_evguo ijh]jZff \ klbe_
MIMD (Multiple Instruction Multiple Data  qlh ih^jZamf_\Z_l h[t_^bg_gb_
ijhp_kkh\kjZaebqgufbbkoh^gufbl_dklZfbH^gZdhibkZlvbhleZ`b\Zlv
lZdb_ijh]jZffuhq_gvkeh`ghihwlhfmgZijZdlbd_ijh]jZffbklu]hjZa^h
qZs_bkihevamxlSPMD-fh^_ev Single Program Multiple Data)iZjZee_evgh]h
ijh]jZffbjh\Zgby \ jZfdZo dhlhjhc ^ey \k_o iZjZee_evguo ijhp_kkh\ bkihevam_lkyh^bgblhl`_dh^<gZklhys__\j_fy\k_[hevr_b[hevr_j_ZebaZpbcMPIih^^_j`b\ZxljZ[hlmkgblyfb
IhkdhevdmMPIy\ey_lky[b[ebhl_dhclhijbdhfibeypbbijh]jZffug_h[oh^bfh ijbebgdh\Zlv khhl\_lkl\mxsb_ [b[ebhl_qgu_ fh^meb Wlh fh`gh
k^_eZlv\dhfZg^ghckljhd_beb\hkihevah\Zlvkyij_^mkfhlj_ggufb\[hevrbgkl\_ kbkl_f dhfZg^Zfb beb kdjbilZfb mpicc ^ey ijh]jZff gZ yaud_
Kb mpiCC ^eyijh]jZffgZyaud_Kb bmpif77/mpif90 ^eyijh]jZffgZ
yaudZoNhjljZg HipbydhfibeylhjZ³-o name´iha\hey_laZ^Zlvbfy
5

name^eyihemqZ_fh]h\uihegbfh]hnZceZihmfheqZgbx\uihegbfucnZce
gZau\Z_lkya.outgZijbf_j
mpif77 -o program program.f

Ihke_ ihemq_gby \uihegbfh]h nZceZ g_h[oh^bfh aZimklblv _]h gZ lj_[m_fhfdhebq_kl\_ijhp_kkhjh\>eywlh]hh[uqghij_^hklZ\ey_lkydhfZg^ZaZimkdZMPI-ijbeh`_gbcmpirungZijbf_j
mpirun -np Nijh]jZffZkZj]mf_glZfb!,

]^_ N - qbkeh ijhp_kkh\ dhlhjh_ ^he`gh [ulv g_ [he__ jZaj_r_ggh]h \
^Zgghckbkl_f_qbkeZijhp_kkh\^eyh^ghcaZ^ZqbIhke_aZimkdZh^gZblZ
`_ijh]jZffZ[m^_l\uihegylvky\k_fbaZims_ggufbijhp_kkZfbj_amevlZl
\uiheg_gby \ aZ\bkbfhklb hl kbkl_fu [m^_l \u^Z\Zlvky gZ l_jfbgZe beb
aZibku\Zlvky\nZcekij_^hij_^_e_ggufbf_g_f
<k_ ^hihegbl_evgu_ h[t_dlu bf_gZ ijhp_^mj dhgklZglu ij_^hij_^_e_ggu_ lbiu ^Zgguo b li bkihevam_fu_ \ 03, bf_xl ij_nbdk MPI_ ?keb
ihevah\Zl_evg_[m^_lbkihevah\Zlv\ijh]jZff_bf_gklZdbfij_nbdkhflh
dhgnebdlh\kh[t_dlZfbMPIaZ\_^hfhg_[m^_l<yaud_Kbdjhf_lh]hy\ey_lkykms_kl\_ggufj_]bkljkbf\heh\\gZa\ZgbyonmgdpbcH[uqgh\gZa\ZgbyonmgdpbcMPIi_j\Zy[md\Zihke_ij_nbdkZ MPI_ibr_lky\\_jog_f
j_]bklj_ihke_^mxsb_[md\u–\gb`g_fj_]bklj_ZgZa\ZgbydhgklZglMPI
aZibku\Zxlky p_ebdhf \ \_jog_f j_]bklj_ <k_ hibkZgby bgl_jn_ckZ MPI
kh[jZgu \ nZce_ mpif.h (mpi.h  ihwlhfm \ gZqZe_03,-ijh]jZffu ^he`gZ
klhylv ^bj_dlb\Z include ‘mpif.h’ (#include “mpi.h” ^ey ijh]jZff gZ
yaud_Kb 
MPI-ijh]jZffZ — wlh fgh`_kl\h iZjZee_evguo \aZbfh^_ckl\mxsbo ijhp_kkh\ <k_ ijhp_kku ihjh`^Zxlky h^bg jZa h[jZamy iZjZee_evgmx qZklv
ijh]jZffu < oh^_ \uiheg_gby MPI-ijh]jZffu ihjh`^_gb_ ^hihegbl_evguo ijhp_kkh\ beb mgbqlh`_gb_ kms_kl\mxsbo g_ ^himkdZ_lky \ MPI-2.0
lZdZy \hafh`ghklv ihy\beZkv  DZ`^uc ijhp_kk jZ[hlZ_l \ k\h_f Z^j_kghf
ijhkljZgkl\_gbdZdboh[sboi_j_f_gguobeb^Zgguo\MPIg_lHkgh\guf
kihkh[hf \aZbfh^_ckl\by f_`^m ijhp_kkZfb y\ey_lky y\gZy ihkuedZ khh[s_gbc
>ey ehdZebaZpbb \aZbfh^_ckl\by iZjZee_evguo ijhp_kkh\ ijh]jZffu
fh`gh kha^Z\Zlv ]jmiiu ijhp_kkh\ ij_^hklZ\eyy bf hl^_evgmx kj_^m ^ey
h[s_gby — dhffmgbdZlhj KhklZ\ h[jZam_fuo ]jmii ijhba\he_g =jmiiu
fh]ml iheghklvx kh\iZ^Zlv \oh^blv h^gZ \ ^jm]mx g_ i_j_k_dZlvky beb
i_j_k_dZlvky qZklbqgh Ijhp_kku fh]ml \aZbfh^_ckl\h\Zlv lhevdh \gmljb
g_dhlhjh]h dhffmgbdZlhjZ khh[s_gby hlijZ\e_ggu_ \ jZaguo
dhffmgbdZlhjZog_i_j_k_dZxlkybg_f_rZxl^jm]^jm]mDhffmgbdZlhju
bf_xl \ yaud_ NhjljZg lbi INTEGER \ yaud_ Kb – ij_^hij_^_e_gguc lbi
MPI_Comm).
6

IjbklZjl_ijh]jZffu\k_]^ZkqblZ_lkyqlh\k_ihjh`^_ggu_ijhp_kkujZ[hlZxl \ jZfdZo \k_h[t_fexs_]h dhffmgbdZlhjZ bf_xs_]h ij_^hij_^_e_ggh_bfyMPI_COMM_WORLDWlhldhffmgbdZlhjkms_kl\m_l\k_]^Zbkem`bl
^ey \aZbfh^_ckl\by \k_o aZims_gguo ijhp_kkh\ MPI-ijh]jZffu Djhf_
g_]h ijb klZjl_ ijh]jZffu bf__lky dhffmgbdZlhj MPI_COMM_SELF,
kh^_j`Zsbc lhevdh h^bg l_dmsbc ijhp_kk Z lZd`_ dhffmgbdZlhj
MPI_COMM_NULL g_ kh^_j`Zsbc gb h^gh]h ijhp_kkZ <k_ \aZbfh^_ckl\by
ijhp_kkh\ ijhl_dZxl \ jZfdZo hij_^_e_ggh]h dhffmgbdZlhjZ khh[s_gby
i_j_^Zggu_\jZaguodhffmgbdZlhjZogbdZdg_f_rZxl^jm]^jm]m
DZ`^uc ijhp_kk MPI-ijh]jZffu bf__l \ dZ`^hc ]jmii_ \ dhlhjmx hg
\oh^bl mgbdZevguc Zljb[ml ghf_j ijhp_kkZ dhlhjuc y\ey_lky p_euf
g_hljbpZl_evguf qbkehf K ihfhsvx wlh]h Zljb[mlZ ijhbkoh^bl
agZqbl_evgZy qZklv \aZbfh^_ckl\by ijhp_kkh\ f_`^m kh[hc Ykgh qlh \
h^ghfblhf`_dhffmgbdZlhj_\k_ijhp_kkubf_xljZaebqgu_ghf_jZGh
ihkdhevdm ijhp_kk fh`_l h^gh\j_f_ggh \oh^blv \ jZagu_ dhffmgbdZlhju
lh_]hghf_j\h^ghfdhffmgbdZlhj_fh`_lhlebqZlvkyhl_]hghf_jZ\^jm]hf Hlkx^Z klZgh\ylky ihgylgufb ^\Z hkgh\guo Zljb[mlZ ijhp_kkZ
dhffmgbdZlhjbghf_j\dhffmgbdZlhj_?keb]jmiiZkh^_j`blnijhp_kkh\
lhghf_jex[h]hijhp_kkZ\^Zgghc]jmii_e_`bl\ij_^_eZohl^hn – 1.
Hkgh\guf kihkh[hf h[s_gby ijhp_kkh\ f_`^m kh[hc y\ey_lky y\gZy
ihkuedZ khh[s_gbc Khh[s_gb_ — wlh gZ[hj ^Zgguo g_dhlhjh]h lbiZ
DZ`^h_ khh[s_gb_ bf__l g_kdhevdh Zljb[mlh\ \ qZklghklb ghf_j
ijhp_kkZ-hlijZ\bl_ey ghf_j ijhp_kkZ-ihemqZl_ey b^_glbnbdZlhj
khh[s_gby b ^jm]b_ H^gbf ba \Z`guo Zljb[mlh\ khh[s_gby y\ey_lky _]h
b^_glbnbdZlhj beb lw] Ih b^_glbnbdZlhjm ijhp_kk ijbgbfZxsbc
khh[s_gb_ gZijbf_j fh`_l jZaebqblv ^\Z khh[s_gby ijbr_^rb_ d g_fm
hl h^gh]h b lh]h `_ ijhp_kkZ KZf b^_glbnbdZlhj khh[s_gby y\ey_lky p_euf g_hljbpZl_evguf qbkehf e_`Zsbf \ ^bZiZahg_ hl 0 ^h MPI_TAG_UP,
ijbq_f ]ZjZglbjm_lky qlh MPI_TAG_UP g_ f_gvr_ 32767 >ey jZ[hlu k
Zljb[mlZfb khh[s_gbc \\_^_g fZkkb\ \ yaud_ Kb – kljmdlmjZ  we_f_glu
dhlhjh]h^Zxl^hklmidboagZq_gbyf
< ihke_^g_f Zj]mf_gl_ \ yaud_ Kb – \ \ha\jZsZ_fhf agZq_gbb nmgdpbb 
[hevrbgkl\hijhp_^mj03,\ha\jZsZxlbgnhjfZpbxh[mki_rghklbaZ\_jr_gby < kemqZ_ mki_rgh]h \uiheg_gby \ha\jZsZ_lky agZq_gb_
MPI_SUCCESSbgZq_ – dh^hrb[db<b^hrb[dbdhlhjZyijhbahreZijb\uiheg_gbb ijhp_^mju fh`gh [m^_l hij_^_eblv ba __ hibkZgby
Ij_^hij_^_e_ggu_ agZq_gby khhl\_lkl\mxsb_ jZaebqguf hrb[hqguf
kblmZpbyfi_j_qbke_gu\nZce_mpif.h.

7

H[sb_ijhp_^mju03,
<^ZgghfjZa^_e_fuhklZgh\bfkygZh[sboijhp_^mjZoMPIg_k\yaZgguok
i_j_kuedhc ^Zgguo ;hevrbgkl\h ijhp_^mj wlh]h jZa^_eZ g_h[oh^bfu
ijZdlbq_kdb\dZ`^hckh^_j`Zl_evghciZjZee_evghcijh]jZff_
MPI_INIT(IERR)
INTEGER IERR

BgbpbZebaZpbyiZjZee_evghcqZklbijh]jZffu<k_^jm]b_ijhp_^mju03,
fh]ml [ulv \ua\Zgu lhevdh ihke_ \uah\Z MPI_INIT BgbpbZebaZpby iZjZee_evghc qZklb ^ey dZ`^h]h ijbeh`_gby ^he`gZ \uihegylvky lhevdh h^bg
jZa < yaud_ Kb nmgdpbb MPI_Init i_j_^Zxlky mdZaZl_eb gZZj]mf_gludhfZg^ghckljhdbijh]jZffu argcb argvbadhlhjuokbkl_fhcfh]mlba\e_dZlvky b i_j_^Z\Zlvky \ iZjZee_evgu_ ijhp_kku g_dhlhju_ iZjZf_lju aZimkdZijh]jZffu
MPI_FINALIZE(IERR)
INTEGER IERR

AZ\_jr_gb_iZjZee_evghcqZklbijbeh`_gby<k_ihke_^mxsb_h[jZs_gbyd
ex[ufijhp_^mjZf03,\lhfqbke_dMPI_INITaZij_s_guDfhf_glm\uah\Z MPI_FINALIZEdZ`^ufijhp_kkhfijh]jZffu\k_^_ckl\bylj_[mxsb_
_]hmqZklby\h[f_g_khh[s_gbyfb^he`gu[ulvaZ\_jr_gu
Ijbf_jijhkl_cr_c03,-ijh]jZffugZyaud_NhjljZg\u]ey^blke_^mxsbf
h[jZahf
program example1
include ‘mpif.h’
integer ierr
print *, ‘Before MPI_INIT’
call MPI_INIT(ierr)
print *, ‘Parallel section’
call MPI_FINALIZE(ierr)
print *, ‘After MPI_FINALIZE’
end

< aZ\bkbfhklb hl j_ZebaZpbb MPI kljhqdb ‘Before MPI_INIT’ b ‘After
MPI_FINALIZE’fh`_li_qZlZlveb[hh^bg\u^_e_ggucijhp_kkeb[h\k_aZims_ggu_ijhp_kkuijbeh`_gbyKljhqdm ‘Parallel section’^he`gugZi_qZlZlv \k_ ijhp_kku Ihjy^hd \u\h^Z kljhd k jZaguo ijhp_kkh\ fh`_l
[ulvijhba\hevguf
H[sZy ko_fZ 03,-ijh]jZffu gZ yaud_ Kb \u]ey^bl ijbf_jgh ke_^mxsbf
h[jZahf

8

#include “mpi.h”
main(int argc, char **argv)
{
…
MPI_Init(&argc, &argv);
…
MPI_Finalize();
…
}

>jm]b_iZjZee_evgu_ijh]jZffugZyaud_Kbkbkihevah\Zgb_fl_ogheh]bb
MPI fh`gh gZclb gZijbf_j \ <uqbkebl_evghf iheb]hg_
http://polygon.parallel.ru.
MPI_INITIALIZED(FLAG, IERR)
LOGICAL FLAG
INTEGER IERR

Ijhp_^mjZ \ha\jZsZ_l \ Zj]mf_gl_ FLAG agZq_gb_ .TRUE. _keb \ua\ZgZ ba
iZjZee_evghcqZklbijbeh`_gbybagZq_gb_ .FALSE. -\ijhlb\ghfkemqZ_
Wlh _^bgkl\_ggZy ijhp_^mjZ 03, dhlhjmx fh`gh \ua\Zlv ^h \uah\Z
MPI_INIT.
MPI_COMM_SIZE(COMM, SIZE, IERR)
INTEGER COMM, SIZE, IERR
< Zj]mf_gl_ SIZE ijhp_^mjZ \ha\jZsZ_l qbkeh iZjZee_evguo ijhp_kkh\ \
dhffmgbdZlhj_COMM.
MPI_COMM_RANK(COMM, RANK, IERR)
INTEGER COMM, RANK, IERR
< Zj]mf_gl_ RANK ijhp_^mjZ \ha\jZsZ_l ghf_j ijhp_kkZ \ dhffmgbdZlhj_
COMM ?keb ijhp_^mjZ MPI_COMM_SIZE ^ey lh]h `_ dhffmgbdZlhjZ COMM
\_jgmeZ agZq_gb_ SIZE lh agZq_gb_ \ha\jZsZ_fh_ ijhp_^mjhc
MPI_COMM_RANKq_j_ai_j_f_ggmxRANKe_`bl\^bZiZahg_hl0^hSIZE-1.

<ke_^mxs_fijbf_j_dZ`^ucaZims_ggucijhp_kki_qZlZ_lk\hcmgbdZevguc ghf_j \ dhffmgbdZlhj_ MPI_COMM_WORLD b qbkeh ijhp_kkh\ \ ^Zgghf
dhffmgbdZlhj_
program example2
include ‘mpif.h’
integer ierr, size, rank
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
print *, ‘process ’, rank, ‘, size ’, size
call MPI_FINALIZE(ierr)
end

9

KljhdZ khhl\_lkl\mxsZy \uah\m ijhp_^mju print[m^_l\u\_^_gZklhevdh
jZa kdhevdh ijhp_kkh\ [ueh ihjh`^_gh ijb aZimkd_ ijh]jZffu Ihjy^hd
ihy\e_gbykljhdaZjZg__g_hij_^_e_gbfh`_l[ulv\hh[s_]h\hjyex[uf
=ZjZglbjm_lkylhevdhlhqlhkh^_j`bfh_hl^_evguokljhdg_[m^_li_j_f_rZgh^jm]k^jm]hf
DOUBLE PRECISION MPI_WTIME(IERR)
INTEGER IERR

WlZ nmgdpby \ha\jZsZ_l gZ \ua\Z\r_f ijhp_kk_ Zkljhghfbq_kdh_ \j_fy \
k_dmg^Zo \_s_kl\_ggh_qbkeh^\hcghclhqghklb ijhr_^r__kg_dhlhjh]h
fhf_glZ\ijhrehf?kebg_dhlhjucmqZklhdijh]jZffuhdjm`blv\uah\Zfb
^ZgghcnmgdpbblhjZaghklv\ha\jZsZ_fuoagZq_gbcihdZ`_l\j_fyjZ[hlu
^Zggh]h mqZkldZ =ZjZglbjm_lky qlh fhf_gl \j_f_gb bkihevam_fuc \
dZq_kl\_lhqdbhlkq_lZg_[m^_lbaf_g_gaZ\j_fykms_kl\h\Zgbyijhp_kkZ
AZf_lbf qlh wlZ nmgdpby \ha\jZsZ_l j_amevlZl k\h_c jZ[hlu g_ q_j_a
iZjZf_lju Z y\guf h[jZahf LZcf_ju jZaguo ijhp_kkhjh\ fh]ml [ulv g_
kbgojhgbabjh\Zgub\u^Z\ZlvjZaebqgu_agZq_gbywlhfh`ghhij_^_eblvih
agZq_gbxiZjZf_ljZMPI_WTIME_IS_GLOBAL (1 –kbgojhgbabjh\Zgu0 -g_l 
DOUBLE PRECISION MPI_WTICK(IERR)
INTEGER IERR

Nmgdpby\ha\jZsZ_ljZaj_r_gb_lZcf_jZgZ\ua\Z\r_fijhp_kk_\k_dmg^Zo
WlZnmgdpbylZd`_\ha\jZsZ_lj_amevlZlk\h_cjZ[hlug_q_j_aiZjZf_ljuZ
y\gufh[jZahf
MPI_GET_PROCESSOR_NAME(NAME, LEN, IERR)
CHARACTER*(*) NAME
INTEGER LEN, IERR
Ijhp_^mjZ\ha\jZsZ_l\kljhd_ NAMEbfymaeZgZdhlhjhfaZims_g\ua\Z\rbcijhp_kk<i_j_f_gghcLEN\ha\jZsZ_lkydhebq_kl\hkbf\heh\\bf_gb
g_ ij_\urZxs__ agZq_gby dhgklZglu MPI_MAX_PROCESSOR_NAME K

ihfhsvx wlhc ijhp_^mju fh`gh hij_^_eblv gZ dZdb_ bf_ggh nbabq_kdb_
ijhp_kkhju[uebkieZgbjh\Zguijhp_kkuMPI-ijbeh`_gby

< ke_^mxs_c ijh]jZff_ gZ dZ`^hf ijhp_kk_ hij_^_eyxlky ^\_ oZjZdl_jbklbdbkbkl_fgh]hlZcf_jZ_]hjZaj_r_gb_b\j_fylj_[m_fh_gZaZf_j\j_f_gb ^ey mkj_^g_gby ihemqZ_fh]h agZq_gby \uihegy_lky NTIMES aZf_jh\ 
LZd`_ \ ^Zgghf ijbf_j_ ihdZaZgh bkihevah\Zgb_ ijhp_^mju
MPI_GET_PROCESSOR_NAME.

10

program example3
include 'mpif.h'
integer ierr, rank, len, i, NTIMES
parameter (NTIMES = 100)
character*(MPI_MAX_PROCESSOR_NAME) name
double precision time_start, time_finish, tick
call MPI_INIT(ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
call MPI_GET_PROCESSOR_NAME(name, len, ierr)
tick = MPI_WTICK(ierr)
time_start = MPI_WTIME(ierr)
do i = 1, NTIMES
time_finish = MPI_WTIME(ierr)
end do
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
print *, 'processor ', name(1:len),
&
', process ', rank, ': tick = ', tick,
&
', time = ', (time_finish-time_start)/NTIMES
call MPI_FINALIZE(ierr)
end

AZ^Zgby
• Hldhfibebjh\Zlvbijh\_jblvwnn_dlb\ghklv\uiheg_gbyijh]jZffu
\uqbke_gby qbkeZ Ib gZ jZaebqghf qbke_ ijhp_kkhjh\ ijh]jZffZ
h[uqgh\oh^bl\dZq_kl\_l_klh\h]hijbf_jZ\dhfie_dlihklZ\dbMPI
b
fh`_l
gZoh^blvky
gZijbf_j
\
nZceZo
/usr/local/examples/mpi/fpi.f beb cpi.c).
• Fh`gh eb \ ijhp_kk_ jZ[hlu 03,-ijh]jZffu ihjh`^Zlv gh\u_ ijhp_kku_keb\dZdhc-lhfhf_glihy\bebkvk\h[h^gu_ijhp_kkhju"
• Fh`_l eb 03,-ijh]jZffZ ijh^he`Zlv jZ[hlm ihke_ Z\Zjbcgh]h
aZ\_jr_gbyh^gh]hbaijhp_kkh\"
• Hij_^_eblvkdhevdhijhp_kkh\\uihegyxll_dklijh]jZffu^h\uah\Z
ijhp_^mjuMPI_INITbihke_\uah\Zijhp_^mjuMPI_FINALIZE.
• Hij_^_eblv kbgojhgbah\Zgu eb lZcf_ju jZaguo ijhp_kkh\
dhgdj_lghckbkl_fu

I_j_^ZqZijb_fkhh[s_gbcf_`^mhl^_evgufb
ijhp_kkZfb
IjZdlbq_kdb\k_ijh]jZffugZibkZggu_kbkihevah\Zgb_fdhffmgbdZpbhgghcl_ogheh]bbMPI^he`gukh^_j`Zlvkj_^kl\Zg_lhevdh^eyihjh`^_gby
baZ\_jr_gbyiZjZee_evguoijhp_kkh\ghb^ey\aZbfh^_ckl\byaZims_gguo

11

ijhp_kkh\ f_`^m kh[hc LZdh_ \aZbfh^_ckl\b_ hkms_kl\ey_lky \ MPI
ihkj_^kl\hfy\ghcihkuedbkhh[s_gbc
<k_ ijhp_^mju i_j_^Zqb khh[s_gbc \ 03, ^_eylky gZ ^\_ ]jmiiu < h^gm
]jmiim \oh^yl ijhp_^mju dhlhju_ ij_^gZagZq_gu ^ey \aZbfh^_ckl\by
lhevdh ^\mo ijhp_kkh\ ijh]jZffu LZdb_ hi_jZpbb gZau\Zxlky bg^b\b^mZevgufbbebhi_jZpbyfblbiZlhqdZ-lhqdZIjhp_^mju^jm]hc]jmiiuij_^iheZ]Zxlqlh\hi_jZpbx^he`gu[ulv\h\e_q_gu\k_ijhp_kkug_dhlhjh]h
dhffmgbdZlhjZLZdb_hi_jZpbbgZau\Zxlkydhee_dlb\gufb
GZqg_f hibkZgb_ ijhp_^mj h[f_gZ khh[s_gbyfb k h[km`^_gby hi_jZpbc
lbiZ lhqdZ-lhqdZ < lZdbo \aZbfh^_ckl\byo mqZkl\mxl ^\Z ijhp_kkZ
ijbq_f h^bg ijhp_kk y\ey_lky hlijZ\bl_e_f khh[s_gby Z ^jm]hc –
ihemqZl_e_f Ijhp_kk-hlijZ\bl_ev ^he`_g \ua\Zlv h^gm ba ijhp_^mj
i_j_^Zqb ^Zgguo b y\gh mdZaZlv ghf_j \ g_dhlhjhf dhffmgbdZlhj_
ijhp_kkZ-ihemqZl_ey Z ijhp_kk-ihemqZl_ev ^he`_g \ua\Zlv h^gm ba
ijhp_^mj ijb_fZ k mdZaZgb_f lh]h `_ dhffmgbdZlhjZ ijbq_f \ g_dhlhjuo
kemqZyo hg fh`_l g_ agZlv lhqguc ghf_j ijhp_kkZ-hlijZ\bl_ey \ ^Zgghf
dhffmgbdZlhj_
<k_ijhp_^mju^Zgghc]jmiiu\k\hxhq_j_^vlZd`_^_eylkygZ^\ZdeZkkZ
ijhp_^mju k [ehdbjh\dhc k kbgojhgbaZpb_c  b ijhp_^mju [_a [ehdbjh\db
Zkbgojhggu_ Ijhp_^mjuh[f_gZk[ehdbjh\dhcijbhklZgZ\eb\ZxljZ[hlm
ijhp_kkZ^h\uiheg_gbyg_dhlhjh]hmkeh\byZ\ha\jZlbaZkbgojhgguoijhp_^mj ijhbkoh^bl g_f_^e_ggh ihke_ bgbpbZebaZpbb khhl\_lkl\mxs_c dhffmgbdZpbhgghc hi_jZpbb G_ZddmjZlgh_ bkihevah\Zgb_ ijhp_^mj k [ehdbjh\dhcfh`_lijb\_klbd\hagbdgh\_gbxlmibdh\hckblmZpbbihwlhfmijb
wlhf lj_[m_lky ^hihegbl_evgZy hklhjh`ghklv Bkihevah\Zgb_ Zkbgojhgguo
hi_jZpbc d lmibdh\uf kblmZpbyf g_ ijb\h^bl h^gZdh lj_[m_l [he__ ZddmjZlgh]hbkihevah\ZgbyfZkkb\h\^Zgguo
I_j_^ZqZijb_fkhh[s_gbck[ehdbjh\dhc
MPI_SEND(BUF, COUNT, DATATYPE, DEST, MSGTAG, COMM, IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, DEST, MSGTAG, COMM, IERR
;ehdbjmxsZy ihkuedZ fZkkb\Z BUF k b^_glbnbdZlhjhf MSGTAG khklhys_]h
ba COUNTwe_f_glh\lbiZ DATATYPEijhp_kkmkghf_jhf DEST\dhffmgbdZlhj_COMM<k_we_f_gluihkueZ_fh]hkhh[s_gby^he`gu[ulvjZkiheh`_gu
ih^jy^\[mn_j_BUFHi_jZpbygZqbgZ_lkyg_aZ\bkbfhhllh]h[ueZebbgb-

pbZebabjh\ZgZ khhl\_lkl\mxsZy ijhp_^mjZ ijb_fZ Ijb wlhf khh[s_gb_
fh`_l [ulv kdhibjh\Zgh dZd g_ihkj_^kl\_ggh \ [mn_j ijb_fZ lZd b ihf_s_gh\g_dhlhjuckbkl_fguc[mn_j _kebwlhij_^mkfhlj_gh\MPI AgZq_gb_ COUNT fh`_l[ulvgme_fIjhp_kkmjZaj_rZ_lkyi_j_^Z\Zlvkhh[s_gb_
12

kZfhfmk_[_h^gZdhwlhg_[_ahiZkghbfh`_lijb\_klbd\hagbdgh\_gbxlmibdh\hckblmZpbbIZjZf_lj DATATYPEbf__l\yaud_NhjljZglbi INTEGER
\yaud_Kb–ij_^hij_^_e_gguclbiMPI_Datatype Lbii_j_^Z\Z_fuowe_f_glh\ ^he`_g mdZau\Zlvky k ihfhsvx ij_^hij_^_e_gguo dhgklZgl lbiZ
i_j_qbke_gguo^eyyaudZNhjljZg\ke_^mxs_clZ[ebp_
Lbi^Zgguo\MPI

Lbi^Zgguo\NhjljZg_

MPI_INTEGER
MPI_REAL
MPI_DOUBLE_PRECISION
MPI_COMPLEX
MPI_LOGICAL
MPI_CHARACTER
MPI_BYTE

INTEGER
REAL
DOUBLE PRECISION
COMPLEX
LOGICAL
CHARACTER(1)
[blbkihevam_lky^eyi_j_^Zqb
g_lbibabjh\Zgguo^Zgguo
lbi^eymiZdh\Zgguo^Zgguo

MPI_PACKED

?keb bkihevam_fuc k MPI [Zah\uc yaud bf__l ^hihegbl_evgu_ lbiu
^Zgguo lh khhl\_lkl\mxsb_ lbiu ^he`gu [ulv h[_ki_q_gu b \ MPI.
Iheguc kibkhd ij_^hij_^_e_gguo bf_g lbih\ ^Zgguo i_j_qbke_g \ nZce_
mpif.h (mpi.h).
Ijb i_j_kued_ khh[s_gbc fh`gh bkihevah\Zlv ki_pbZevgh_ agZq_gb_
MPI_PROC_NULL ^ey g_kms_kl\mxs_]h ijhp_kkZ Hi_jZpbb k lZdbf
ijhp_kkhf aZ\_jrZxlky g_f_^e_ggh k dh^hf aZ\_jr_gby MPI_SUCCESS.
GZijbf_j^eyi_j_kuedbkhh[s_gbyijhp_kkmkghf_jhfgZ_^bgbpm[hevr_
fh`gh\hkihevah\Zlvkyke_^mxsbfnjZ]f_glhf
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
next = rank+1
if(next .eq. size) next = MPI_PROC_NULL
call MPI_SEND(buf, 1, MPI_REAL, next,
&
5, MPI_COMM_WORLD, ierr)

<wlhfkemqZ_ijhp_kkkihke_^gbfghf_jhfg_hkms_kl\blgbdZdhcj_Zevghcihkuedb^ZgguoZkjZamihc^_l\uihegylvijh]jZffm^Zevr_
;ehdbjh\dZ]ZjZglbjm_ldhjj_dlghklvih\lhjgh]hbkihevah\Zgby\k_oiZjZf_ljh\ ihke_ \ha\jZlZ ba ijhp_^mju Wlh hagZqZ_l qlh ihke_ \ha\jZlZ ba
MPI_SEND fh`gh bkihevah\Zlv ex[u_ ijbkmlkl\mxsb_ \ \uah\_ ^Zgghc
ijhp_^mju i_j_f_ggu_ [_a hiZk_gby bkihjlblv i_j_^Z\Z_fh_ khh[s_gb_
<u[hj kihkh[Z hkms_kl\e_gby wlhc ]ZjZglbb dhibjh\Zgb_ \ ijhf_`mlhqguc[mn_jbebg_ihkj_^kl\_ggZyi_j_^ZqZijhp_kkm DESThklZ_lkyaZjZajZ[hlqbdZfbdhgdj_lghcj_ZebaZpbb03,

13

Ke_^m_lki_pbZevghhlf_lblvqlh\ha\jZlbaijhp_^mju MPI_SEND g_hagZqZ_lgblh]hqlhkhh[s_gb_ihemq_ghijhp_kkhf DESTgblh]hqlhkhh[s_gb_ihdbgmehijhp_kkhjgucwe_f_glgZdhlhjhf\uihegy_lkyijhp_kk\uihegb\rbc ^Zgguc \uah\ Ij_^hklZ\ey_lky lhevdh ]ZjZglby [_ahiZkgh]h
baf_g_gby i_j_f_gguo bkihevah\Zgguo \ \uah\_ ^Zgghc ijhp_^mju
Ih^h[gZy g_hij_^_e_gghklv ^Ze_dh g_ \k_]^Z mkljZb\Z_l ihevah\Zl_ey
Qlh[u jZkrbjblv \hafh`ghklb i_j_^Zqb khh[s_gbc \ MPI \\_^_gu
^hihegbl_evgu_ ljb ijhp_^mju <k_ iZjZf_lju m wlbo ijhp_^mj lZdb_ `_
dZdbmMPI_SENDh^gZdhmdZ`^hcbagbo_klvk\hyhkh[_gghklv
MPIij_^hklZ\ey_lke_^mxsb_fh^bnbdZpbbijhp_^mjui_j_^Zqb^Zgguok
[ehdbjh\dhcMPI_SEND:
• MPI_BSEND — i_j_^ZqZ khh[s_gby k [mn_jbaZpb_c. ?keb ijb_f
ihkueZ_fh]h khh[s_gby _s_ g_ [ue bgbpbZebabjh\Zg ijhp_kkhfihemqZl_e_f lh khh[s_gb_ [m^_l aZibkZgh \ ki_pbZevguc [mn_j b
ijhbahc^_l g_f_^e_gguc \ha\jZl ba ijhp_^mju <uiheg_gb_ ^Zgghc
ijhp_^mju gbdZd g_ aZ\bkbl hl khhl\_lkl\mxs_]h \uah\Z ijhp_^mju
ijb_fZ khh[s_gby L_f g_ f_g__ ijhp_^mjZ fh`_l \_jgmlv dh^
hrb[db_kebf_klZih^[mn_jg_^hklZlhqghH\u^_e_gbbfZkkb\Z^ey
[mn_jbaZpbb^he`_gaZ[hlblvkyihevah\Zl_ev
• MPI_SSEND — i_j_^ZqZkhh[s_gbykkbgojhgbaZpb_c<uoh^ba^Zgghc
ijhp_^mju ijhbahc^_l lhevdh lh]^Z dh]^Z ijb_f ihkueZ_fh]h
khh[s_gby [m^_l bgbpbZebabjh\Zg ijhp_kkhf-ihemqZl_e_f LZdbf
h[jZahf aZ\_jr_gb_ i_j_^Zqb k kbgojhgbaZpb_c ]h\hjbl g_ lhevdh h
\hafh`ghklb ih\lhjgh]h bkihevah\Zgby [mn_jZ ihkuedb gh b h
]ZjZglbjh\Zgghf ^hklb`_gbb ijhp_kkhf-ihemqZl_e_f lhqdb ijb_fZ
khh[s_gby \ ijh]jZff_ Bkihevah\Zgb_ i_j_^Zqb khh[s_gbc k
kbgojhgbaZpb_c fh`_l aZf_^eblv \uiheg_gb_ ijh]jZffu gh
iha\hey_l ba[_`Zlv gZebqby \ kbkl_f_ [hevrh]h dhebq_kl\Z g_
ijbgyluo[mn_jbah\Zgguokhh[s_gbc
• MPI_RSEND — i_j_^ZqZkhh[s_gbyih]hlh\ghklb>Zgghcijhp_^mjhc
fh`ghihevah\Zlvkylhevdh\lhfkemqZ__kebijhp_kk-ihemqZl_evm`_
bgbpbbjh\Zeijb_fkhh[s_gby<ijhlb\ghfkemqZ_\uah\ijhp_^mju
\hh[s_ ]h\hjy y\ey_lky hrb[hqguf b j_amevlZl __ \uiheg_gby g_
hij_^_e_g =ZjZglbjh\Zlv bgbpbZebaZpbx ijb_fZ khh[s_gby i_j_^
\uah\hf ijhp_^mju MPI_RSEND fh`gh k ihfhsvx hi_jZpbc
hkms_kl\eyxsbo y\gmx beb g_y\gmx kbgojhgbaZpbx ijhp_kkh\
gZijbf_j MPI_BARRIER beb MPI_SSEND  <h fgh]bo j_ZebaZpbyo
ijhp_^mjZ MPI_RSEND khdjZsZ_l ijhlhdhe \aZbfh^_ckl\by f_`^m
hlijZ\bl_e_f b ihemqZl_e_f mf_gvrZy gZdeZ^gu_ jZkoh^u gZ
hj]ZgbaZpbxi_j_^Zqb^Zgguo

14

Ihevah\Zl_ev^he`_ggZagZqblvgZihkueZxs_fijhp_kk_ki_pbZevgucfZkkb\dhlhjuc[m^_lbkihevah\Zlvky^ey[mn_jbaZpbbkhh[s_gbcijb\uah\_
ijhp_^mjuMPI_BSEND.
MPI_BUFFER_ATTACH(BUF, SIZE, IERR)
<type> BUF(*)
INTEGER SIZE, IERR
GZagZq_gb_fZkkb\Z BUFjZaf_jZ SIZE^eybkihevah\Zgbyijbihkued_khh[-

s_gbc k [mn_jbaZpb_c < dZ`^hf ijhp_kk_ fh`_l [ulv lhevdh h^bg lZdhc
[mn_j :kkhpbbjh\Zgguc k [mn_jhffZkkb\g_ke_^m_lbkihevah\Zlv\ijh]jZff_ ^ey ^jm]bo p_e_c JZaf_j fZkkb\Z \u^_ey_fh]h ^ey [mn_jbaZpbb
^he`_g ij_\hkoh^blv h[sbc jZaf_j khh[s_gby dZd fbgbfmf gZ \_ebqbgm
hij_^_ey_fmxdhgklZglhcMPI_BSEND_OVERHEAD.
MPI_BUFFER_DETACH(BUF, SIZE, IERR)
<type> BUF(*)
INTEGER SIZE, IERR

Hk\h[h`^_gb_\u^_e_ggh]h[mn_jgh]hfZkkb\Z^ey_]hbkihevah\Zgby\^jm]bop_eyoIjhp_^mjZ\ha\jZsZ_l\Zj]mf_glZoBUFbSIZEZ^j_kbjZaf_jhk\h[h`^Z_fh]h fZkkb\Z <ua\Z\rbc ijhp_^mjmijhp_kk[ehdbjm_lky^hlh]h
fhf_glZdh]^Z\k_khh[s_gbymc^mlba^Zggh]h[mn_jZ
H[uqgh\MPI\u^_ey_lkyg_dhlhjuch[t_fiZfylb^ey[mn_jbaZpbbihkueZ_fuokhh[s_gbcH^gZdhqlh[ug_iheZ]ZlvkygZhkh[_gghklbdhgdj_lghc
j_ZebaZpbb j_dhf_g^m_lky y\gh \u^_eylv \ ijh]jZff_ ^hklZlhqguc [mn_j
^ey\k_oi_j_kuehdk[mn_jbaZpb_c
<ke_^mxs_fijbf_j_ihdZaZghbkihevah\Zgb_i_j_^Zqbkhh[s_gbyk[mn_jbaZpb_c>ey[mn_jbaZpbb\u^_ey_lkyfZkkb\ bufihke_aZ\_jr_gbyi_j_kuedb hg hk\h[h`^Z_lky JZaf_j g_h[oh^bfh]h [mn_jZ hij_^_ey_lky
jZaf_jhfkhh[s_gby h^ghp_eh_qbkeh–[ZclZ iexkagZq_gb_dhgklZglu
MPI_BSEND_OVERHEAD.

15

program example4
include 'mpif.h'
integer BUFSIZE
parameter (BUFSIZE = 4 + MPI_BSEND_OVERHEAD)
byte buf(BUFSIZE)
integer rank, ierr, ibufsize, rbuf
integer status(MPI_STATUS_SIZE)
call MPI_INIT(ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
if(rank .eq. 0) then
call MPI_BUFFER_ATTACH(buf, BUFSIZE, ierr)
call MPI_BSEND(rank, 1, MPI_INTEGER, 1, 5,
&
MPI_COMM_WORLD, ierr)
call MPI_BUFFER_DETACH(buf, ibufsize, ierr)
end if
if(rank .eq. 1) then
call MPI_RECV(rbuf, 1, MPI_INTEGER, 0, 5,
&
MPI_COMM_WORLD, status, ierr)
print *, 'Process 1 received ', rbuf, ' from process ',
&
status(MPI_SOURCE)
end if
call MPI_FINALIZE(ierr)
end
MPI_RECV(BUF, COUNT, DATATYPE, SOURCE, MSGTAG, COMM, STATUS,
IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, SOURCE, MSGTAG, COMM, IERR,
STATUS(MPI_STATUS_SIZE)
;ehdbjmxsbcijb_f\[mn_j BUFg_[he__ COUNTwe_f_glh\khh[s_gbylbiZ
DATATYPEkb^_glbnbdZlhjhf MSGTAG hlijhp_kkZkghf_jhf SOURCE\dhffmgbdZlhj_ COMMkaZiheg_gb_ffZkkb\ZZljb[mlh\ijboh^ys_]hkhh[s_gby
STATUS?kebqbkehj_Zevghijbgyluowe_f_glh\f_gvr_agZq_gby COUNTlh
]ZjZglbjm_lky qlh \ [mn_j_ BUF baf_gylky lhevdh we_f_glu

khhl\_lkl\mxsb_ we_f_glZf ijbgylh]h khh[s_gby ?keb dhebq_kl\h
we_f_glh\\ijbgbfZ_fhfkhh[s_gbb[hevr_agZq_gby COUNTlh\hagbdZ_l
hrb[dZ i_j_iheg_gby Qlh[u ba[_`Zlv wlh]h fh`gh kgZqZeZ hij_^_eblv
kljmdlmjm ijboh^ys_]h khh[s_gby ijb ihfhsb ijhp_^mju MPI_PROBE
(MPI_IPROBE  ?keb gm`gh magZlv lhqgh_ qbkeh we_f_glh\ \ ijbgbfZ_fhf
khh[s_gbb lh fh`gh \hkihevah\Zlvky ijhp_^mjhc MPI_GET_COUNT.
;ehdbjh\dZ ]ZjZglbjm_l qlh ihke_ \ha\jZlZ ba ijhp_^mju MPI_RECV \k_
we_f_glukhh[s_gbym`_[m^mlijbgylubjZkiheh`_gu\[mn_j_BUF.
Gb`_ijb\_^_gijbf_jijh]jZffu\dhlhjhcgme_\hcijhp_kkihkueZ_lkhh[s_gb_ ijhp_kkm k ghf_jhf h^bg b `^_l hl g_]h hl\_lZ ?keb ijh]jZffZ
[m^_l aZims_gZ k [hevrbf qbkehf ijhp_kkh\ lh j_Zevgh \uihegylv i_j_kuedb\k_jZ\ghklZgmllhevdhgme_\hcbi_j\ucijhp_kkuHklZevgu_ijhp_kkuihke_bobgbpbZebaZpbbijhp_^mjhc MPI_INITgZi_qZlZxlgZqZevgu_
16

agZq_gby i_j_f_gguo a b b ihke_ q_]h aZ\_jrZlky \uihegb\ ijhp_^mjm
MPI_FINALIZE.
program example5
include 'mpif.h'
integer ierr, size, rank
real a, b
integer status(MPI_STATUS_SIZE)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
a = 0.0
b = 0.0
if(rank .eq. 0) then
b = 1.0
call MPI_SEND(b, 1, MPI_REAL, 1, 5,
&
MPI_COMM_WORLD, ierr);
call MPI_RECV(a, 1, MPI_REAL, 1, 5,
&
MPI_COMM_WORLD, status, ierr);
else
if(rank .eq. 1) then
a = 2.0
call MPI_RECV(b, 1, MPI_REAL, 0, 5,
&
MPI_COMM_WORLD, status, ierr);
call MPI_SEND(a, 1, MPI_REAL, 0, 5,
&
MPI_COMM_WORLD, ierr);
end if
end if
print *, 'process ', rank,' a = ', a, ', b = ', b
call MPI_FINALIZE(ierr)
end

<ke_^mxs_fijbf_j_dZ`^ucijhp_kkkq_lgufghf_jhfihkueZ_lkhh[s_gb_ k\h_fm khk_^m k ghf_jhf gZ _^bgbpm [hevrbf >hihegbl_evgh ihklZ\e_gZ ijh\_jdZ ^ey ijhp_kkZ k fZdkbfZevguf ghf_jhf qlh[u hg g_ ihkeZe
khh[s_gb_ g_kms_kl\mxs_fm ijhp_kkm AgZq_gby i_j_f_gghc b baf_gylky
lhevdhgZijhp_kkZokg_q_lgufbghf_jZfb
program example6
include 'mpif.h'
integer ierr, size, rank, a, b
integer status(MPI_STATUS_SIZE)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
a = rank
b = -1
if(mod(rank, 2) .eq. 0) then
if(rank+1 .lt. size) then
&ihkueZxl\k_ijhp_kkudjhf_ihke_^g_]h
call MPI_Send(a, 1, MPI_INTEGER, rank+1, 5,
17

&

MPI_COMM_WORLD, ierr);

end if
else
call MPI_Recv(b, 1, MPI_INTEGER, rank-1, 5,
&
MPI_COMM_WORLD, status, ierr);
end if
print *, 'process ', rank,' a = ', a, ', b = ', b
call MPI_FINALIZE(ierr)
end

Ijbijb_f_khh[s_gby\f_klhZj]mf_glh\ SOURCEb MSGTAGfh`ghbkihevah\Zlvke_^mxsb_ij_^hij_^_e_ggu_dhgklZglu
• MPI_ANY_SOURCE — ijbagZd lh]h qlh ih^oh^bl khh[s_gb_ hl ex[h]h
ijhp_kkZ
• MPI_ANY_TAG — ijbagZd lh]h qlh ih^oh^bl khh[s_gb_ k ex[uf
b^_glbnbdZlhjhf
Ijbh^gh\j_f_gghfbkihevah\Zgbbwlbo^\modhgklZgl[m^_lijbgylhkhh[s_gb_kex[ufb^_glbnbdZlhjhfhlex[h]hijhp_kkZ
J_Zevgu_ Zljb[mlu ijbgylh]h khh[s_gby \k_]^Z fh`gh hij_^_eblv ih
khhl\_lkl\mxsbf we_f_glZf fZkkb\Z status < NhjljZg_ iZjZf_lj status
y\ey_lky p_ehqbke_gguf fZkkb\hf jZaf_jZ MPI_STATUS_SIZE. DhgklZglu
MPI_SOURCE, MPI_TAGbMPI_ERRORy\eyxlkybg^_dkZfbih^ZgghfmfZkkb\m
^ey^hklmiZdagZq_gbyfkhhl\_lkl\mxsboihe_c
• status(MPI_SOURCE) — ghf_jijhp_kkZ-hlijZ\bl_eykhh[s_gby
• status(MPI_TAG) — b^_glbnbdZlhjkhh[s_gby
• status(MPI_ERROR) — dh^ hrb[db.
< yaud_ Kb iZjZf_lj status y\ey_lky kljmdlmjhc ij_^hij_^_e_ggh]h lbiZ
MPI_StatuskiheyfbMPI_SOURCE, MPI_TAGbMPI_ERROR.
H[jZlbf \gbfZgb_ gZ g_dhlhjmx g_kbff_ljbqghklv hi_jZpbc ihkuedb b
ijb_fZ khh[s_gbc K ihfhsvx dhgklZglu MPI_ANY_SOURCE fh`gh ijbgylv
khh[s_gb_hlex[h]hijhp_kkZH^gZdh\kemqZ_ihkuedb^Zgguolj_[m_lky
y\ghmdZaZlvghf_jijbgbfZxs_]hijhp_kkZ
<klZg^Zjl_h]h\hj_ghqlh_kebh^bgijhp_kkihke_^h\Zl_evghihkueZ_l^\Z
khh[s_gby khhl\_lkl\mxsb_ h^ghfm b lhfm `_ \uah\m MPI_RECV ^jm]hfm
ijhp_kkm lh i_j\uf [m^_l ijbgylh khh[s_gb_ dhlhjh_ [ueh hlijZ\e_gh
jZgvr_ <f_kl_ k l_f _keb ^\Z khh[s_gby [ueb h^gh\j_f_ggh hlijZ\e_gu
jZagufbijhp_kkZfblhihjy^hdboihemq_gbyijbgbfZxsbfijhp_kkhfaZjZg__g_hij_^_e_g
18

MPI_GET_COUNT(STATUS, DATATYPE, COUNT, IERR)
INTEGER COUNT, DATATYPE, IERR, STATUS(MPI_STATUS_SIZE)
IhagZq_gbxiZjZf_ljZ STATUSijhp_^mjZhij_^_ey_lqbkeh COUNTm`_ijbgyluo ihke_h[jZs_gbyd MPI_RECV bebijbgbfZ_fuo ihke_h[jZs_gbyd
MPI_PROBE beb MPI_IPROBE  we_f_glh\ khh[s_gby lbiZ DATATYPE >ZggZy

ijhp_^mjZ \ qZklghklb g_h[oh^bfZ ^ey hij_^_e_gby jZaf_jZ h[eZklb iZfylb\u^_ey_fhc^eyojZg_gbyijbgbfZ_fh]hkhh[s_gby

MPI_PROBE(SOURCE, MSGTAG, COMM, STATUS, IERR)
INTEGER SOURCE, MSGTAG, COMM, IERR, STATUS(MPI_STATUS_SIZE)
Ihemq_gb_ \ fZkkb\_ STATUS bgnhjfZpbb h kljmdlmj_ h`b^Z_fh]h khh[s_gby k b^_glbnbdZlhjhf MSGTAG hl ijhp_kkZ k ghf_jhf SOURCE \
dhffmgbdZlhj_ COMM k [ehdbjh\dhc <ha\jZlZ ba ijhp_^mju g_ ijhbahc^_l

^h l_o ihj ihdZ khh[s_gb_ k ih^oh^ysbf b^_glbnbdZlhjhf b ghf_jhf
ijhp_kkZ-hlijZ\bl_ey g_ [m^_l ^hklmigh ^ey ihemq_gby Ke_^m_l hkh[h
h[jZlblv \gbfZgb_ gZ lh qlh ijhp_^mjZ hij_^_ey_l lhevdh nZdl ijboh^Z
khh[s_gby gh j_Zevgh _]h g_ ijbgbfZ_l ?keb ihke_ \uah\Z MPI_PROBE
\uau\Z_lky MPI_RECV k lZdbfb `_ iZjZf_ljZfb lh [m^_l ijbgylh lh `_
kZfh_khh[s_gb_bgnhjfZpbyhdhlhjhf[ueZihemq_gZkihfhsvx\uah\Z
ijhp_^mjuMPI_PROBE.
Ke_^mxsbc ijbf_j ^_fhgkljbjm_l ijbf_g_gb_ ijhp_^mju MPI_PROBE ^ey
hij_^_e_gbykljmdlmjuijboh^ys_]hkhh[s_gbyIjhp_kk0`^_lkhh[s_gby
hlex[h]hbaijhp_kkh\ 1b 2kh^gbfbl_f`_l_]hfH^gZdhihkueZ_fu_
wlbfbijhp_kkZfb^Zggu_bf_xljZaguclbi>eylh]hqlh[uhij_^_eblv\
dZdmx i_j_f_ggmx ihf_sZlv ijboh^ys__ khh[s_gb_ ijhp_kk kgZqZeZ ijb
ihfhsb\uah\Z MPI_PROBEhij_^_ey_lhldh]h`_bf_gghihklmibehwlhkhh[s_gb_Ke_^mxsbcg_ihkj_^kl\_gghihke_ MPI_PROBE\uah\ MPI_RECV]ZjZglbjh\Zgghijbf_lgm`gh_khh[s_gb_ihke_q_]hijbgbfZ_lkykhh[s_gb_
hl^jm]h]hijhp_kkZ
program example7
include 'mpif.h'
integer rank, ierr, ibuf, status(MPI_STATUS_SIZE)
real rbuf
call MPI_INIT(ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
ibuf = rank
rbuf = 1.0 * rank
if(rank .eq. 1) call MPI_SEND(ibuf, 1, MPI_INTEGER, 0, 5,
&
MPI_COMM_WORLD, ierr)
if(rank .eq. 2) call MPI_SEND(rbuf, 1, MPI_REAL, 0, 5,
&
MPI_COMM_WORLD, ierr)
if(rank .eq. 0) then
call MPI_PROBE(MPI_ANY_SOURCE, 5, MPI_COMM_WORLD,
&
status, ierr)
19

if(status(MPI_SOURCE) .EQ. 1) then
call MPI_RECV(ibuf, 1, MPI_INTEGER, 1, 5,
&
MPI_COMM_WORLD, status, ierr)
call MPI_RECV(rbuf, 1, MPI_REAL, 2, 5,
&
MPI_COMM_WORLD, status, ierr)
else
if(status(MPI_SOURCE) .EQ. 2) then
call MPI_RECV(rbuf, 1, MPI_REAL, 2, 5,
&
MPI_COMM_WORLD, status, ierr)
call MPI_RECV(ibuf, 1, MPI_INTEGER, 1, 5,
&
MPI_COMM_WORLD, status, ierr)
end if
end if
print *, 'Process 0 recv ', ibuf, ' from process 1, ',
&
rbuf, ' from process 2'
end if
call MPI_FINALIZE(ierr)
end

<ke_^mxs_fijbf_j_fh^_ebjm_lkyihke_^h\Zl_evguch[f_gkhh[s_gbyfb
f_`^m^\mfyijhp_kkZfbaZf_jy_lky\j_fygZh^gmbl_jZpbxh[f_gZhij_^_ey_lkyaZ\bkbfhklv\j_f_gbh[f_gZhl^ebgukhh[s_gbyLZdbfh[jZahf
hij_^_eyxlky [Zah\u_ oZjZdl_jbklbdb dhffmgbdZpbhgghc k_lb iZjZee_evgh]h dhfivxl_jZ eZl_glghklv \j_fy gZ i_j_^Zqm khh[s_gby gme_\hc
^ebgu bfZdkbfZevgh^hklb`bfZyijhimkdgZykihkh[ghklv dhebq_kl\hf_]Z[Zcl\k_dmg^m dhffmgbdZpbhgghck_lbZlZd`_^ebgZkhh[s_gbcgZdhlhjhchgZ^hklb]Z_lkyDhgklZglZNMAXaZ^Z_lh]jZgbq_gb_gZfZdkbfZevgmx
^ebgm ihkueZ_fh]h khh[s_gby Z dhgklZglZ NTIMES hij_^_ey_l dhebq_kl\h
ih\lhj_gbc ^ey mkj_^g_gby j_amevlZlZ KgZqZeZ ihkueZ_lky khh[s_gb_
gme_\hc ^ebgu ^ey hij_^_e_gby eZl_glghklb aZl_f ^ebgZ khh[s_gbc
m^\Zb\Z_lkygZqbgZykihkuedbh^gh]hwe_f_glZlbiZreal*8.
program example8
include 'mpif.h'
integer ierr, rank, size, i, n, lmax, NMAX, NTIMES
parameter (NMAX = 1 000 000, NTIMES = 10)
double precision time_start, time, bandwidth, max
real*8 a(NMAX)
integer status(MPI_STATUS_SIZE)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
time_start = MPI_WTIME(ierr)
n = 0
max = 0.0
lmax = 0
do while(n .le. NMAX)
time_start = MPI_WTIME(ierr)
20

do i = 1, NTIMES
if(rank .eq. 0) then
call MPI_SEND(a, n, MPI_DOUBLE_PRECISION, 1, 1,
&
MPI_COMM_WORLD, ierr)
call MPI_RECV(a, n, MPI_DOUBLE_PRECISION, 1, 1,
&
MPI_COMM_WORLD, status, ierr)
end if
if(rank .eq. 1) then
call MPI_RECV(a, n, MPI_DOUBLE_PRECISION, 0, 1,
&
MPI_COMM_WORLD, status, ierr)
call MPI_SEND(a, n, MPI_DOUBLE_PRECISION, 0, 1,
&
MPI_COMM_WORLD, ierr)
end if
enddo
time = (MPI_WTIME(ierr)-time_start)/2/NTIMES
bandwidth = (8*n*1.d0/(2**20))/time
if(max .lt. bandwidth) then
max = bandwidth
lmax = 8*n
end if
if(rank .eq. 0) then
if(n .eq. 0) then
print *, 'latency = ', time, ' seconds'
else
print *, 8*n, ' bytes, bandwidth =', bandwidth,
&
' Mb/s'
end if
end if
if(n .eq. 0) then
n = 1
else
n = 2*n
end if
end do
if(rank .eq. 0) then
print *, 'max bandwidth =', max, ' Mb/s , length =',
&
lmax, ' bytes'
end if
call MPI_FINALIZE(ierr)
end

I_j_^ZqZijb_fkhh[s_gbc[_a[ehdbjh\db
< MPI ij_^mkfhlj_g gZ[hj ijhp_^mj ^ey hkms_kl\e_gby Zkbgojhgghc
i_j_^Zqb^Zgguo<hlebqb_hl[ehdbjmxsboijhp_^mj\ha\jZlbaijhp_^mj
^Zgghc]jmiiuijhbkoh^blkjZamihke_\uah\Z[_adZdhc-eb[hhklZgh\dbjZ[hlu ijhp_kkh\ GZ nhg_ ^Zevg_cr_]h \uiheg_gby ijh]jZffu h^gh\j_f_gghijhbkoh^blbh[jZ[hldZZkbgojhgghaZims_gghchi_jZpbb

21

< ijbgpbi_ ^ZggZy \hafh`ghklv bkdexqbl_evgh ihe_agZ ^ey kha^Zgby wnn_dlb\guo ijh]jZff < kZfhf ^_e_ ijh]jZffbkl agZ_l qlh \ g_dhlhjuc
fhf_gl_fmihlj_[m_lkyfZkkb\dhlhjuc\uqbkey_l^jm]hcijhp_kkHgaZjZg__ \uklZ\ey_l \ ijh]jZff_ Zkbgojhgguc aZijhk gZ ihemq_gb_ ^Zggh]h
fZkkb\ZZ^hlh]hfhf_glZdh]^ZfZkkb\j_Zevghihlj_[m_lkyhgfh`_l\uihegylv ex[mx ^jm]mx ihe_agmx jZ[hlm Hiylv `_ \h fgh]bo kemqZyo kh\_jr_gghg_h[yaZl_evgh^h`b^ZlvkyhdhgqZgbyihkuedbkhh[s_gby^ey\uiheg_gby ihke_^mxsbo \uqbke_gbc >ey aZ\_jr_gby Zkbgojhggh]h h[f_gZ
lj_[m_lky \uah\ ^hihegbl_evghc ijhp_^mju dhlhjZy ijh\_jy_l aZ\_jrbeZkvebhi_jZpbybeb^h`b^Z_lky__aZ\_jr_gbyLhevdhihke_wlh]hfh`gh
bkihevah\Zlv [mn_j ihkuedb ^ey ^jm]bo p_e_c [_a hiZk_gby aZihjlblv hlijZ\ey_fh_khh[s_gb_
?keb _klv \hafh`ghklv hi_jZpbb ijb_fZi_j_^Zqb khh[s_gbc kdjulv gZ
nhg_\uqbke_gbclhwlbf\jh^_[ugZ^h[_ah]h\hjhqghihevah\ZlvkyH^gZdh gZ ijZdlbd_ g_ \k_ \k_]^Z kh]eZkm_lky k l_hjb_c Fgh]h_ aZ\bkbl hl
dhgdj_lghcj_ZebaZpbbDkh`Ze_gbx^Ze_dhg_\k_]^ZZkbgojhggu_hi_jZpbb wnn_dlb\gh ih^^_j`b\Zxlky ZiiZjZlmjhc b kbkl_fguf hdjm`_gb_f
Ihwlhfm g_ klhbl m^b\eylvky _keb wnn_dl hl \uiheg_gby \uqbke_gbc gZ
nhg_ i_j_kuehd hdZ`_lky gme_\uf beb kh\k_f g_[hevrbf K^_eZggu_
aZf_qZgby dZkZxlky lhevdh \hijhkh\ wnn_dlb\ghklb < hlghr_gbb
ij_^hklZ\ey_fhc nmgdpbhgZevghklb Zkbgojhggu_ hi_jZpbb bkdexqbl_evgh
ihe_agu ihwlhfm hgb ijbkmlkl\mxl ijZdlbq_kdb \ dZ`^hc j_Zevghc
ijh]jZff_
MPI_ISEND(BUF, COUNT, DATATYPE, DEST, MSGTAG, COMM, REQUEST,
IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, DEST, MSGTAG, COMM, REQUEST, IERR
G_[ehdbjmxsZy ihkuedZ ba [mn_jZ BUF COUNT we_f_glh\ khh[s_gby lbiZ
DATATYPE k b^_glbnbdZlhjhf MSGTAG ijhp_kkm DEST dhffmgbdZlhjZ COMM.

<ha\jZlbaijhp_^mjuijhbkoh^blkjZamihke_bgbpbZebaZpbbijhp_kkZi_j_^Zqb [_a h`b^Zgby h[jZ[hldb \k_]h khh[s_gby gZoh^ys_]hky \ [mn_j_
BUFWlhhagZqZ_lqlhg_evayih\lhjghbkihevah\Zlv^Zgguc[mn_j^ey^jm]bop_e_c[_aihemq_gby^hihegbl_evghcbgnhjfZpbbih^l\_j`^Zxs_caZ\_jr_gb_ ^Zgghc ihkuedb Hij_^_eblv lhl fhf_gl \j_f_gb dh]^Z fh`gh
ih\lhjghbkihevah\Zlv[mn_j BUF[_ahiZk_gbybkihjlblvi_j_^Z\Z_fh_khh[s_gb_ fh`gh k ihfhsvx \ha\jZsZ_fh]h iZjZf_ljZ REQUEST b ijhp_^mj
k_f_ckl\ MPI_WAIT b MPI_TEST IZjZf_lj REQUEST bf__l \ yaud_ NhjljZg
lbi INTEGER \yaud_Kb–ij_^hij_^_e_gguclbi MPI_Request bbkihevam_lky^eyb^_glbnbdZpbbdhgdj_lghcg_[ehdbjmxs_chi_jZpbb
:gZeh]bqgh lj_f fh^bnbdZpbyf ijhp_^mju MPI_SEND ij_^mkfhlj_gu ljb
^hihegbl_evguo\ZjbZglZijhp_^mjuMPI_ISEND:
22

• MPI_IBSEND — g_[ehdbjmxsZyi_j_^ZqZkhh[s_gbyk[mn_jbaZpb_c
• MPI_ISSEND — g_[ehdbjmxsZyi_j_^ZqZkhh[s_gbykkbgojhgbaZpb_c
• MPI_IRSEND — g_[ehdbjmxsZyi_j_^ZqZkhh[s_gbyih]hlh\ghklb
Dbaeh`_gghc\ur_k_fZglbd_jZ[hluwlboijhp_^mj^h[Z\ey_lkyhlkmlkl\b_
[ehdbjh\db
MPI_IRECV(BUF, COUNT, DATATYPE, SOURCE, MSGTAG, COMM, REQUEST,
IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, SOURCE, MSGTAG, COMM, REQUEST, IERR
G_[ehdbjmxsbc ijb_f \ [mn_j BUF g_ [he__ COUNT we_f_glh\ khh[s_gby
lbiZ DATATYPEkb^_glbnbdZlhjhf MSGTAG hlijhp_kkZkghf_jhf SOURCE\
dhffmgbdZlhj_ COMM k aZiheg_gb_f fZkkb\Z STATUS < hlebqb_ hl [ehdb-

jmxs_]hijb_fZ\ha\jZlbaijhp_^mjuijhbkoh^blkjZamihke_bgbpbZebaZpbbijhp_kkZijb_fZ[_ah`b^Zgbyihemq_gby\k_]hkhh[s_gbyb_]haZibkb
\[mn_j_BUFHdhgqZgb_ijhp_kkZijb_fZfh`ghhij_^_eblvkihfhsvxiZjZf_ljZREQUESTbijhp_^mjk_f_ckl\MPI_WAIT bMPI_TEST.

Khh[s_gb_hlijZ\e_ggh_ex[hcbaijhp_^mjMPI_SEND, MPI_ISENDbex[hc
balj_obofh^bnbdZpbcfh`_l[ulvijbgylhex[hcbaijhp_^mj MPI_RECV
bMPI_IRECV.
H[jZlbf hkh[h_ \gbfZgb_ gZ lh qlh ^h aZ\_jr_gby g_[ehdbjmxs_c
hi_jZpbbg_ke_^m_laZibku\Zlv\bkihevam_fucfZkkb\^Zgguo
MPI_IPROBE(SOURCE, MSGTAG, COMM, FLAG, STATUS, IERR)
LOGICAL FLAG
INTEGER SOURCE, MSGTAG, COMM, IERR, STATUS(MPI_STATUS_SIZE)
Ihemq_gb_ \ fZkkb\_ STATUS bgnhjfZpbb h kljmdlmj_ h`b^Z_fh]h khh[s_gby k b^_glbnbdZlhjhf MSGTAG hl ijhp_kkZ k ghf_jhf SOURCE \
dhffmgbdZlhj_ COMM [_a [ehdbjh\db < iZjZf_lj_ FLAG \ha\jZsZ_lky
agZq_gb_ .TRUE. _keb khh[s_gb_ k ih^oh^ysbfb Zljb[mlZfb m`_ fh`_l

[ulv ijbgylh \ wlhf kemqZ_ ^_ckl\b_ ijhp_^mju iheghklvx ZgZeh]bqgh
MPI_PROBE bagZq_gb_ .FALSE._kebkhh[s_gbykmdZaZggufbZljb[mlZfb
_s_g_l
MPI_WAIT(REQUEST, STATUS, IERR)
INTEGER REQUEST, IERR, STATUS(MPI_STATUS_SIZE)

H`b^Zgb_aZ\_jr_gbyZkbgojhgghchi_jZpbbZkkhpbbjh\Zgghckb^_glbnbdZlhjhf REQUEST b aZims_gghc \uah\hf ijhp_^mju MPI_ISEND beb
MPI_IRECVIhdZZkbgojhggZyhi_jZpbyg_[m^_laZ\_jr_gZijhp_kk\uihegb\rbc ijhp_^mjm MPI_WAIT [m^_l aZ[ehdbjh\Zg >ey hi_jZpbb
g_[ehdbjmxs_]hijb_fZhij_^_ey_lkyiZjZf_lj STATUSIhke_\uiheg_gby
23

ijhp_^mju
b^_glbnbdZlhj
g_[ehdbjmxs_c
mklZgZ\eb\Z_lky\agZq_gb_MPI_REQUEST_NULL.

hi_jZpbb

REQUEST

MPI_WAITALL(COUNT, REQUESTS, STATUSES, IERR)
INTEGER COUNT, REQUESTS(*), STATUSES(MPI_STATUS_SIZE,*), IERR
H`b^Zgb_ aZ\_jr_gby COUNT Zkbgojhgguo hi_jZpbc Zkkhpbbjh\Zgguo k
b^_glbnbdZlhjZfb fZkkb\Z REQUESTS >ey hi_jZpbc g_[ehdbjmxsbo
ijb_fh\ hij_^_eyxlky khhl\_lkl\mxsb_ iZjZf_lju \ fZkkb\_ STATUSES.

?keb\h\j_fyh^ghcbebg_kdhevdbohi_jZpbch[f_gZ\hagbdebhrb[dblh
ihe_ hrb[db \ we_f_glZo fZkkb\Z STATUSES [m^_l mklZgh\e_gh \
khhl\_lkl\mxs__agZq_gb_Ihke_\uiheg_gbyijhp_^mjukhhl\_lkl\mxsb_
REQUESTS
we_f_glu
iZjZf_ljZ
mklZgZ\eb\Zxlky
\
agZq_gb_
MPI_REQUEST_NULL.
Gb`_ihdZaZgijbf_jnjZ]f_glZijh]jZffu\dhlhjhc\k_ijhp_kkuh[f_gb\Zxlky khh[s_gbyfb k [eb`Zcrbfb khk_^yfb \ khhl\_lkl\bb k lhiheh]b_cdhevpZijbihfhsbg_[ehdbjmxsbohi_jZpbcAZf_lbfqlhbkihevah\Zgb_^eywlbop_e_c[ehdbjmxsbohi_jZpbcfh]ehijb\_klbd\hagbdgh\_gbxlmibdh\hckblmZpbb
program example9
include 'mpif.h'
integer ierr, rank, size, prev, next, reqs(4), buf(2)
integer stats(MPI_STATUS_SIZE, 4)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
prev = rank - 1
next = rank + 1
if (rank .eq. 0) prev = size - 1
if (rank .eq. size - 1) next = 0
call MPI_IRECV(buf(1), 1, MPI_INTEGER, prev, 5,
&
MPI_COMM_WORLD, reqs(1), ierr)
call MPI_IRECV(buf(2), 1, MPI_INTEGER, next, 6,
&
MPI_COMM_WORLD, reqs(2), ierr)
call MPI_ISEND(rank, 1, MPI_INTEGER, prev, 6,
&
MPI_COMM_WORLD, reqs(3), ierr)
call MPI_ISEND(rank, 1, MPI_INTEGER, next, 5,
&
MPI_COMM_WORLD, reqs(4), ierr)
call MPI_WAITALL(4, reqs, stats, ierr);
print *, ‘process ’, rank,
&
‘ prev=’, buf(1), ‘ next=’, buf(2)
call MPI_FINALIZE(ierr)
end
MPI_WAITANY(COUNT, REQUESTS, INDEX, STATUS, IERR)
INTEGER COUNT, REQUESTS(*), INDEX, STATUS(MPI_STATUS_SIZE), IERR
H`b^Zgb_ aZ\_jr_gby h^ghc ba COUNT Zkbgojhgguo hi_jZpbc Zkkhpbbjh\Zgguokb^_glbnbdZlhjZfb REQUESTS?kebdfhf_glm\uah\ZaZ\_jrbebkv
24

g_kdhevdh ba h`b^Z_fuo hi_jZpbc lh kemqZcguf h[jZahf [m^_l \u[jZgZ
h^gZbagboIZjZf_lj INDEX kh^_j`blghf_jwe_f_glZ\fZkkb\_ REQUESTS,
kh^_j`Zs_]h b^_glbnbdZlhj aZ\_jr_gghc hi_jZpbb >ey g_[ehdbjmxs_]h
ijb_fZ hij_^_ey_lky iZjZf_lj STATUS Ihke_ \uiheg_gby ijhp_^mju khhl\_lkl\mxsbc we_f_gl iZjZf_ljZ REQUESTS mklZgZ\eb\Z_lky \ agZq_gb_
MPI_REQUEST_NULL.
MPI_WAITSOME(INCOUNT, REQUESTS, OUTCOUNT, INDEXES, STATUSES,
IERR)
INTEGER INCOUNT, REQUESTS(*), OUTCOUNT, INDEXES(*), IERR,
STATUSES(MPI_STATUS_SIZE,*)
H`b^Zgb_aZ\_jr_gbyohly[uh^ghcbaINCOUNTZkbgojhgguohi_jZpbcZkkhpbbjh\Zgguo k b^_glbnbdZlhjZfb REQUESTS IZjZf_lj OUTCOUNT kh^_j`bl qbkeh aZ\_jr_gguo hi_jZpbc Z i_j\u_ OUTCOUNT we_f_glh\ fZkkb\Z
INDEXES kh^_j`Zl ghf_jZ we_f_glh\ fZkkb\Z REQUESTS k bo b^_glbnbdZlhjZfb I_j\u_ OUTCOUNT we_f_glh\ fZkkb\Z STATUSES kh^_j`Zl iZjZf_lju

aZ\_jr_gguo hi_jZpbc ^ey g_[ehdbjmxsbo ijb_fh\  Ihke_ \uiheg_gby
ijhp_^mju khhl\_lkl\mxsb_ we_f_glu iZjZf_ljZ REQUESTS mklZgZ\eb\Zxlky\agZq_gb_MPI_REQUEST_NULL.

< ke_^mxs_f ijbf_j_ ^_fhgkljbjm_lky ko_fZ bkihevah\Zgby ijhp_^mju
MPI_WAITSOME^eyhj]ZgbaZpbbdhffmgbdZpbhgghcko_fu³master-slave´ \k_
ijhp_kku h[sZxlky k h^gbf \u^_e_gguf ijhp_kkhf  <k_ ijhp_kku djhf_
ijhp_kkZ 0gZdZ`^hcbl_jZpbbpbdeZhij_^_eyxlkihfhsvx\uah\Zijhp_^mju slavek\hxehdZevgmxqZklvfZkkb\Z aihke_q_]hihkueZxl__]eZ\ghfmijhp_kkmIjhp_kk 0kgZqZeZbgbpbZebabjm_lg_[ehdbjmxsb_ijb_fu
hl\k_ohklZevguoijhp_kkh\ihke_q_]h^h`b^Z_lkyijboh^Zohly[uh^gh]h
khh[s_gby>eyijbr_^rbokhh[s_gbcijhp_kk0\uau\Z_lijhp_^mjmh[jZ[hldb masterihke_q_]hkgh\Z\uklZ\ey_lg_[ehdbjmxsb_ijb_fuLZdbf
h[jZahf ijhp_kk 0 h[jZ[Zlu\Z_l l_ ihjpbb ^Zgguo dhlhju_ ]hlh\u gZ
^Zgguc fhf_gl Ijb wlhf ^ey dhjj_dlghklb jZ[hlu ijh]jZffu gm`gh
h[_ki_qblvqlh[uijhp_kk 0mki_\Zeh[jZ[hlZlvijboh^ysb_khh[s_gbylh
_klv qlh[u ijhp_^mjZ slave jZ[hlZeZ agZqbl_evgh ^hevr_ ijhp_^mju
master \ijhlb\ghfkemqZ_bjZkiZjZee_eb\Zgb_g_bf__lhkh[h]hkfukeZ 
Djhf_lh]h\ijbf_j_gZibkZg[_kdhg_qgucpbdeihwlhfm^eydhgdj_lghc
ijh]jZffugm`ghij_^mkfhlj_lvmkeh\b_aZ\_jr_gby

25

program example10
include 'mpif.h'
integer rank, size, ierr, N, MAXPROC
parameter(N = 1000, MAXPROC = 128)
integer req(MAXPROC), num, indexes(MAXPROC)
integer statuses(MPI_STATUS_SIZE, MAXPROC)
double precision a(N, MAXPROC)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
if(rank .ne. 0) then
do while(.TRUE.)
call slave(a, N)
call MPI_SEND(a, N, MPI_DOUBLE_PRECISION, 0, 5,
&
MPI_COMM_WORLD, ierr)
end do
else
do i = 1, size-1
call MPI_IRECV(a(1, i), N, MPI_DOUBLE_PRECISION, i,
&
5, MPI_COMM_WORLD, req(i), ierr)
end do
do while(.TRUE.)
call MPI_WAITSOME(size-1, req, num, indexes,
&
statuses, ierr)
do i = 1, num
call master(a(1, indexes(i)), N)
call MPI_IRECV(a(1, indexes(i)), N,
&
MPI_DOUBLE_PRECISION,
&
indexes(i), 5, MPI_COMM_WORLD,
&
req(indexes(i)), ierr)
end do
end do
end if
call MPI_FINALIZE(ierr)
end
subroutine slave(a, n)
double precision a
integer n
&h[jZ[hldZehdZevghcqZklbfZkkb\ZD
end
subroutine master(a, n)
double precision a
integer n
&h[jZ[hldZfZkkb\ZD
End

26

MPI_TEST(REQUEST, FLAG, STATUS, IERR)
LOGICAL FLAG
INTEGER REQUEST, IERR, STATUS(MPI_STATUS_SIZE)
Ijh\_jdZ aZ\_jr_gghklb Zkbgojhgghchi_jZpbb MPI_ISENDbeb MPI_IRECV,
Zkkhpbbjh\Zgghckb^_glbnbdZlhjhf REQUEST<iZjZf_lj_ FLAG\ha\jZsZ_lkyagZq_gb_ .TRUE._kebhi_jZpbyaZ\_jr_gZbagZq_gb_ .FALSE. -\ijhlb\ghf kemqZ_ \ yaud_ Kb – 1 beb 0 khhl\_lkl\_ggh  ?kebaZ\_jr_gZijh-

p_^mjZ ijb_fZ lh Zljb[mlu b ^ebgm ihemq_ggh]h khh[s_gby fh`gh
hij_^_eblv h[uqguf h[jZahf k ihfhsvx iZjZf_ljZ STATUS Ihke_
\uiheg_gby ijhp_^mju khhl\_lkl\mxsbc we_f_gl iZjZf_ljZ REQUEST
mklZgZ\eb\Z_lky\agZq_gb_MPI_REQUEST_NULL.
MPI_TESTALL(COUNT, REQUESTS, FLAG, STATUSES, IERR)
LOGICAL FLAG
INTEGER COUNT, REQUESTS(*), STATUSES(MPI_STATUS_SIZE,*), IERR
Ijh\_jdZ aZ\_jr_gghklb COUNT Zkbgojhgguo hi_jZpbc Zkkhpbbjh\Zgguok
b^_glbnbdZlhjZfb REQUESTS < iZjZf_lj_ FLAG ijhp_^mjZ \ha\jZsZ_l agZq_gb_ .TRUE. \ yaud_ Kb – 1  _keb \k_ hi_jZpbb Zkkhpbbjh\Zggu_ k mdZ-

aZggufb b^_glbnbdZlhjZfb aZ\_jr_gu < wlhf kemqZ_ iZjZf_lju
khh[s_gbc[m^mlmdZaZgu\fZkkb\_ STATUSES?kebdZdZy-eb[hbahi_jZpbc
g_aZ\_jrbeZkvlh\ha\jZsZ_lky.FALSE. \yaud_Kb– 0 bhij_^_e_gghklv
we_f_glh\ fZkkb\Z STATUSES g_ ]ZjZglbjm_lky Ihke_ \uiheg_gby
REQUESTS
ijhp_^mju
khhl\_lkl\mxsb_
we_f_glu
iZjZf_ljZ
mklZgZ\eb\Zxlky\agZq_gb_MPI_REQUEST_NULL.
MPI_TESTANY(COUNT, REQUESTS, INDEX, FLAG, STATUS, IERR)
LOGICAL FLAG
INTEGER COUNT, REQUESTS(*), INDEX, STATUS(MPI_STATUS_SIZE), IERR

Ijh\_jdZaZ\_jr_gghklbohly[uh^ghcZkbgojhgghchi_jZpbbZkkhpbbjh\Zgghckb^_glbnbdZlhjhfbafZkkb\ZREQUESTS<iZjZf_lj_FLAG\ha\jZsZ_lky agZq_gb_ .TRUE. \ yaud_ Kb – 1  _keb ohly [u h^gZ ba hi_jZpbc
Zkbgojhggh]hh[f_gZaZ\_jr_gZijbwlhf INDEXkh^_j`blghf_jkhhl\_lkl\mxs_]hwe_f_glZ\fZkkb\_REQUESTSZSTATUS — iZjZf_ljukhh[s_gby<
ijhlb\ghf kemqZ_ \ iZjZf_lj_ FLAG [m^_l \ha\jZs_gh agZq_gb_ .FALSE. \
yaud_Kb– 0 ?kebdfhf_glm\uah\ZaZ\_jrbebkvg_kdhevdhbah`b^Z_fuo
hi_jZpbc lh kemqZcguf h[jZahf [m^_l \u[jZgZ h^gZ ba gbo Ihke_
\uiheg_gby ijhp_^mju khhl\_lkl\mxsbc we_f_gl iZjZf_ljZ REQUESTS
mklZgZ\eb\Z_lky\agZq_gb_MPI_REQUEST_NULL.

27

MPI_TESTSOME(INCOUNT, REQUESTS, OUTCOUNT, INDEXES, STATUSES,
IERR)
INTEGER INCOUNT, REQUESTS(*), OUTCOUNT, INDEXES(*), IERR,
STATUSES(MPI_STATUS_SIZE,*)
:gZeh]ijhp_^mju MPI_WAITSOMEgh\ha\jZlijhbkoh^blg_f_^e_ggh?keb

gbh^gZbal_klbjm_fuohi_jZpbcdfhf_glm\uah\Zg_aZ\_jrbeZkvlhagZq_gb_OUTCOUNT[m^_ljZ\ghgmex

Ke_^mxsbc ijbf_j ^_fhgkljbjm_l ijbf_g_gb_ g_[ehdbjmxsbo hi_jZpbc
^eyj_ZebaZpbbljZgkihgbjh\Zgbyd\Z^jZlghcfZljbpujZkij_^_e_gghcf_`^m ijhp_kkZfb ih kljhdZf KgZqZeZ dZ`^uc ijhp_kk ehdZevgh hij_^_ey_l
nlkljhdfZkkb\ZaAZl_fijbihfhsbg_[ehdbjmxsbohi_jZpbcMPI_ISEND
b MPI_IRECVbgbpbZebabjmxlky\k_g_h[oh^bfu_^eyljZgkihgbjh\Zgbyh[f_gu ^Zggufb GZ nhg_ gZqbgZxsboky h[f_gh\ dZ`^uc ijhp_kk ljZgkihgbjm_l k\hx ehdZevgmx qZklv fZkkb\Z a Ihke_ wlh]h ijhp_kk ijb ihfhsb
\uah\Z ijhp_^mju MPI_WAITANY ^h`b^Z_lky ijboh^Z khh[s_gby hl ex[h]h
^jm]h]h ijhp_kkZ b ljZgkihgbjm_l ihemq_ggmx hl ^Zggh]h ijhp_kkZ qZklv
fZkkb\Z a H[jZ[hldZ ijh^he`Z_lky ^h l_o ihj ihdZ g_ [m^ml ihemq_gu
khh[s_gby hl \k_o ijhp_kkh\ < dhgp_ bkoh^guc fZkkb\ a b
ljZgkihgbjh\ZggucfZkkb\bjZki_qZlu\Zxlky
program example11
include 'mpif.h'
integer ierr, rank, size, N, nl, i, j
parameter (N = 9)
double precision a(N, N), b(N, N)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
nl = (N-1)/size+1
call work(a, b, N, nl, size, rank)
call MPI_FINALIZE(ierr)
end
subroutine work(a, b, n, nl, size, rank)
include 'mpif.h'
integer ierr, rank, size, n, MAXPROC, nl, i, j, ii, jj, ir
parameter (MAXPROC = 64)
double precision a(nl, n), b(nl, n), c
integer irr, status(MPI_STATUS_SIZE), req(MAXPROC*2)
do i = 1, nl
do j = 1, n
ii = i+rank*nl
if(ii .le. n) a(i, j) = 100*ii+j
end do
end do
do ir = 0, size-1
if(ir .ne. rank)
&
call MPI_IRECV(b(1, ir*nl+1), nl*nl,
28

&
&
&

MPI_DOUBLE_PRECISION, ir,
MPI_ANY_TAG, MPI_COMM_WORLD,
req(ir+1), ierr)
end do
req(rank+1) = MPI_REQUEST_NULL

do ir = 0, size-1
if(ir .ne. rank)
&
call MPI_ISEND(a(1, ir*nl+1), nl*nl,
&
MPI_DOUBLE_PRECISION, ir,
&
1, MPI_COMM_WORLD,
&
req(ir+1+size), ierr)
end do
ir = rank
do i = 1, nl
ii = i+ir*nl
do j = i+1, nl
jj = j+ir*nl
b(i, jj) = a(j, ii)
b(j, ii) = a(i, jj)
end do
b(i, ii) = a(i, ii)
end do
do irr = 1, size-1
call MPI_WAITANY(size, req, ir, status, ierr)
ir = ir-1
do i = 1, nl
ii = i+ir*nl
do j = i+1, nl
jj = j+ir*nl
c = b(i, jj)
b(i, jj) = b(j, ii)
b(j, ii) = c
end do
end do
end do
do i = 1, nl
do j = 1, N
ii = i+rank*nl
if(ii .le. n) print *, 'process ', rank,
&
': a(', ii, ', ', j, ') =', a(i,j),
&
', b(', ii, ', ', j, ') =', b(i,j)
end do
end do
end

29

Hleh`_ggu_aZijhkugZ\aZbfh^_ckl\b_
Ijhp_^mju ^Zgghc ]jmiiu iha\heyxl kgbablv gZdeZ^gu_ jZkoh^u \hagbdZxsb_\jZfdZoh^gh]hijhp_kkhjZijbh[jZ[hld_ijb_fZi_j_^Zqbbi_j_f_s_gbbg_h[oh^bfhcbgnhjfZpbbf_`^mijhp_kkhfbk_l_\ufdhgljhee_jhf QZklh \ ijh]jZff_ ijboh^blky fgh]hdjZlgh \uihegylv h[f_gu k h^bgZdh\ufbiZjZf_ljZfb gZijbf_j\pbde_ <wlhfkemqZ_fh`ghh^bgjZa
bgbpbZebabjh\Zlv hi_jZpbx h[f_gZ b ihlhf fgh]hdjZlgh __ aZimkdZlv g_
ljZly gZ dZ`^hc bl_jZpbb ^hihegbl_evgh]h \j_f_gb gZ bgbpbZebaZpbx b
aZ\_^_gb_khhl\_lkl\mxsbo\gmlj_ggbokljmdlmj^ZgguoDjhf_lh]hlZdbf
h[jZahf g_kdhevdh aZijhkh\ gZ ijb_f bbeb i_j_^Zqm fh]ml h[t_^bgylvky
\f_kl_^eylh]hqlh[u^Ze__bofh`gh[ueh[uaZimklblvh^ghcdhfZg^hc
\ijhq_f wlh kh\k_f g_h[yaZl_evgh ohjhrh ihkdhevdm fh`_l ijb\_klb d
i_j_]jmad_dhffmgbdZpbhgghck_lb 
Kihkh[ ijb_fZ khh[s_gby gbdZd g_ aZ\bkbl hl kihkh[Z _]h ihkuedb khh[s_gb_ hlijZ\e_ggh_ k ihfhsvx hleh`_gguo aZijhkh\ eb[h h[uqguf kihkh[hffh`_l[ulvijbgylhdZdh[uqgufkihkh[hflZdbkihfhsvxhleh`_gguoaZijhkh\
MPI_SEND_INIT(BUF, COUNT, DATATYPE, DEST, MSGTAG, COMM, REQUEST,
IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, DEST, MSGTAG, COMM, REQUEST, IERR

Nhjfbjh\Zgb_hleh`_ggh]haZijhkZgZihkuedmkhh[s_gbyKZfZhi_jZpby
i_j_kuedbijbwlhfg_gZqbgZ_lky
:gZeh]bqgh lj_f fh^bnbdZpbyf ijhp_^mj MPI_SEND b MPI_ISEND ij_^mkfhlj_guljb^hihegbl_evguo\ZjbZglZijhp_^mjuMPI_SEND_INIT:
• MPI_BSEND_INIT — nhjfbjh\Zgb_ hleh`_ggh]h aZijhkZ gZ i_j_^Zqm
khh[s_gbyk[mn_jbaZpb_c
• MPI_SSEND_INIT —  nhjfbjh\Zgb_ hleh`_ggh]h aZijhkZ gZ i_j_^Zqm
khh[s_gbykkbgojhgbaZpb_c
• MPI_RSEND_INIT —  nhjfbjh\Zgb_ hleh`_ggh]h aZijhkZ gZ i_j_^Zqm
khh[s_gbyih]hlh\ghklb
MPI_RECV_INIT(BUF, COUNT, DATATYPE, SOURCE, MSGTAG, COMM,
REQUEST, IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, SOURCE, MSGTAG, COMM, REQUEST, IERR

Nhjfbjh\Zgb_ hleh`_ggh]h aZijhkZ gZ ijb_f khh[s_gby KZfZ hi_jZpby
ijb_fZijbwlhfg_gZqbgZ_lky

30

MPI_START(REQUEST, IERR)
INTEGER REQUEST, IERR

BgbpbZebaZpbyhleh`_ggh]haZijhkZgZ\uiheg_gb_hi_jZpbbh[f_gZkhhl\_lkl\mxs_c agZq_gbx iZjZf_ljZ REQUEST Hi_jZpby aZimkdZ_lky dZd g_[ehdbjmxsZy
MPI_STARTALL(COUNT, REQUESTS, IERR)
INTEGER COUNT, REQUESTS, IERR
BgbpbZebaZpby COUNT hleh`_gguo aZijhkh\ gZ \uiheg_gb_ hi_jZpbc h[f_gZ khhl\_lkl\mxsbo agZq_gbyf i_j\uo COUNT we_f_glh\ fZkkb\Z
REQUESTSHi_jZpbbaZimkdZxlkydZdg_[ehdbjmxsb_

< hlebqb_ hl g_[ehdbjmxsbo hi_jZpbc ih aZ\_jr_gbb \uiheg_gby
hi_jZpbbaZims_gghcijbihfhsbhleh`_ggh]haZijhkZgZ\aZbfh^_ckl\b_
agZq_gb_iZjZf_ljZREQUEST (REQUESTS khojZgy_lkybfh`_lbkihevah\Zlvky
\^Zevg_cr_f
MPI_REQUEST_FREE(REQUEST, IERR)
INTEGER REQUEST, IERR

>ZggZy ijhp_^mjZ m^Zey_l kljmdlmju ^Zgguo k\yaZggu_ k iZjZf_ljhf
REQUESTIhke___\uiheg_gbyiZjZf_ljREQUESTmklZgZ\eb\Z_lky\agZq_gb_
MPI_REQUEST_NULL ?keb hi_jZpby k\yaZggZy k wlbf aZijhkhf m`_
\uihegy_lkylhhgZ[m^_laZ\_jr_gZ
<ke_^mxs_fijbf_j_bgbpbZebabjmxlkyhleh`_ggu_aZijhkugZhi_jZpbb
^\mgZijZ\e_ggh]h h[f_gZ k khk_^gbfb ijhp_kkZfb \ dhevp_\hc lhiheh]bb
KZfb hi_jZpbb aZimkdZxlky gZ dZ`^hc bl_jZpbb ihke_^mxs_]h pbdeZ Ih
aZ\_jr_gbbpbdeZhleh`_ggu_aZijhkum^Zeyxlky
prev = rank - 1
next = rank + 1
if(rank .eq. 0) prev = size - 1
if(rank .eq. size - 1) next = 0
call MPI_RECV_INIT(rbuf(1), 1, MPI_REAL, prev, 5,
&
MPI_COMM_WORLD, reqs(1), ierr)
call MPI_RECV_INIT(rbuf(2), 1, MPI_REAL, next, 6,
&
MPI_COMM_WORLD, reqs(2), ierr)
call MPI_SEND_INIT(sbuf(1), 1, MPI_REAL, prev, 6,
&
MPI_COMM_WORLD, reqs(3), ierr)
call MPI_SEND_INIT(sbuf(2), 1, MPI_REAL, next, 5,
&
MPI_COMM_WORLD, reqs(4), ierr)
do i=...
sbuf(1)=...
sbuf(2)=...
call MPI_STARTALL(4, reqs, ierr)
...
call MPI_WAITALL(4, reqs, stats, ierr);
...
end do
31

call
call
call
call

MPI_REQUEST_FREE(reqs(1),
MPI_REQUEST_FREE(reqs(2),
MPI_REQUEST_FREE(reqs(3),
MPI_REQUEST_FREE(reqs(4),

ierr)
ierr)
ierr)
ierr)

Lmibdh\u_kblmZpbb GHDGORFN 
Bkihevah\Zgb_[ehdbjmxsboijhp_^mjijb_fZbihkuedbk\yaZghk\hafh`guf\hagbdgh\_gb_flmibdh\hckblmZpbbIj_^iheh`bfqlhjZ[hlZxl^\Z
iZjZee_evguoijhp_kkZbhgb^he`guh[f_gylvky^Zggufb;ueh[u\iheg_
_kl_kl\_ggh \ dZ`^hf ijhp_kk_ kgZqZeZ \hkihevah\Zlvky ijhp_^mjhc
MPI_SENDZaZl_fijhp_^mjhcMPI_RECV.Ghbf_gghwlh]hbg_klhbl^_eZlv
>_eh \ lhfqlhfuaZjZg__g_agZ_fdZdj_Zebah\ZgZijhp_^mjZ MPI_SEND.
?keb jZajZ[hlqbdb ^ey ]ZjZglbb dhjj_dlgh]h ih\lhjgh]h bkihevah\Zgby
[mn_jZ ihkuedb aZeh`beb ko_fm ijb dhlhjhc ihkueZxsbc ijhp_kk `^_l
gZqZeZijb_fZlh\hagbdg_ldeZkkbq_kdbclmibdI_j\ucijhp_kkg_fh`_l
\_jgmlvky ba ijhp_^mju ihkuedb ihkdhevdm \lhjhc g_ gZqbgZ_l ijb_f
khh[s_gby:\lhjhcijhp_kkg_fh`_lgZqZlvijb_fkhh[s_gbyihkdhevdm
kZfihihoh`_cijbqbg_aZkljyegZihkued_
?s_om`_kblmZpbydh]^Zh[Zijhp_kkZkgZqZeZihiZ^ZxlgZ[ehdbjmxsmx
ijhp_^mjm ijb_fZ MPI_RECV Z ebrv aZl_f gZ ihkuedm ^Zgguo < lZdhf
kemqZ_lmibd\hagbdg_lg_aZ\bkbfhhlkihkh[Zj_ZebaZpbbijhp_^mjijb_fZ
bihkuedb^Zgguo
ijhp_kk0:

ijhp_kk1:

MPI_RECVhlijhp_kkZ
MPI_SENDijhp_kkm

MPI_RECVhlijhp_kkZ
MPI_SENDijhp_kkm

<hagbdZ_llmibd

ijhp_kk0:

ijhp_kk1:

MPI_SENDijhp_kkm
MPI_RECVhlijhp_kkZ

MPI_SENDijhp_kkm
MPI_RECVhlijhp_kkZ

Fh`_l
\hagbdgmlv
lmibd

JZkkfhljbfjZaebqgu_kihkh[ujZaj_r_gbylmibdh\uokblmZpbc
1. Ijhkl_crbf\ZjbZglhfjZaj_r_gbylmibdh\hckblmZpbb[m^_lbaf_g_gb_
ihjy^dZ ke_^h\Zgby ijhp_^mj ihkuedb b ijb_fZ khh[s_gby gZ hghf ba
ijhp_kkh\dZdihdZaZghgb`_
ijhp_kk0:

ijhp_kk1:

MPI_SENDijhp_kkm
MPI_RECVhlijhp_kkZ

MPI_RECVhlijhp_kkZ
MPI_SENDijhp_kkm

32

Lmibd
g_\hagbdZ_l

2. >jm]bf \ZjbZglhf jZaj_r_gby lmibdh\hc kblmZpbb fh`_l [ulv
bkihevah\Zgb_ g_[ehdbjmxsbo hi_jZpbc AZf_gbf \uah\ ijhp_^mju
ijb_fZkhh[s_gbyk[ehdbjh\dhcgZ\uah\ijhp_^mju MPI_IRECVJZkiheh`bf _]h i_j_^ \uah\hf ijhp_^mju MPI_SEND l_ ij_h[jZam_f njZ]f_glke_^mxsbfh[jZahf
Ijhp_kk0:

ijhp_kk1:

MPI_SENDijhp_kkm
MPI_RECVhlijhp_kkZ

MPI_IRECVhlijhp_kkZ
MPI_SENDijhp_kkm
MPI_WAIT

Lmibd
g_\hagbdZ_l

< lZdhc kblmZpbb lmibd ]ZjZglbjh\Zggh g_ \hagbdg_l ihkdhevdm d fhf_glm\uah\Zijhp_^mjuMPI_SEND aZijhkgZijb_fkhh[s_gbym`_[m^_l
\uklZ\e_g Z agZqbl i_j_^ZqZ ^Zgguo fh`_l gZqZlvky Ijb wlhf
j_dhf_g^m_lky\uklZ\eylvijhp_^mjm MPI_IRECV\ijh]jZff_dZdfh`gh
jZgvr_ qlh[u jZgvr_ ij_^hklZ\blv \hafh`ghklv gZqZeZ i_j_kuedb b
fZdkbfZevghbkihevah\Zlvij_bfms_kl\ZZkbgojhgghklb
3. Lj_lvbf \ZjbZglhf jZaj_r_gby lmibdh\hc kblmZpbb fh`_l [ulv
bkihevah\Zgb_ijhp_^mjuMPI_SENDRECV.
MPI_SENDRECV(SBUF, SCOUNT, STYPE, DEST, STAG, RBUF, RCOUNT,
RTYPE, SOURCE, RTAG, COMM, STATUS, IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNT, STYPE, DEST, STAG, RCOUNT, RTYPE, SOURCE,
RTAG, COMM, STATUS(MPI_STATUS_SIZE), IERR

Ijhp_^mjZ \uihegy_l kh\f_s_ggu_ ijb_f b i_j_^Zqm khh[s_gbc k
[ehdbjh\dhc Ih \uah\m ^Zgghc ijhp_^mju hkms_kl\ey_lky ihkuedZ
SCOUNT we_f_glh\ lbiZ STYPE ba fZkkb\Z SBUF k l_]hf STAG ijhp_kkm k
ghf_jhf DEST \ dhffmgbdZlhj_ COMM b ijb_f \ fZkkb\ RBUF g_ [he__
RCOUNTwe_f_glh\lbiZRTYPE kl_]hfRTAGhlijhp_kkZkghf_jhfSOURCE
\ dhffmgbdZlhj_ COMM >ey ijbgbfZ_fh]h khh[s_gby aZihegy_lky
iZjZf_lj STATUS IjbgbfZxsbc b hlijZ\eyxsbc ijhp_kku fh]ml
y\eylvky h^gbf b l_f `_ ijhp_kkhf ;mn_ju i_j_^Zqb b ijb_fZ ^Zgguo
g_ ^he`gu i_j_k_dZlvky =ZjZglbjm_lky qlh ijb wlhf lmibdh\hc
kblmZpbb g_ \hagbdZ_l Khh[s_gb_ hlijZ\e_ggh_ hi_jZpb_c
MPI_SENDRECV fh`_l [ulv ijbgylh h[uqguf h[jZahf b hi_jZpby
MPI_SENDRECV fh`_l ijbgylv khh[s_gb_ hlijZ\e_ggh_ h[uqghc hi_jZpb_c

33

MPI_SENDRECV_REPLACE(BUF, COUNT, DATATYPE, DEST, STAG, SOURCE,
RTAG, COMM, STATUS, IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, DEST, STAG, SOURCE, RTAG, COMM,
STATUS(MPI_STATUS_SIZE), IERR

Kh\f_s_ggu_ ijb_f b i_j_^ZqZ khh[s_gbc k [ehdbjh\dhc q_j_a h[sbc
[mn_jBUFIjbgbfZ_fh_khh[s_gb_g_^he`ghij_\urZlvihjZaf_jmhlijZ\ey_fh_ khh[s_gb_ Z i_j_^Z\Z_fu_ b ijbgbfZ_fu_ ^Zggu_ ^he`gu
[ulvh^gh]hlbiZ
<ke_^mxs_fijbf_j_hi_jZpbb^\mgZijZ\e_ggh]hh[f_gZkkhk_^gbfbijhp_kkZfb\dhevp_\hclhiheh]bbijhba\h^ylkyijbihfhsb^\mo\uah\h\ijhp_^mjuMPI_SENDRECVIjbwlhf]ZjZglbjh\Zgghg_\hagbdZ_llmibdh\hckblmZpbb
program example12
include 'mpif.h'
integer ierr, rank, size, prev, next, buf(2)
integer status1(MPI_STATUS_SIZE), status2(MPI_STATUS_SIZE)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
prev = rank - 1
next = rank + 1
if(rank .eq. 0) prev = size - 1
if(rank .eq. size - 1) next = 0
call MPI_SENDRECV(rank, 1, MPI_INTEGER, prev, 6,
&
buf(2), 1, MPI_INTEGER, next, 6,
&
MPI_COMM_WORLD, status2, ierr)
call MPI_SENDRECV(rank, 1, MPI_INTEGER, next, 5,
&
buf(1), 1, MPI_INTEGER, prev, 5,
&
MPI_COMM_WORLD, status1, ierr)
print *, ‘process ’, rank,
&
‘ prev=’, buf(1), ‘ next=’, buf(2)
call MPI_FINALIZE(ierr)
end

AZ^Zgby
• DZdbfbZljb[mlZfbh[eZ^Z_l\MPIdZ`^h_ihkueZ_fh_khh[s_gb_"
• Fh`ghebkhh[s_gb_hlijZ\e_ggh_kihfhsvx[ehdbjmxs_chi_jZpbbihkuedbijbgylvg_[ehdbjmxs_chi_jZpb_cijb_fZ"
• Qlh]ZjZglbjm_l[ehdbjh\dZijbhlijZ\d_ijb_f_khh[s_gbc"
• Fh`gh eb \ dZq_kl\_ l_]h\ ijb ihkued_ jZaebqguo khh[s_gbc \
ijh]jZff_\k_]^Zbkihevah\Zlvh^ghblh`_qbkeh"
• DZdijbgylvex[h_khh[s_gb_hlex[h]hijhp_kkZ"

34

• DZd ijbgbfZxsbc ijhp_kk fh`_l hij_^_eblv ^ebgm ihemq_ggh]h
khh[s_gby"
• Fh`gh eb ijb ihkued_ khh[s_gby bkihevah\Zlv dhgklZglu
MPI_ANY_SOURCEbMPI_ANY_TAG?
• Fh`ghebg_ijbgbfZykhh[s_gbyhij_^_eblv_]hZljb[mlu"
• ;m^_lebdhjj_dlgZijh]jZffZ\dhlhjhcihkueZxsbcijhp_kkmdZau\Z_l \ dZq_kl\_ ^ebgu [mn_jZ qbkeh 10 Z ijbgbfZxsbc ijhp_kk qbkeh 20" ?keb ^Z lh kdhevdh we_f_glh\ fZkkb\Z [m^_l j_Zevgh
i_j_keZghf_`^mijhp_kkZfb"
• KjZ\gblvwnn_dlb\ghklvj_ZebaZpbbjZaebqguo\b^h\i_j_kuehd^Zgguok[ehdbjh\dhc MPI_SEND, MPI_BSEND, MPI_SSEND, MPI_RSEND f_`^m^\mfy\u^_e_ggufbijhp_kkhjZfb
• Qlh hagZqZ_l aZ\_jr_gb_ hi_jZpbb ^ey jZaebqguo \b^h\ i_j_kuedb
^Zgguok[ehdbjh\dhc"
• Hij_^_eblv fZdkbfZevgh ^himklbfmx ^ebgm ihkueZ_fh]h khh[s_gby
\^Zgghcj_ZebaZpbbMPI.
• J_Zebah\ZlvkdZeyjgh_ijhba\_^_gb_jZkij_^_e_gguof_`^mijhp_kkhjZfb\_dlhjh\
• KjZ\gblv wnn_dlb\ghklv j_ZebaZpbb i_j_kuehd ^Zgguo f_`^m ^\mfy
\u^_e_ggufbijhp_kkhjZfbk[ehdbjh\dhcb[_a[ehdbjh\db
• Hij_^_eblv \hafh`gh eb \ ^Zgghc j_ZebaZpbb MPI kh\f_s_gb_
Zkbgojhgguo i_j_kuehd ^Zgguo b \uiheg_gby Zjbnf_lbq_kdbo
hi_jZpbc
• DZd k ihfhsvx ijhp_^mju MPI_TEST kfh^_ebjh\Zlv nmgdpbhgZevghklvijhp_^mjuMPI_WAIT?
• < q_f khklhyl jZaebqby \ bkihevah\Zgbb ijhp_^mj MPI_WAITALL,
MPI_WAITANY b MPI_WAITSOME" DZd kfh^_ebjh\Zlv bo nmgdpbhgZevghklvijbihfhsbijhp_^mjuMPI_WAIT?
• Qlh ijhbahc^_l ijb hkms_kl\e_gbb h[f_gZ ^Zggufb k ijhp_kkhf
MPI_PROC_NULL?
• J_Zebah\Zlv ijb ihfhsb ihkuedb khh[s_gbc lbiZ lhqdZ-lhqdZ
ke_^mxsb_ko_fudhffmgbdZpbbijhp_kkh\
o i_j_^ZqZ^Zgguoihdhevpm^\Z\ZjbZglZwklZn_lgZyiZehqdZ
hq_j_^ghc ijhp_kk ^h`b^Z_lky khh[s_gby hl ij_^u^ms_]h b
ihlhfihkueZ_lke_^mxs_fm bk^\b] h^gh\j_f_ggu_ihkuedZ
bijb_fkhh[s_gbc 
o master-VODYH \k_ ijhp_kku h[sZxlky k h^gbf \u^_e_gguf
ijhp_kkhf 
o i_j_kuedZ^ZgguohldZ`^h]hijhp_kkZdZ`^hfm
• Bkke_^h\Zlvwnn_dlb\ghklvdhffmgbdZpbhgguoko_fbaij_^u^ms_]h
aZ^Zgby \ aZ\bkbfhklb hl qbkeZ bkihevah\Zgguo ijhp_kkh\ b h[t_fZ
i_j_kueZ_fuo^Zgguobamqblv\hafh`ghklbhilbfbaZpbb

35

• Hij_^_eblv\ub]jurdhlhjucfh`ghihemqblvijbbkihevah\Zgbbhleh`_gguoaZijhkh\gZ\aZbfh^_ckl\b_
• KjZ\gblv wnn_dlb\ghklv j_ZebaZpbb nmgdpbb MPI_SENDRECV k
fh^_ebjh\Zgb_f lhc `_ nmgdpbhgZevghklb ijb ihfhsb g_[ehdbjmxsbohi_jZpbc

Dhee_dlb\gu_\aZbfh^_ckl\byijhp_kkh\
< hi_jZpbyo dhee_dlb\gh]h \aZbfh^_ckl\by ijhp_kkh\ mqZkl\mxl \k_ ijhp_kku dhffmgbdZlhjZ Khhl\_lkl\mxsZy ijhp_^mjZ ^he`gZ [ulv \ua\ZgZ
dZ`^uf ijhp_kkhf [ulv fh`_l kh k\hbf gZ[hjhf iZjZf_ljh\ <ha\jZl ba
ijhp_^mju dhee_dlb\gh]h \aZbfh^_ckl\by fh`_l ijhbahclb \ lhl fhf_gl
dh]^Z mqZklb_ ijhp_kkZ \ ^Zgghc hi_jZpbb m`_ aZdhgq_gh DZd b ^ey
[ehdbjmxsbo ijhp_^mj \ha\jZl hagZqZ_l lh qlh jZaj_r_g k\h[h^guc
^hklmid[mn_jmijb_fZbebihkuedb:kbgojhgguodhee_dlb\guohi_jZpbc
\MPIg_l
<dhee_dlb\guohi_jZpbyofh`ghbkihevah\Zlvl_`_dhffmgbdZlhjuqlhb
[ueb bkihevah\Zgu ^ey hi_jZpbc lbiZ lhqdZ-lhqdZ MPI ]ZjZglbjm_l qlh
khh[s_gby \ua\Zggu_ dhee_dlb\gufb hi_jZpbyfb gbdZd g_ ih\ebyxl gZ
\uiheg_gb_ ^jm]bo hi_jZpbc b g_ i_j_k_dmlky k khh[s_gbyfb ihy\b\rbfbky\j_amevlZl_bg^b\b^mZevgh]h\aZbfh^_ckl\byijhp_kkh\
<hh[s_ ]h\hjy g_evay jZkkqblu\Zlv gZ kbgojhgbaZpbx ijhp_kkh\ k ihfhsvx dhee_dlb\guo hi_jZpbc djhf_ ijhp_^mju MPI_BARRIER  ?keb dZdhclhijhp_kkaZ\_jrbek\h_mqZklb_\dhee_dlb\ghchi_jZpbblhwlhg_hagZqZ_lgblh]hqlh^ZggZyhi_jZpbyaZ\_jr_gZ^jm]bfbijhp_kkZfbdhffmgbdZlhjZgb^Z`_lh]hqlhhgZbfbgZqZlZ _kebwlh\hafh`ghihkfukemhi_jZpbb).
< dhee_dlb\guo hi_jZpbyo g_ bkihevamxlky b^_glbnbdZlhju khh[s_gbc
l_]b LZdbfh[jZahfdhee_dlb\gu_hi_jZpbbkljh]hmihjy^hq_gukh]eZkgh
boihy\e_gbxl_dkl_ijh]jZffu
MPI_BARRIER(COMM, IERR)
INTEGER COMM, IERR

Ijhp_^mjZ bkihevam_lky ^ey [Zjv_jghc kbgojhgbaZpbb ijhp_kkh\ JZ[hlZ
ijhp_kkh\ [ehdbjm_lky ^h l_o ihj ihdZ \k_ hklZ\rb_ky ijhp_kku
dhffmgbdZlhjZ COMM g_ \uihegyl wlm ijhp_^mjm Lhevdh ihke_ lh]h dZd
ihke_^gbc ijhp_kk dhffmgbdZlhjZ \uihegbl ^Zggmx ijhp_^mjm \k_
ijhp_kku [m^ml jZa[ehdbjh\Zgu b ijh^he`Zl \uiheg_gb_ ^Zevr_ >ZggZy
ijhp_^mjZ y\ey_lky dhee_dlb\ghc <k_ ijhp_kku ^he`gu \ua\Zlv
36

MPI_BARRIER ohly j_Zevgh bkiheg_ggu_ \uah\u jZaebqgufb ijhp_kkZfb

dhffmgbdZlhjZfh]ml[ulvjZkiheh`_gu\jZaguof_klZoijh]jZffu

< ke_^mxs_f ijbf_j_ nmgdpbhgZevghklv ijhp_^mju MPI_BARRIER fh^_ebjm_lky ijb ihfhsb hleh`_gguo aZijhkh\ gZ \aZbfh^_ckl\b_ >ey
mkj_^g_gby j_amevlZlh\ ijhba\h^blky NTIMES hi_jZpbc h[f_gZ \ jZfdZo
dZ`^hcbagbo\k_ijhp_kku^he`guihkeZlvkhh[s_gb_ijhp_kkmkghf_jhf
0 ihke_ q_]h ihemqblv hl g_]h hl\_lguc kb]gZe hagZqZxsbc qlh \k_
ijhp_kku ^hreb ^h wlhc lhqdb \ ijh]jZff_ Bkihevah\Zgb_ hleh`_gguo
aZijhkh\ iha\hey_l bgbpbZebabjh\Zlv ihkuedm ^Zgguo lhevdh h^bg jZa Z
aZl_f bkihevah\Zlv gZ dZ`^hc bl_jZpbb pbdeZ >Ze__ \j_fy gZ
fh^_ebjh\Zgb_ kjZ\gb\Z_lky kh \j_f_g_f gZ kbgojhgbaZpbx ijb ihfhsb
kZfhcklZg^Zjlghcijhp_^mjuMPI_BARRIER.
program example13
include 'mpif.h'
integer ierr, rank, size, MAXPROC, NTIMES, i, it
parameter (MAXPROC = 128, NTIMES = 10000)
integer ibuf(MAXPROC)
double precision time_start, time_finish
integer req(2*MAXPROC), statuses(MPI_STATUS_SIZE, MAXPROC)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
if(rank .eq. 0) then
do i = 1, size-1
call MPI_RECV_INIT(ibuf(i), 0, MPI_INTEGER, i, 5,
&
MPI_COMM_WORLD, req(i), ierr)
call MPI_SEND_INIT(rank, 0, MPI_INTEGER, i, 6,
&
MPI_COMM_WORLD, req(size+i),
&
ierr)
end do
time_start = MPI_WTIME(ierr)
do it = 1, NTIMES
call MPI_STARTALL(size-1, req, ierr)
call MPI_WAITALL(size-1, req, statuses, ierr)
call MPI_STARTALL(size-1, req(size+1), ierr)
call MPI_WAITALL(size-1, req(size+1), statuses,
&
ierr)
end do
else
call MPI_RECV_INIT(ibuf(1), 0, MPI_INTEGER, 0, 6,
&
MPI_COMM_WORLD, req(1), ierr)
call MPI_SEND_INIT(rank, 0, MPI_INTEGER, 0, 5,
&
MPI_COMM_WORLD, req(2), ierr)
time_start = MPI_WTIME(ierr)
do it = 1, NTIMES
call MPI_START(req(2), ierr)
call MPI_WAIT(req(2), statuses, ierr)
call MPI_START(req(1), ierr)
37

call MPI_WAIT(req(1), statuses, ierr)
end do
end if
time_finish = MPI_WTIME(ierr)-time_start
print *, 'rank = ', rank, ' all time = ',
&
(time_finish)/NTIMES
time_start = MPI_WTIME(ierr)
do it = 1, NTIMES
call MPI_BARRIER(MPI_COMM_WORLD,ierr)
enddo
time_finish = MPI_WTIME(ierr)-time_start
print *, 'rank = ', rank, ' barrier time = ',
&
(time_finish)/NTIMES
call MPI_FINALIZE(ierr)
end
MPI_BCAST(BUF, COUNT, DATATYPE, ROOT, COMM, IERR)
<type> BUF(*)
INTEGER COUNT, DATATYPE, ROOT, COMM, IERR
JZkkuedZCOUNTwe_f_glh\^ZgguolbiZDATATYPEbafZkkb\ZBUFhlijhp_kkZ
ROOT \k_f ijhp_kkZf ^Zggh]h dhffmgbdZlhjZ COMM, \dexqZy kZf
jZkkueZxsbcijhp_kkIjb\ha\jZl_baijhp_^mjukh^_j`bfh_[mn_jZ BUF
ijhp_kkZ ROOT [m^_l kdhibjh\Zgh \ ehdZevguc [mn_j dZ`^h]h ijhp_kkZ
dhffmgbdZlhjZ COMM AgZq_gby iZjZf_ljh\ COUNT, DATATYPE, ROOT b COMM

^he`gu[ulvh^bgZdh\ufbm\k_oijhp_kkh\

Ke_^mxsZy ko_fZ beexkljbjm_l ^_ckl\b_ ijhp_^mju MPI_BCAST A^_kv
lZd`_ dZd b \ ^Zevg_crbo ko_fZo ih \_jlbdZeb bah[jZ`Zxlky jZagu_ ijhp_kkumqZkl\mxsb_\dhee_dlb\ghchi_jZpbbZih]hjbahglZeb–jZkiheh`_ggu_gZgbo[ehdb^Zgguo

GZijbf_j^eylh]hqlh[ui_j_keZlvhlijhp_kkZ 2\k_fhklZevgufijhp_kkZfijbeh`_gbyfZkkb\ bufba 100p_ehqbke_gguowe_f_glh\gm`ghqlh[u
\h\k_oijhp_kkZo\klj_lbekyke_^mxsbc\uah\
38

call MPI_BCAST(buf, 100, MPI_INTEGER,
&
2, MPI_COMM_WORLD, ierr)
MPI_GATHER(SBUF, SCOUNT, STYPE, RBUF, RCOUNT, RTYPE, ROOT, COMM,
IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNT, STYPE, RCOUNT, RTYPE, ROOT, COMM, IERR
K[hjdZ SCOUNTwe_f_glh\^ZgguolbiZ STYPEbafZkkb\h\ SBUFkh\k_oijhp_kkh\dhffmgbdZlhjZ COMM\[mn_j_ RBUFijhp_kkZ ROOTDZ`^ucijhp_kk
\dexqZy ROOTihkueZ_lkh^_j`bfh_k\h_]h[mn_jZ SBUF ijhp_kkm ROOTKh[bjZxsbcijhp_kkkhojZgy_l^Zggu_\[mn_j_RBUFjZkiheZ]Zybo\ihjy^d_

\hajZklZgbyghf_jh\ijhp_kkh\

GZijhp_kk_ ROOTkms_kl\_ggufby\eyxlkyagZq_gby\k_oiZjZf_ljh\ZgZ
hklZevguo ijhp_kkZo — lhevdh agZq_gby iZjZf_ljh\ SBUF, SCOUNT, STYPE,
ROOTb COMMAgZq_gbyiZjZf_ljh\ ROOTbCOMM^he`gu[ulvh^bgZdh\ufbm
\k_oijhp_kkh\IZjZf_lj RCOUNTmijhp_kkZ ROOTh[hagZqZ_lqbkehwe_f_glh\ lbiZ RTYPE ijbgbfZ_fuo g_ hl \k_o ijhp_kkh\ \ kmff_ Z hl dZ`^h]h
ijhp_kkZ
Ke_^mxsZyko_fZbeexkljbjm_l^_ckl\b_ijhp_^mjuMPI_GATHER.

GZijbf_j^eylh]hqlh[uijhp_kk2kh[jZe\fZkkb\rbufih10p_ehqbke_gguowe_f_glh\fZkkb\h\bufkh\k_oijhp_kkh\ijbeh`_gbygm`ghqlh[u\h
\k_oijhp_kkZo\klj_lbekyke_^mxsbc\uah\
call MPI_GATHER(buf, 10, MPI_INTEGER,
rbuf, 10, MPI_INTEGER,
2, MPI_COMM_WORLD, ierr)

&
&

MPI_GATHERV(SBUF, SCOUNT, STYPE, RBUF, RCOUNTS, DISPLS, RTYPE,
ROOT, COMM, IERR)
<type> SBUF(*), RBUF(*)
39

INTEGER SCOUNT, STYPE, RCOUNTS(*), DISPLS(*), RTYPE, ROOT, COMM,
IERR
K[hjdZjZaebqgh]hdhebq_kl\Z^ZgguobafZkkb\h\ SBUFIhjy^hdjZkiheh`_gby^Zgguo\j_amevlbjmxs_f[mn_j_RBUFaZ^Z_lfZkkb\DISPLS.
RCOUNTS –p_ehqbke_ggucfZkkb\kh^_j`Zsbcdhebq_kl\hwe_f_glh\i_j_-

^Z\Z_fuohldZ`^h]hijhp_kkZ bg^_dkjZ\_gjZg]mihkueZxs_]hijhp_kkZ
jZaf_jfZkkb\ZjZ\_gqbkemijhp_kkh\\dhffmgbdZlhj_COMM).

DISPLS – p_ehqbke_gguc fZkkb\ kh^_j`Zsbc kf_s_gby hlghkbl_evgh gZqZeZ fZkkb\Z RBUF bg^_dk jZ\_g jZg]m ihkueZxs_]h ijhp_kkZ jZaf_j
fZkkb\ZjZ\_gqbkemijhp_kkh\\dhffmgbdZlhj_COMM).

>Zggu_ihkeZggu_ijhp_kkhf J-1jZaf_sZxlky\ J-hf[ehd_[mn_jZ RBUF
gZijhp_kk_ROOTdhlhjucgZqbgZ_lkykhkf_s_gb_f\DISPLS(J)we_f_glh\
lbiZRTYPEkgZqZeZ[mn_jZ
MPI_SCATTER(SBUF, SCOUNT, STYPE, RBUF, RCOUNT, RTYPE, ROOT,
COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNT, STYPE, RCOUNT, RTYPE, ROOT, COMM, IERR
Ijhp_^mjZ MPI_SCATTER ih k\h_fm ^_ckl\bx y\ey_lky h[jZlghc d
MPI_GATHERHgZhkms_kl\ey_ljZkkuedmih SCOUNTwe_f_glh\^ZgguolbiZ
STYPEbafZkkb\ZSBUFijhp_kkZROOT\fZkkb\uRBUF\k_oijhp_kkh\dhffmgbdZlhjZ COMM\dexqZykZfijhp_kk ROOTFh`ghkqblZlvqlhfZkkb\ SBUF

^_eblkygZjZ\gu_qZklbihqbkemijhp_kkh\dZ`^Zybadhlhjuokhklhblba
SCOUNT we_f_glh\ lbiZ STYPE ihke_ q_]h I-y qZklv ihkueZ_lky I-1)-fm
ijhp_kkm
GZijhp_kk_ ROOTkms_kl\_ggufby\eyxlkyagZq_gby\k_oiZjZf_ljh\ZgZ
\k_o hklZevguo ijhp_kkZo — lhevdh agZq_gby iZjZf_ljh\ RBUF, RCOUNT,
RTYPE, SOURCE b COMM AgZq_gby iZjZf_ljh\ SOURCE b COMM ^he`gu [ulv
h^bgZdh\ufbm\k_oijhp_kkh\
Ke_^mxsZyko_fZbeexkljbjm_l^_ckl\b_ijhp_^mjuMPI_SCATTER.

40

<ke_^mxs_fijbf_j_ijhp_kk 0hij_^_ey_lfZkkb\ sbufihke_q_]hjZkkueZ_l _]h ih h^ghfm klhe[pm \k_f aZims_gguf ijhp_kkZf ijbeh`_gby J_amevlZlgZdZ`^hfijhp_kk_jZkiheZ]Z_lky\fZkkb\_rbuf.

1

real sbuf(size, size), rbuf(size)
if(rank .eq. 0) then
do 1 i = 1, size
do 1 j = 1, size
sbuf(i, j)=...
end if
if (numtasks .eq. size) then
call MPI_SCATTER(sbuf, size, MPI_REAL,
&
rbuf, size, MPI_REAL,
&
0, MPI_COMM_WORLD, ierr)
end if

MPI_SCATTERV(SBUF, SCOUNTS, DISPLS, STYPE, RBUF, RCOUNT, RTYPE,
ROOT, COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNTS(*), DISPLS(*), STYPE, RCOUNT, RTYPE, ROOT, COMM,
IERR
JZkkuedZ jZaebqgh]h dhebq_kl\Z ^Zgguo ba fZkkb\Z SBUF GZqZeh ihjpbc
jZkkueZ_fuo^ZgguoaZ^Z_lfZkkb\DISPLS.
SCOUNTS –p_ehqbke_ggucfZkkb\kh^_j`Zsbcdhebq_kl\hwe_f_glh\i_j_-

^Z\Z_fuo dZ`^hfm ijhp_kkm bg^_dk jZ\_g jZg]m Z^j_kZlZ ^ebgZ jZ\gZ
qbkemijhp_kkh\\dhffmgbdZlhj_COMM).

DISPLS – p_ehqbke_gguc fZkkb\ kh^_j`Zsbc kf_s_gby hlghkbl_evgh gZqZeZfZkkb\Z SBUF bg^_dkjZ\_gjZg]mZ^j_kZlZ^ebgZjZ\gZqbkemijhp_kkh\\dhffmgbdZlhj_COMM).

>Zggu_ihkueZ_fu_ijhp_kkhfROOTijhp_kkmJ-1jZaf_s_gu\J-hf[ehd_
[mn_jZSBUFdhlhjucgZqbgZ_lkykhkf_s_gb_f\DISPLS(J)we_f_glh\lbiZ
STYPEkgZqZeZ[mn_jZSBUF.
41

MPI_ALLGATHER(SBUF, SCOUNT, STYPE, RBUF, RCOUNT, RTYPE, COMM,
IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNT, STYPE, RCOUNT, RTYPE, COMM, IERR
K[hjdZ ^Zgguo ba fZkkb\h\ SBUF kh \k_o ijhp_kkh\ dhffmgbdZlhjZ COMM \
[mn_j_ RBUFdZ`^h]hijhp_kkZ>Zggu_khojZgyxlky\ihjy^d_\hajZklZgby
ghf_jh\ijhp_kkh\;ehd^ZgguoihkeZggucijhp_kkhf J-1jZaf_sZ_lky\
J-hf[ehd_[mn_jZRBUFijbgbfZxs_]hijhp_kkZHi_jZpbxfh`ghjZkkfZljb\ZlvdZd MPI_GATHERijbdhlhjhcj_amevlZlihemqZ_lkygZ\k_oijhp_kkZo
dhffmgbdZlhjZCOMM.

Ke_^mxsZyko_fZbeexkljbjm_l^_ckl\b_ijhp_^mjuMPI_ALLGATHER.

MPI_ALLGATHERV(SBUF, SCOUNT, STYPE, RBUF, RCOUNTS, DISPLS,
RTYPE, COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNT, STYPE, RCOUNTS(*), DISPLS(*), RTYPE, COMM, IERR
K[hjdZ gZ \k_o ijhp_kkZo dhffmgbdZlhjZ COMM jZaebqgh]h dhebq_kl\Z ^ZgguobafZkkb\h\ SBUFIhjy^hdjZkiheh`_gby^Zgguo\fZkkb\_RBUFaZ^Z_l
fZkkb\DISPLS.
MPI_ALLTOALL(SBUF, SCOUNT, STYPE, RBUF, RCOUNT, RTYPE, COMM,
IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNT, STYPE, RCOUNT, RTYPE, COMM, IERR
JZkkuedZdZ`^ufijhp_kkhfdhffmgbdZlhjZCOMMjZaebqguoihjpbc^Zgguo
\k_f^jm]bfijhp_kkZf J-c[ehd^Zgguo[mn_jZ SBUF (I-1)-]hijhp_kkZihiZ^Z_l\I-c[ehd^Zgguo[mn_jZRBUF (J-1)-]hijhp_kkZ

Ke_^mxsZyko_fZbeexkljbjm_l^_ckl\b_ijhp_^mjuMPI_ALLTOALL.

42

MPI_ALLTOALLV(SBUF, SCOUNTS, SDISPLS, STYPE, RBUF, RCOUNTS,
RDISPLS, RTYPE, COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER SCOUNTS(*), SDISPLS(*), STYPE, RCOUNTS(*), RDISPLS(*),
RTYPE, COMM, IERR
JZkkuedZ kh \k_o ijhp_kkh\ dhffmgbdZlhjZ COMM jZaebqgh]h dhebq_kl\Z

^Zgguo \k_f ijhp_kkZf ^Zggh]h dhffmgbdZlhjZ JZaf_s_gb_ ^Zgguo \ [mn_j_ SBUFhlkueZxs_]hijhp_kkZhij_^_ey_lkyfZkkb\hf SDISPLSZjZaf_s_gb_ ^Zgguo \ [mn_j_ RBUF ijbgbfZxs_]h ijhp_kkZ hij_^_ey_lky fZkkb\hfRDISPLS.

MPI_REDUCE(SBUF, RBUF, COUNT, DATATYPE, OP, ROOT, COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER COUNT, DATATYPE, OP, ROOT, COMM, IERR
<uiheg_gb_ COUNT g_aZ\bkbfuo ]eh[Zevguo hi_jZpbc OP gZ^ khhl\_lkl\mxsbfbwe_f_glZfbfZkkb\h\SBUFJ_amevlZl\uiheg_gbyhi_jZpbbOPgZ^
I-fbwe_f_glZfbfZkkb\h\SBUF\k_oijhp_kkh\dhffmgbdZlhjZCOMMihemqZ_lky\I-hfwe_f_gl_fZkkb\ZRBUFijhp_kkZROOT.

<MPIij_^mkfhlj_gjy^ij_^hij_^_e_gguo]eh[Zevguohi_jZpbchgbaZ^Zxlkyke_^mxsbfbdhgklZglZfb
• MPI_MAX, MPI_MIN – hij_^_e_gb_ fZdkbfZevgh]h b fbgbfZevgh]h
agZq_gby
• MPI_MINLOC, MPI_MAXLOC– hij_^_e_gb_ fZdkbfZevgh]h b fbgbfZevgh]hagZq_gbybbof_klhiheh`_gby
• MPI_SUM, MPI_PROD – \uqbke_gb_ ]eh[Zevghc kmffu b ]eh[Zevgh]h
ijhba\_^_gby
• MPI_LAND, MPI_LOR, MPI_LXOR –eh]bq_kdb_³B´³BEB´bkdexqZxs__
³BEB´
• MPI_BAND, MPI_BOR, MPI_BXOR –ih[blh\u_³B´³BEB´bkdexqZxs__
³BEB´
43

Djhf_lh]hijh]jZffbklfh`_laZ^Zlvk\hxnmgdpbx^ey\uiheg_gby]eh[Zevghchi_jZpbbijbihfhsbijhp_^mjuMPI_OP_CREATE.
< ke_^mxs_f ijbf_j_ hi_jZpby ]eh[Zevgh]h kmffbjh\Zgby fh^_ebjm_lky
ijb ihfhsb ko_fu k^\Zb\Zgby k bkihevah\Zgb_f i_j_kuehd ^Zgguo lbiZ
lhqdZ-lhqdZWnn_dlb\ghklvlZdh]hfh^_ebjh\ZgbykjZ\gb\Z_lkykbkihevah\Zgb_fdhee_dlb\ghchi_jZpbbMPI_REDUCE.
program example14
include 'mpif.h'
integer ierr, rank, i, size, n, nproc
parameter (n = 1 000 000)
double precision time_start, time_finish
double precision a(n), b(n), c(n)
integer status(MPI_STATUS_SIZE)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
nproc = size
do i = 1, n
a(i) = 1.d0/size
end do
call MPI_BARRIER(MPI_COMM_WORLD, ierr)
time_start = MPI_WTIME(ierr)
do i = 1, n
c(i) = a(i)
end do
do while (nproc .gt. 1)
if(rank .lt. nproc/2) then
call MPI_RECV(b, n, MPI_DOUBLE_PRECISION,
&
nproc-rank-1, 1, MPI_COMM_WORLD,
&
status, ierr)
do i = 1, n
c(i) = c(i) + b(i)
end do
else if(rank .lt. nproc) then
call MPI_SEND(c, n, MPI_DOUBLE_PRECISION,
&
nproc-rank-1, 1, MPI_COMM_WORLD, ierr)
end if
nproc = nproc/2
end do
do i = 1, n
b(i) = c(i)
end do
time_finish = MPI_WTIME(ierr)-time_start
if(rank .eq. 0) print *, 'model b(1)=', b(1)
print *, 'rank=', rank, ' model time =', time_finish
do i = 1, n
a(i) = 1.d0/size
end do
call MPI_BARRIER(MPI_COMM_WORLD, ierr)
44

time_start = MPI_WTIME(ierr)
call MPI_REDUCE(a, b, n, MPI_DOUBLE_PRECISION, MPI_SUM, 0,
&
MPI_COMM_WORLD, ierr)
time_finish = MPI_WTIME(ierr)-time_start
if(rank .eq. 0) print *, 'reduce b(1)=', b(1)
print *, 'rank=', rank, ' reduce time =', time_finish
call MPI_FINALIZE(ierr)
end
MPI_ALLREDUCE(SBUF, RBUF, COUNT, DATATYPE, OP, COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER COUNT, DATATYPE, OP, COMM, IERR
<uiheg_gb_ COUNT g_aZ\bkbfuo ]eh[Zevguo hi_jZpbc OP gZ^ khhl\_lkl\mxsbfb we_f_glZfb fZkkb\h\ SBUF Hlebqb_ hl ijhp_^mju MPI_REDUCE \
lhfqlhj_amevlZlihemqZ_lky\fZkkb\_RBUFdZ`^h]hijhp_kkZ

< ke_^mxs_f ijbf_j_ dZ`^uc ijhp_kk \uqbkey_l ihkljhqgu_ kmffu we_f_glh\ehdZevgh]hfZkkb\Z aihke_q_]hihemq_ggu_kmffukh\k_oijhp_kkh\kdeZ^u\Zxlkyijbihfhsbijhp_^mjuMPI_ALLREDUCEbj_amevlZlihemqZ_lky\fZkkb\_rgZ\k_oijhp_kkZoijbeh`_gby
do i = 1, n
s(i) = 0.0
end do
do i = 1, n
do j = 1, m
s(i) = s(i)+a(i, j)
end do
end do
call MPI_ALLREDUCE(s, r, n, MPI_REAL, MPI_SUM,
&
MPI_COMM_WORLD, IERR)
MPI_REDUCE_SCATTER(SBUF, RBUF, RCOUNTS, DATATYPE, OP, COMM,
IERR)
<type> SBUF(*), RBUF(*)
INTEGER RCOUNTS(*), DATATYPE, OP, COMM, IERR
<uiheg_gb_I RCOUNTS(I)g_aZ\bkbfuo]eh[Zevguohi_jZpbc OPgZ^khhl\_lkl\mxsbfbwe_f_glZfbfZkkb\h\SBUFNmgdpbhgZevghwlhwd\b\Ze_glgh

lhfm qlh kgZqZeZ \uihegyxlky ]eh[Zevgu_ hi_jZpbb aZl_f j_amevlZl jZkkueZ_lky ih ijhp_kkZf I-uc ijhp_kk ihemqZ_l (I+1)-mx ihjpbx j_amevlZlh\ba RCOUNTS(I+1)we_f_glh\bihf_sZ_l\fZkkb\ RBUFFZkkb\ RCOUNTS
^he`_g[ulvh^bgZdh\ufgZ\k_oijhp_kkZodhffmgbdZlhjZCOMM.

45

MPI_SCAN(SBUF, RBUF, COUNT, DATATYPE, OP, COMM, IERR)
<type> SBUF(*), RBUF(*)
INTEGER COUNT, DATATYPE, OP, COMM, IERR
<uiheg_gb_ COUNTg_aZ\bkbfuoqZklbqguo]eh[Zevguohi_jZpbc OPgZ^khhl\_lkl\mxsbfbwe_f_glZfbfZkkb\h\ SBUF. I-ucijhp_kk\uihegy_l COUNT
]eh[Zevguohi_jZpbcgZ^khhl\_lkl\mxsbfbwe_f_glZfbfZkkb\Z SBUFijhp_kkh\kghf_jZfbhl 0^h I\dexqbl_evghbihf_sZ_lihemq_ggucj_amevlZl\fZkkb\RBUFIhegucj_amevlZl]eh[Zevghchi_jZpbbihemqZ_lky\fZkkb\_RBUFihke_^g_]hijhp_kkZ
MPI_OP_CREATE(FUNC, COMMUTE, OP, IERR)
EXTERNAL FUNC
LOGICAL COMMUTE
INTEGER OP, IERR

Kha^Zgb_ ihevah\Zl_evkdhc ]eh[Zevghc hi_jZpbb OP dhlhjZy [m^_l \uqbkeylvkynmgdpb_c FUNCKha^Z\Z_fZyhi_jZpby^he`gZ[ulvZkkhpbZlb\ghcZ
_kebiZjZf_lj COMMUTEjZ\_g .TRUE.lhhgZ^he`gZ[ulvlZd`_bdhffmlZlb\ghc ?keb iZjZf_lj COMMUTE jZ\_g .FALSE. lh ihjy^hd \uiheg_gby
]eh[Zevghc hi_jZpbb kljh]h nbdkbjm_lky kh]eZkgh m\_ebq_gbx ghf_jh\
ijhp_kkh\gZqbgZykijhp_kkZkghf_jhf0.
FUNCTION FUNC(INVEC(*), INOUTVEC(*), LEN, TYPE)
<type> INVEC(LEN), INOUTVEC(LEN)
INTEGER LEN, TYPE

LZdbfh[jZahfaZ^Z_lkybgl_jn_ckihevah\Zl_evkdhcnmgdpbb^eykha^Zgby
]eh[Zevghc hi_jZpbb I_j\uc Zj]mf_gl hi_jZpbb [_j_lky ba iZjZf_ljZ
INVEC\lhjhcZj]mf_gl–baiZjZf_ljZINOUTVECZj_amevlZl\ha\jZsZ_lky\
iZjZf_lj_ INOUTVECIZjZf_lj LENaZ^Z_ldhebq_kl\hwe_f_glh\\oh^gh]hb
\uoh^gh]hfZkkb\h\ZiZjZf_lj TYPE –lbi\oh^guob\uoh^guo^Zgguo<
ihevah\Zl_evkdhc nmgdpbb g_ ^he`gu ijhba\h^blvky gbdZdb_ h[f_gu
^Zggufbkbkihevah\Zgb_f\uah\h\ijhp_^mjMPI.
MPI_OP_FREE(OP, IERR)
INTEGER OP, IERR

Mgbqlh`_gb_ ihevah\Zl_evkdhc ]eh[Zevghc hi_jZpbb Ih \uiheg_gbb ijhp_^mjui_j_f_gghcOPijbk\Zb\Z_lkyagZq_gb_MPI_OP_NULL.
Ke_^mxsbc ijbf_j ^_fhgkljbjm_l aZ^Zgb_ ihevah\Zl_evkdhc nmgdpbb ^ey
bkihevah\Zgby \ dZq_kl\_ ]eh[Zevghc hi_jZpbb AZ^Z_lky nmgdpby smod5,
\uqbkeyxsZy ihwe_f_glgmx kmffm ih fh^mex 5 \_dlhjh\ p_ehqbke_gguo
Zj]mf_glh\>ZggZynmgdpbyh[ty\ey_lky\dZq_kl\_]eh[Zevghchi_jZpbbop
\ \uah\_ ijhp_^mju MPI_OP_CREATE aZl_f bkihevam_lky \ ijhp_^mj_
MPI_REDUCE ihke_ q_]h m^Zey_lky k ihfhsvx \uah\Z ijhp_^mju
MPI_OP_FREE.
program example15
46

include 'mpif.h'
integer ierr, rank, i, n
parameter (n = 1 000)
integer a(n), b(n)
integer op
external smod5
call MPI_INIT(ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
do i = 1, n
a(i) = i + rank
end do
print *, 'process ', rank, ' a(1) =', a(1)
call MPI_OP_CREATE(smod5, .TRUE., op, ierr)
call MPI_REDUCE(a, b, n, MPI_INTEGER, op, 0,
&
MPI_COMM_WORLD, ierr)
call MPI_OP_FREE(op, ierr)
if(rank .eq. 0) print *, ' b(1) =', b(1)
call MPI_FINALIZE(ierr)
end
integer function smod5(in, inout, l, type)
integer l, type
integer in(l), inout(l), i
do i = 1, l
inout(i) = mod(in(i)+inout(i), 5)
end do
return
end

AZ^Zgby
• Q_f dhee_dlb\gu_ hi_jZpbb hlebqZxlky hl \aZbfh^_ckl\bc lbiZ
lhqdZ-lhqdZ"
• <_jgh eb qlh \ dhee_dlb\guo \aZbfh^_ckl\byo mqZkl\mxl \k_ ijhp_kkuijbeh`_gby?
• Fh]mleb\hagbdZlvdhgnebdluf_`^mh[uqgufbkhh[s_gbyfbihkueZ_fufbijhp_kkZfb^jm]^jm]mbkhh[s_gbyfbdhee_dlb\guohi_jZpbc"?keb^ZdZdhgbjZaj_rZxlky"
• Fh`gh eb ijb ihfhsb ijhp_^mju MPI_RECV ijbgylv khh[s_gb_ ihkeZggh_ijhp_^mjhcMPI_BCAST?
• Kfh^_ebjh\Zlv [Zjv_jgmx kbgojhgbaZpbx ijb ihfhsb i_j_kuehd
lhqdZ-lhqdZbkjZ\gblvwnn_dlb\ghklvlZdhcj_ZebaZpbbbklZg^Zjlghc
ijhp_^mjuMPI_BARRIER.
• < q_f jZaebqb_ \ nmgdpbhgZevghklb ijhp_^mj MPI_BCAST b
MPI_SCATTER?
• Kfh^_ebjh\Zlv]eh[Zevgh_kmffbjh\Zgb_f_lh^hfk^\Zb\ZgbybkjZ\gblv wnn_dlb\ghklv lZdhc j_ZebaZpbb k bkihevah\Zgb_f klZg^Zjlghc
ijhp_^mjuMPI_REDUCE.
47

• Kfh^_ebjh\Zlv ijhp_^mjm MPI_ALLREDUCE ijb ihfhsb ijhp_^mj
MPI_REDUCEbMPI_BCAST.
• GZibrbl_k\hc\ZjbZglijhp_^mjuMPI_GATHERbkihevamynmgdpbbihkuedbkhh[s_gbclbiZlhqdZ-lhqdZ
• Ih^mfZcl_ dZd hj]Zgbah\Zlv dhee_dlb\guc Zkbgojhgguc h[f_g ^ZggufbZgZeh]bqgucnmgdpbbZ MPI_REDUCE[ MPI_ALLTOALL.
• Bkke_^h\Zlv fZkrlZ[bjm_fhklv aZ\bkbfhklv \j_f_gb \uiheg_gby hl
qbkeZ ijhp_kkh\  jZaebqguo dhee_dlb\guo hi_jZpbc gZ dhgdj_lghc
kbkl_f_

=jmiiubdhffmgbdZlhju
< MPI kms_kl\mxl rbjhdb_ \hafh`ghklb ^ey hi_jZpbc gZ^ ]jmiiZfb ijhp_kkh\bdhffmgbdZlhjZfbWlh[u\Z_lg_h[oh^bfh\h-i_j\uoqlh[u^Zlv
\hafh`ghklv g_dhlhjhc ]jmii_ ijhp_kkh\ jZ[hlZlv gZ^ k\h_c g_aZ\bkbfhc
ih^aZ^Zq_c<h-\lhjuo_kebhkh[_gghklvZe]hjblfZlZdh\ZqlhlhevdhqZklv
ijhp_kkh\ ^he`gZ h[f_gb\Zlvky ^Zggufb [u\Z_l m^h[gh aZ\_klb ^ey bo
\aZbfh^_ckl\by hl^_evguc dhffmgbdZlhj <-lj_lvbo ijb kha^Zgbb
[b[ebhl_d ih^ijh]jZff gm`gh ]ZjZglbjh\Zlv qlh i_j_kuedb ^Zgguo \
[b[ebhl_qguofh^meyog_i_j_k_dmlkyki_j_kuedZfb\hkgh\ghcijh]jZff_
J_r_gb_wlboaZ^Zqfh`ghh[_ki_qblv\iheghfh[t_f_lhevdhijbihfhsb
kha^Zgbygh\h]hg_aZ\bkbfh]hdhffmgbdZlhjZ
Hi_jZpbbk]jmiiZfbijhp_kkh\
=jmiiZ – wlh mihjy^hq_ggh_ fgh`_kl\h ijhp_kkh\ DZ`^hfm ijhp_kkm \
]jmii_ khihklZ\e_gh p_eh_ qbkeh – jZg] beb ghf_j. MPI_GROUP_EMPTY –
imklZy ]jmiiZ g_ kh^_j`ZsZy gb h^gh]h ijhp_kkZ MPI_GROUP_NULL –
agZq_gb_bkihevam_fh_^eyhrb[hqghc]jmiiu
Gh\u_]jmiiufh`ghkha^Z\ZlvdZdgZhkgh\_m`_kms_kl\mxsbo]jmiilZd
b gZ hkgh\_ dhffmgbdZlhjh\ gh \ hi_jZpbyo h[f_gZ fh]ml bkihevah\Zlvky
lhevdhdhffmgbdZlhju;Zah\Zy]jmiiZbadhlhjhckha^Zxlky\k_hklZevgu_
]jmiiuijhp_kkh\k\yaZgZkdhffmgbdZlhjhf MPI_COMM_WORLD\g__\oh^yl
\k_ ijhp_kku ijbeh`_gby Hi_jZpbb gZ^ ]jmiiZfb ijhp_kkh\ y\eyxlky ehdZevgufb\gbo\h\e_dZ_lkylhevdh\ua\Z\rbcijhp_^mjmijhp_kkZ\uiheg_gb_ g_ lj_[m_l f_`ijhp_kkgh]h h[f_gZ ^Zggufb Ex[hc ijhp_kk fh`_l
ijhba\h^blv hi_jZpbb gZ^ ex[ufb ]jmiiZfb \ lhf qbke_ gZ^ lZdbfb
dhlhju_ g_ kh^_j`Zl ^Zgguc ijhp_kk Ijb hi_jZpbyo gZ^ ]jmiiZfb fh`_l
ihemqblvkyimklZy]jmiiZMPI_GROUP_EMPTY.

48

MPI_COMM_GROUP(COMM, GROUP, IERR)
INTEGER COMM, GROUP, IERR
Ihemq_gb_ ]jmiiu GROUP khhl\_lkl\mxs_c dhffmgbdZlhjm COMM < yaud_
KbiZjZf_lj GROUPbf__lij_^hij_^_e_gguclbi MPI_GroupIhkdhevdmba-

gZqZevgh

kms_kl\m_l _^bgkl\_gguc g_ljb\bZevguc dhffmgbdZlhj
MPI_COMM_WORLD kgZqZeZ gm`gh ihemqblv khhl\_lkl\mxsmx _fm ]jmiim
ijhp_kkh\Wlhfh`ghk^_eZlvijbihfhsbke_^mxs_]h\uah\Z
call MPI_COMM_GROUP(MPI_COMM_WORLD, group, ierr)
MPI_GROUP_INCL(GROUP, N, RANKS, NEWGROUP, IERR)
INTEGER GROUP, N, RANKS(*), NEWGROUP, IERR
Kha^Zgb_]jmiiu NEWGROUPba Nijhp_kkh\ij_`g_c]jmiiu GROUPkjZg]Zfb
RANKS(1),…,RANKS(N) ijbq_f jZg]m RANKS(I) \ klZjhc ]jmii_ khhl\_lkl\m_l jZg] I-1 \ gh\hc ]jmii_ Ijb N=0 kha^Z_lky imklZy ]jmiiZ
MPI_GROUP_EMPTY<hafh`ghbkihevah\Zgb_wlhcijhp_^mju^eyaZ^Zgbygh-

\h]hihjy^dZijhp_kkh\\]jmii_

MPI_GROUP_EXCL(GROUP, N, RANKS, NEWGROUP, IERR)
INTEGER GROUP, N, RANKS(*), NEWGROUP, IERR
Kha^Zgb_]jmiiu NEWGROUPbaijhp_kkh\]jmiiu GROUPbkdexqZyijhp_kku
k jZg]Zfb RANKS(1),…,RANKS(N) ijbq_f ihjy^hd hklZ\rboky ijhp_kkh\ \
gh\hc ]jmii_ khhl\_lkl\m_l ihjy^dm ijhp_kkh\ \ klZjhc ]jmii_ Ijb N=0

kha^Z_lky]jmiiZb^_glbqgZyklZjhc]jmii_

< ke_^mxs_f ijbf_j_ kha^Z_lky ^\_ g_i_j_k_dZxsboky ]jmiiu ijhp_kkh\
group1b group2gZhkgh\_ijhp_kkh\]jmiiu group<dZ`^mxbakha^Z\Z_fuo ]jmii \hc^_l ijbf_jgh iheh\bgZ ijhp_kkh\ ij_`g_c ]jmiiu ijb g_q_lghf qbke_ ijhp_kkh\ \ ]jmiim group2 \hc^_l gZ h^bg ijhp_kk [hevr_ 
Ihjy^hdgmf_jZpbbijhp_kkh\\h\gh\vkha^Z\Z_fuo]jmiiZokhojZgblky
size1 = size/2
do i = 1, size1
ranks(i) = i-1
enddo
call MPI_GROUP_INCL(group, size1, ranks, group1, ierr)
call MPI_GROUP_EXCL(group, size1, ranks, group2, ierr)

Ke_^mxsb_ ljb ijhp_^mju hij_^_eyxl hi_jZpbb gZ^ ]jmiiZfb ijhp_kkh\
dZd gZ^fgh`_kl\ZfbBa-aZhkh[_gghkl_cgmf_jZpbbijhp_kkh\gbh[t_^bg_gb_gbi_j_k_q_gb_]jmiig_dhffmlZlb\gughZkkhpbZlb\gu
MPI_GROUP_INTERSECTION(GROUP1, GROUP2, NEWGROUP, IERR)
INTEGER GROUP1, GROUP2, NEWGROUP, IERR
Kha^Zgb_ ]jmiiu NEWGROUP ba i_j_k_q_gby ]jmii GROUP1 b GROUP2 Ihemq_ggZy ]jmiiZ kh^_j`bl \k_ ijhp_kku ]jmiiu GROUP1 \oh^ysb_ lZd`_ \
]jmiimGROUP2bmihjy^hq_ggu_dZd\i_j\hc]jmii_
49

MPI_GROUP_UNION(GROUP1, GROUP2, NEWGROUP, IERR)
INTEGER GROUP1, GROUP2, NEWGROUP, IERR
Kha^Zgb_ ]jmiiu NEWGROUP ba h[t_^bg_gby ]jmii GROUP1 b GROUP2 Ihemq_ggZy]jmiiZkh^_j`bl\k_ijhp_kku]jmiiu GROUP1\ij_`g_fihjy^d_aZ
dhlhjufbke_^mxlijhp_kku]jmiiu GROUP2g_\hr_^rb_\]jmiim GROUP1,

lZd`_\ij_`g_fihjy^d_

MPI_GROUP_DIFFERENCE(GROUP1, GROUP2, NEWGROUP, IERR)
INTEGER GROUP1, GROUP2, NEWGROUP, IERR
Kha^Zgb_]jmiiu NEWGROUPbajZaghklb]jmii GROUP1b GROUP2Ihemq_ggZy
]jmiiZkh^_j`bl\k_we_f_glu]jmiiuGROUP1g_\oh^ysb_\]jmiimGROUP2

bmihjy^hq_ggu_dZd\i_j\hc]jmii_

GZijbf_jimklv\]jmiim gr1\oh^ylijhp_kku 0, 1, 2, 4, 5Z\]jmiim gr2 ijhp_kku 0, 2, 3 gmf_jZpby ijhp_kkh\ aZ^ZgZ \ ]jmii_ khhl\_lkl\mxs_c
dhffmgbdZlhjmMPI_COMM_WORLD Lh]^Zihke_\uah\h\
call MPI_GROUP_INTERSECTION(gr1, gr2, newgr1, ierr)
call MPI_GROUP_UNION(gr1, gr2, newgr2, ierr)
call MPI_GROUP_DIFFERENCE(gr1, gr2, newgr3, ierr)

\]jmiimnewgr1\oh^ylijhp_kku0, 2;
\]jmiimnewgr2\oh^ylijhp_kku0, 1, 2, 4, 5, 3;
\]jmiimnewgr3\oh^ylijhp_kku1, 4, 5.
Ihjy^hdgmf_jZpbbijhp_kkh\\ihemq_gguo]jmiiZokhhl\_lkl\m_lihjy^dm
boi_j_qbke_gby
MPI_GROUP_SIZE(GROUP, SIZE, IERR)
INTEGER GROUP, SIZE, IERR
Hij_^_e_gb_dhebq_kl\ZSIZEijhp_kkh\\]jmii_GROUP.
MPI_GROUP_RANK(GROUP, RANK, IERR)
INTEGER GROUP, RANK, IERR
Hij_^_e_gb_ghf_jZijhp_kkZRANK\]jmii_GROUP?keb\ua\Z\rbcijhp_kk
g_\oh^bl\]jmiimGROUPlh\ha\jZsZ_lkyagZq_gb_MPI_UNDEFINED.
MPI_GROUP_TRANSLATE_RANKS(GROUP1, N, RANKS1, GROUP2, RANKS2,
IERR)
INTEGER GROUP1, N, RANKS1(*), GROUP2, RANKS2(*), IERR
<fZkkb\_ RANKS2\ha\jZsZxlkyjZg]b\]jmii_ GROUP2ijhp_kkh\kjZg]Zfb
RANKS1 \ ]jmii_ GROUP1 IZjZf_lj N aZ^Z_l qbkeh ijhp_kkh\ ^ey dhlhjuo

gm`ghhij_^_eblvjZg]b

MPI_GROUP_COMPARE(GROUP1, GROUP2, RESULT, IERR)
INTEGER GROUP1, GROUP2, RESULT, IERR
50

KjZ\g_gb_]jmiiGROUP1bGROUP2?keb]jmiiuGROUP1bGROUP2iheghklvx
kh\iZ^Zxl lh \ iZjZf_lj_ RESULT \ha\jZsZ_lky agZq_gb_ MPI_IDENT ?keb
]jmiiu hlebqZxlky lhevdh jZg]Zfb ijhp_kkh\ lh \ha\jZsZ_lky agZq_gb_
MPI_SIMILARBgZq_\ha\jZsZ_lkyagZq_gb_MPI_UNEQUAL.
MPI_GROUP_FREE(GROUP, IERR)
INTEGER GROUP, IERR
Mgbqlh`_gb_ ]jmiiu GROUP. Ihke_ \uiheg_gby ijhp_^mju i_j_f_ggZy
GROUPijbgbfZ_lagZq_gb_ MPI_GROUP_NULL?kebkwlhc]jmiihcdfhf_glm

\uah\Z ijhp_^mju m`_ \uihegy_lky dZdZy-lh hi_jZpby lh hgZ [m^_l
aZ\_jr_gZ

<ke_^mxs_fijbf_j_\k_ijhp_kkuijbeh`_gbyjZa[b\ZxlkygZ^\_g_i_j_k_dZxsb_kyijbf_jghjZ\gu_]jmiiugroup1bgroup2Ijbg_q_lghfqbke_
ijhp_kkh\ \ ]jmii_ group2fh`_lhdZaZlvkygZh^bgijhp_kk[hevr_lh]^Z
ihke_^gbcijhp_kkba^Zgghc]jmiiug_^he`_gh[f_gb\Zlvky^Zggufbgbk
h^gbf ijhp_kkhf ba ]jmiiu group1 K ihfhsvx \uah\h\ ijhp_^mju
MPI_GROUP_TRANSLATE_RANKSdZ`^ucijhp_kkgZoh^blijhp_kkkl_f`_ghf_jhf\^jm]hc]jmii_bh[f_gb\Z_lkykgbfkhh[s_gb_fq_j_adhffmgbdZlhj MPI_COMM_WORLDijbihfhsb\uah\Zijhp_^mju MPI_SENDRECV<dhgp_
ijh]jZffu g_ gm`gu_ ^Ze__ ]jmiiu mgbqlh`Zxlky k ihfhsvx \uah\h\
ijhp_^mjMPI_GROUP_FREE.
program example16
include 'mpif.h'
integer ierr, rank, i, size, size1
integer a(4), b(4)
integer status(MPI_STATUS_SIZE)
integer group, group1, group2
integer ranks(128), rank1, rank2, rank3
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
call MPI_COMM_GROUP(MPI_COMM_WORLD, group, ierr)
size1 = size/2
do i = 1, size1
ranks(i) = i-1
enddo
call MPI_GROUP_INCL(group, size1, ranks, group1, ierr)
call MPI_GROUP_EXCL(group, size1, ranks, group2, ierr)
call MPI_GROUP_RANK(group1, rank1, ierr)
call MPI_GROUP_RANK(group2, rank2, ierr)
if (rank1 .eq. MPI_UNDEFINED) then
if(rank2 .lt. size1) then
call MPI_GROUP_TRANSLATE_RANKS(group1, 1, rank2,
&
group, rank3, ierr)
else
rank3 = MPI_UNDEFINED
end if
51

else
call MPI_GROUP_TRANSLATE_RANKS(group2, 1, rank1,
&
group, rank3, ierr)
end if
a(1) = rank
a(2) = rank1
a(3) = rank2
a(4) = rank3
if (rank3 .ne. MPI_UNDEFINED) then
call MPI_SENDRECV(a, 4, MPI_INTEGER, rank3, 1,
&
b, 4, MPI_INTEGER, rank3, 1,
&
MPI_COMM_WORLD, status, ierr)
end if
call MPI_GROUP_FREE(group, ierr)
call MPI_GROUP_FREE(group1, ierr)
call MPI_GROUP_FREE(group2, ierr)
print *, 'process ', rank, ' a=', a, ' b=', b
call MPI_FINALIZE(ierr)
end

Hi_jZpbbkdhffmgbdZlhjZfb
DhffmgbdZlhjij_^hklZ\ey_lhl^_evgucdhgl_dklh[f_gZijhp_kkh\g_dhlhjhc]jmiiuDhgl_dklh[_ki_qb\Z_l\hafh`ghklvg_aZ\bkbfuoh[f_gh\^ZggufbDZ`^hc]jmii_ijhp_kkh\fh`_lkhhl\_lkl\h\Zlvg_kdhevdhdhffmgbdZlhjh\ghdZ`^ucdhffmgbdZlhj\ex[hcfhf_gl\j_f_gbh^ghagZqghkhhl\_lkl\m_llhevdhh^ghc]jmii_
Ke_^mxsb_ dhffmgbdZlhju kha^Zxlky kjZam ihke_ \uah\Z ijhp_^mju
MPI_INIT:
• MPI_COMM_WORLD –dhffmgbdZlhjh[t_^bgyxsbc\k_ijhp_kkuijbeh`_gby
• MPI_COMM_NULL –agZq_gb_bkihevam_fh_^eyhrb[hqgh]hdhffmgbdZlhjZ
• MPI_COMM_SELF –dhffmgbdZlhj\dexqZxsbclhevdh\ua\Z\rbcijhp_kk
Kha^Zgb_ dhffmgbdZlhjZ y\ey_lky dhee_dlb\ghc hi_jZpb_c b lj_[m_l
hi_jZpbb f_`ijhp_kkgh]h h[f_gZ ihwlhfm lZdb_ ijhp_^mju ^he`gu
\uau\Zlvky\k_fbijhp_kkZfbg_dhlhjh]hkms_kl\mxs_]hdhffmgbdZlhjZ
MPI_COMM_DUP(COMM, NEWCOMM, IERR)
INTEGER COMM, NEWCOMM, IERR
Kha^Zgb_gh\h]hdhffmgbdZlhjZ NEWCOMMklhc`_]jmiihcijhp_kkh\bZljb[mlZfbqlhbmdhffmgbdZlhjZCOMM.
52

MPI_COMM_CREATE(COMM, GROUP, NEWCOMM, IERR)
INTEGER COMM, GROUP, NEWCOMM, IERR
Kha^Zgb_ gh\h]h dhffmgbdZlhjZ NEWCOMM ba dhffmgbdZlhjZ COMM ^ey
]jmiiu ijhp_kkh\ GROUP dhlhjZy ^he`gZ y\eylvky ih^fgh`_kl\hf ]jmiiu
k\yaZgghc k dhffmgbdZlhjhf COMM <uah\ ^he`_g \klj_lblvky \h \k_o
ijhp_kkZo dhffmgbdZlhjZ COMM GZ ijhp_kkZo g_ ijbgZ^e_`Zsbo ]jmii_
GROUP[m^_l\ha\jZs_ghagZq_gb_MPI_COMM_NULL.

<ke_^mxs_fijbf_j_kha^Z_lky^\_gh\uo]jmiiuh^gZbadhlhjuokh^_j`bli_j\mxiheh\bgmijhp_kkh\Z\lhjZy–\lhjmxiheh\bgmIjbg_q_lghf
qbke_ijhp_kkh\\h\lhjmx]jmiim\hc^_lgZh^bgijhp_kk[hevr_DZ`^Zy
]jmiiZkha^Z_lkylhevdhgZl_oijhp_kkZodhlhju_\g__\oh^yl>eydZ`^hc
gh\hc ]jmiiu kha^Z_lky khhl\_lkl\mxsbc _c dhffmgbdZlhj new_comm b
hi_jZpby MPI_ALLREDUCE \uihegy_lky ih hl^_evghklb ^ey ijhp_kkh\
\oh^ysbo\jZagu_]jmiiu
call MPI_COMM_GROUP(MPI_COMM_WORLD, group, ierr)
do i = 1, size/2
ranks(i) = i-1
end do
if (rank .lt. size/2) then
call MPI_GROUP_INCL(group, size/2, ranks,
&
new_group, ierr)
else
call MPI_GROUP_EXCL(group, size/2, ranks,
&
new_group, ierr)
end if
call MPI_COMM_CREATE(MPI_COMM_WORLD, new_group,
&
new_comm, ierr)
call MPI_ALLREDUCE(sbuf, rbuf, 1, MPI_INTEGER,
&
MPI_SUM, new_comm, ierr)
call MPI_GROUP_RANK(new_group, new_rank, ierr)
print *, 'rank= ', rank, ' newrank= ',
&
new_rank, ' rbuf= ', rbuf

53

MPI_COMM_SPLIT(COMM, COLOR, KEY, NEWCOMM, IERR)
INTEGER COMM, COLOR, KEY, NEWCOMM, IERR
JZa[b_gb_ dhffmgbdZlhjZ COMM gZ g_kdhevdh gh\uo dhffmgbdZlhjh\ ih
qbkemagZq_gbciZjZf_ljZ COLOR<h^bgdhffmgbdZlhjihiZ^Zxlijhp_kku
kh^gbfagZq_gb_fCOLORIjhp_kkuk[hevrbfagZq_gb_fiZjZf_ljZKEYihemqZl[hevrbcjZg]\gh\hc]jmii_ijbh^bgZdh\hfagZq_gbbiZjZf_ljZKEY

ihjy^hdgmf_jZpbbijhp_kkh\\u[bjZ_lkykbkl_fhc

Ijhp_kkudhlhju_g_^he`gu\hclb\gh\u_dhffmgbdZlhjumdZau\Zxl\
dZq_kl\_ iZjZf_ljZ COLOR dhgklZglm MPI_UNDEFINED Bf \ iZjZf_lj_
NEWCOMM\_jg_lkyagZq_gb_MPI_COMM_NULL.
< ke_^mxs_f ijbf_j_ dhffmgbdZlhj MPI_COMM_WORLD jZa[b\Z_lky gZ ljb
qZklb<i_j\mx\hc^mlijhp_kkukghf_jZfb0, 3, 6bl^\h\lhjmx– 1, 4, 7
bl^Z\lj_lvx– 2, 5, 8bl^AZ^Zgb_\dZq_kl\_iZjZf_ljZKEYi_j_f_gghc
rank]ZjZglbjm_lqlhihjy^hdgmf_jZpbbijhp_kkh\\kha^Z\Z_fuo]jmiiZo
khhl\_lkl\m_l ihjy^dm gmf_jZpbb \ bkoh^ghc ]jmii_ lh _klv ihjy^dm
i_j_qbke_gby\ur_
call MPI_COMM_SPLIT(MPI_COMM_WORLD, mod(rank, 3),
rank, new_comm, ierr)

&

MPI_COMM_FREE(COMM, IERR)
INTEGER COMM, IERR
M^Ze_gb_ dhffmgbdZlhjZ COMM Ihke_ \uiheg_gby ijhp_^mju i_j_f_gghc
COMMijbk\Zb\Z_lkyagZq_gb_MPI_COMM_NULL?kebkwlbfdhffmgbdZlhjhfd

fhf_glm\uah\Zijhp_^mjum`_\uihegy_lkydZdZy-lhhi_jZpbylhhgZ[m^_l
aZ\_jr_gZ
<ke_^mxs_fijbf_j_kha^Z_lkyh^bggh\ucdhffmgbdZlhjcomm_revs\dhlhjuc \oh^yl \k_ ijhp_kku ijbeh`_gby ijhgmf_jh\Zggu_ \ h[jZlghf ihjy^d_Dh]^ZdhffmgbdZlhjklZgh\blkyg_gm`gufhgm^Zey_lkyijbihfhsb
\uah\Z ijhp_^mju MPI_COMM_FREE LZd fh`gh bkihevah\Zlv ijhp_^mjm
MPI_COMM_SPLIT^eyi_j_gmf_jZpbbijhp_kkh\
program example17
include 'mpif.h'
integer ierr, rank, size
integer comm_revs, rank1
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
call MPI_COMM_SPLIT(MPI_COMM_WORLD, 1, size-rank,
&
comm_revs, ierr)
call MPI_COMM_RANK(comm_revs, rank1, ierr)
print *, 'rank = ', rank,' rank1 = ', rank1
call MPI_COMM_FREE(comm_revs, ierr)
54

call MPI_FINALIZE(ierr)
end

AZ^Zgby
• DZdb_]jmiiuijhp_kkh\kms_kl\mxlijbaZimkd_ijbeh`_gby"
• Fh]mleb]jmiiuijhp_kkh\bf_lvg_imklh_i_j_k_q_gb_g_kh\iZ^Zxs__gbkh^ghcbagboiheghklvx"
• <q_fhlebqb_f_`^m]jmiihcijhp_kkh\bdhffmgbdZlhjhf"
• Fh]ml eb h[f_gb\Zlvky ^Zggufb ijhp_kku ijbgZ^e_`Zsb_ jZaguf
dhffmgbdZlhjZf"
• Fh`_leb\dZdhc-lh]jmii_g_[ulvijhp_kkZkghf_jhf0?
• Fh`_l eb \ dZdmx-eb[h ]jmiim g_ \hclb ijhp_kk k ghf_jhf 0 \
dhffmgbdZlhj_MPI_COMM_WORLD?
• Fh`_leblhevdhh^bgijhp_kk\g_dhlhjhc]jmii_\ua\Zlvijhp_^mjm
MPI_GROUP_INCL?
• DZd kha^Zlv gh\mx ]jmiim ba ijhp_kkh\ 3, 4 b 7 dhffmgbdZlhjZ
MPI_COMM_WORLD?
• JZa[blv \k_ ijhp_kku ijbeh`_gby gZ ljb ijhba\hevguo ]jmiiu b
gZi_qZlZlv jZg]b \ MPI_COMM_WORLD l_o ijhp_kkh\ qlh ihiZeb \ i_j\u_^\_]jmiiughg_ihiZeb\lj_lvx
• DZdb_dhffmgbdZlhjukms_kl\mxlijbaZimkd_ijbeh`_gby"
• Fh`gh eb \ ijhp_kk_ \uiheg_gby ijh]jZffu baf_gblv qbkeh
ijhp_kkh\\dhffmgbdZlhj_MPI_COMM_WORLD?
• Fh`_l eb lhevdh h^bg ijhp_kk \ g_dhlhjhf dhffmgbdZlhj_ \ua\Zlv
ijhp_^mjmMPI_COMM_CREATE?
• Fh`gh eb ijb ihfhsb ijhp_^mju MPI_COMM_SPLIT kha^Zlv jh\gh
h^bggh\ucdhffmgbdZlhj"
• Fh`gh eb ijb ihfhsb ijhp_^mju MPI_COMM_SPLIT kha^Zlv klhevdh
gh\uo dhffmgbdZlhjh\ kdhevdh ijhp_kkh\ \oh^bl \ [Zah\uc dhffmgbdZlhj"
• J_Zebah\Zlv jZa[b_gb_ ijhp_kkh\ gZ ^\_ ]jmiiu \ h^ghc ba dhlhjuo
hkms_kl\ey_lkyh[f_g^ZggufbihdhevpmZ\^jm]hc–dhffmgbdZpbb
ihko_f_PDVWHU-slave.

<bjlmZevgu_lhiheh]bb
Lhiheh]by –wlhf_oZgbafkhihklZ\e_gbyijhp_kkZfg_dhlhjh]hdhffmgbdZlhjZZevl_jgZlb\ghcko_fuZ^j_kZpbb<03,lhiheh]bb\bjlmZevgulh_klv
hgb g_ k\yaZgu k nbabq_kdhc lhiheh]b_c dhffmgbdZpbhgghc k_lb Lhiheh]bybkihevam_lkyijh]jZffbklhf^ey[he__m^h[gh]hh[hagZq_gbyijhp_kkh\
55

b lZdbf h[jZahf ijb[eb`_gby iZjZee_evghc ijh]jZffu d kljmdlmj_ fZl_fZlbq_kdh]h Ze]hjblfZ Djhf_ lh]h lhiheh]by fh`_l bkihevah\Zlvky
kbkl_fhc ^ey hilbfbaZpbb jZkij_^_e_gby ijhp_kkh\ ih nbabq_kdbf
ijhp_kkhjZf bkihevam_fh]h iZjZee_evgh]h dhfivxl_jZ ijb ihfhsb
baf_g_gbyihjy^dZgmf_jZpbbijhp_kkh\\gmljbdhffmgbdZlhjZ
<MPIij_^mkfhlj_gu^\ZlbiZlhiheh]bc
• ^_dZjlh\Z lhiheh]by
jZaf_jghklb 
• lhiheh]by]jZnZ.

ijyfhm]hevgZy

j_r_ldZ

ijhba\hevghc

MPI_TOPO_TEST(COMM, TYPE, IERR)
INTEGER COMM, TYPE, IERR

Ijhp_^mjZhij_^_e_gbylbiZlhiheh]bbk\yaZgghckdhffmgbdZlhjhf COMM.
<hafh`gu_\ha\jZsZ_fu_agZq_gbyiZjZf_ljZTYPE:
• MPI_GRAPH^eylhiheh]bb]jZnZ
• MPI_CART^ey^_dZjlh\hclhiheh]bb
• MPI_UNDEFINED – k dhffmgbdZlhjhf COMM g_ k\yaZgZ gbdZdZy lhiheh]by
>_dZjlh\Zlhiheh]by
MPI_CART_CREATE(COMM, NDIMS, DIMS, PERIODS, REORDER, COMM_CART,
IERR)
INTEGER COMM, NDIMS, DIMS(*), COMM_CART, IERR
LOGICAL PERIODS(*), REORDER
Kha^Zgb_ dhffmgbdZlhjZ COMM_CART h[eZ^Zxs_]h ^_dZjlh\hc lhiheh]b_c
ba ijhp_kkh\ dhffmgbdZlhjZ COMM IZjZf_lj NDIMS aZ^Z_l jZaf_jghklv
ihemqZ_fhc^_dZjlh\hcj_r_ldbDIMS(I) –qbkehwe_f_glh\\baf_j_gbbI,
1INDIMS. PERIODS – eh]bq_kdbc fZkkb\ ba NDIMS we_f_glh\
hij_^_eyxsbcy\ey_lkyebj_r_ldZi_jbh^bq_kdhc agZq_gb_.TRUE. \^hev
dZ`^h]hbaf_j_gbyREORDER –eh]bq_kdbciZjZf_ljhij_^_eyxsbcqlhijb
agZq_gbb .TRUE. kbkl_f_ jZaj_r_gh f_gylv ihjy^hd gmf_jZpbb ijhp_kkh\

^ey hilbfbaZpbb jZkij_^_e_gby ijhp_kkh\ ih nbabq_kdbf ijhp_kkhjZf
bkihevam_fh]hiZjZee_evgh]hdhfivxl_jZ

Ijhp_^mjZ y\ey_lky dhee_dlb\ghc Z agZqbl ^he`gZ [ulv \ua\ZgZ \k_fb
ijhp_kkZfb dhffmgbdZlhjZ COMM ?keb dhebq_kl\h ijhp_kkh\ \ aZ^Z\Z_fhc
lhiheh]bb COMM_CART f_gvr_ qbkeZ ijhp_kkh\ \ bkoh^ghf dhffmgbdZlhj_
KHFFlhg_dhlhjufijhp_kkZffh`_l\_jgmlvkyagZq_gb_ MPI_COMM_NULLZ
agZqblhgbg_[m^mlijbgbfZlvmqZklby\kha^Z\Z_fhclhiheh]bb?kebdh56

ebq_kl\h ijhp_kkh\ \ aZ^Z\Z_fhc lhiheh]bb [hevr_ qbkeZ ijhp_kkh\ \ bkoh^ghfdhffmgbdZlhj_lh\uah\[m^_lhrb[hqguf
<ke_^mxs_fijbf_j_kha^Z_lkylj_of_jgZylhiheh]by 4×3×2dZ`^h_baf_j_gb_dhlhjhcy\ey_lkyi_jbh^bq_kdbfdjhf_lh]hjZaj_rZ_lkyi_j_mihjy^hq_gb_ijhp_kkh\>ZggucnjZ]f_gl^he`_g\uihegylvkyg_f_g__q_fgZ
24ijhp_kkZo
dims(1) = 4
dims(2) = 3
dims(3) = 2
periods(1) = .TRUE.
periods(2) = .TRUE.
periods(3) = .TRUE.
call MPI_CART_CREATE(MPI_COMM_WORLD, 3, dims, periods,
&
.TRUE., comm_cart, ierr)
MPI_DIMS_CREATE(NNODES, NDIMS, DIMS, IERR)
INTEGER NNODES, NDIMS, DIMS(*), IERR
Ijhp_^mjZihfh]Z_lhij_^_eblvjZaf_ju DIMS(I)^eydZ`^hcba NDIMSjZaf_jghkl_cijbkha^Zgbb^_dZjlh\hclhiheh]bb^ey NNODESijhp_kkh\Ij_^-

ihqlbl_evgufkqblZ_lkykha^Zgb_lhiheh]bb\dhlhjhcqbkehijhp_kkh\ih
jZagufjZaf_jghklyfijbf_jghh^ghblh`_Ihevah\Zl_evfh`_lmijZ\eylv
qbkehfijhp_kkh\\g_dhlhjuojZaf_jghklyoke_^mxsbfh[jZahfAgZq_gb_
DIMS(I)jZkkqblu\Z_lky^Zgghcijhp_^mjhc_kebi_j_^\uah\hfhghjZ\gh
0 bgZq_ hklZ\ey_lky [_a baf_g_gbc HljbpZl_evgu_ agZq_gby we_f_glh\
fZkkb\Z DIMS y\eyxlky hrb[hqgufb I_j_^ \uah\hf ijhp_^mju agZq_gb_
NNODES ^he`gh [ulv djZlgh ijhba\_^_gbx g_gme_\uo agZq_gbc fZkkb\Z
DIMS <uoh^gu_ agZq_gby fZkkb\Z DIMS i_j_hij_^_e_ggu_ ^Zgghc
ijhp_^mjhc [m^ml mihjy^hq_gu \ ihjy^d_ m[u\Zgby Ijhp_^mjZ y\ey_lky
ehdZevghcbg_lj_[m_lf_`ijhp_kkgh]h\aZbfh^_ckl\by
<ke_^mxs_clZ[ebp_ijb\_^_guq_luj_ijbf_jZbkihevah\Zgbyijhp_^mju
MPI_DIMS_CREATE^eykha^Zgbylj_of_jguolhiheh]bc<i_j\hfijbf_j_ 6
ijhp_kkh\h[jZamxlj_r_ldm3×2×1ijbq_fjZaf_jumihjy^hq_gu\ihjy^d_
m[u\Zgby<h\lhjhfijbf_j_^_eZ_lkyihiuldZjZkij_^_eblv7ijhp_kkh\ih
lj_f baf_j_gbyf _^bgkl\_gguc \hafh`guc \ZjbZgl – j_r_ldZ 7×1×1 <
lj_lv_fijbf_j_^ey\lhjhcjZaf_jghklbbagZqZevghaZ^ZghagZq_gb_ 3^\_
hklZ\rb_kyjZaf_jghklbhij_^_eyxlj_r_ldm 2×3×1Q_l\_jluc\uah\hrb[hq_g lZd dZd h[s__ qbkeh ijhp_kkh\ 7  g_ ^_eblky gZp_eh gZ aZ^Zgguc
jZaf_j\h\lhjhcjZaf_jghklb 3).

57

dimsi_j_^

\uah\hf

(0,
(0,
(0,
(0,

0,
0,
3,
3,

0)
0)
0)
0)

\uah\ijhp_^mju
MPI_DIMS_CREATE(6,
MPI_DIMS_CREATE(7,
MPI_DIMS_CREATE(6,
MPI_DIMS_CREATE(7,

3,
3,
3,
3,

dims,
dims,
dims,
dims,

dimsihke_

\uah\Z

ierr)
ierr)
ierr)
ierr)

(3, 2, 1)
(7, 1, 1)
(2, 3, 1)
hrb[dZ

MPI_CART_COORDS(COMM, RANK, MAXDIMS, COORDS, IERR)
INTEGER COMM, RANK, MAXDIMS, COORDS(*), IERR

Hij_^_e_gb_^_dZjlh\uodhhj^bgZlijhp_kkZih_]hjZg]m RANK\dhffmgbdZlhj_ COMMDhhj^bgZlu\ha\jZsZxlky\fZkkb\_ COORDSkqbkehfwe_f_glh\MAXDIMSHlkq_ldhhj^bgZlihdZ`^hfmbaf_j_gbxgZqbgZ_lkykgmey
MPI_CART_RANK(COMM, COORDS, RANK, IERR)
INTEGER COMM, COORDS(*), RANK, IERR
Hij_^_e_gb_jZg]Z RANKijhp_kkZ\dhffmgbdZlhj_ COMMih_]h^_dZjlh\uf
dhhj^bgZlZf COORDS>eyi_jbh^bq_kdboj_r_lhddhhj^bgZlu\g_^himklb-

fuo bgl_j\Zeh\ i_j_kqblu\Zxlky ^ey g_i_jbh^bq_kdbo j_r_lhd hgb y\eyxlkyhrb[hqgufb

MPI_CART_SUB(COMM, DIMS, NEWCOMM, IERR)
INTEGER COMM, NEWCOMM, IERR
LOGICAL DIMS(*)
JZks_ie_gb_ dhffmgbdZlhjZ COMM k dhlhjuf k\yaZgZ ^_dZjlh\Z lhiheh]by
ijb ihfhsb ijhp_^mju MPI_CART_CREATE gZih^]jmiiukhhl\_lkl\mxsb_
^_dZjlh\uf ih^j_r_ldZf f_gvr_c jZaf_jghklb I–uc we_f_gl eh]bq_kdh]h
fZkkb\Z DIMS mklZgZ\eb\Z_lky jZ\guf agZq_gbx .TRUE. _keb I–h_

baf_j_gb_ ^he`gh hklZlvky \ nhjfbjm_fhc ih^j_r_ld_ k\yaZgghc k
dhffmgbdZlhjhfNEWCOMM.

<havf_f lj_of_jgmx lhiheh]bx kha^Zggmx \ ij_^u^ms_f ijbf_j_ Gb`_
ihdZaZghdZdjZks_iblvlhiheh]bx 4×3×2gZ 3^\mf_jguoih^j_r_ldb 4×2
ih8ijhp_kkh\\dZ`^hc
dims(0) = .TRUE.
dims(1) = .FALSE.
dims(2) = .TRUE.
call MPI_CART_SUB(comm_cart, dims, newcomm, ierr)
MPI_CARTDIM_GET(COMM, NDIMS, IERR)
INTEGER COMM, NDIMS, IERR
Hij_^_e_gb_jZaf_jghklb NDIMS^_dZjlh\hclhiheh]bbk\yaZgghckdhffmgbdZlhjhfCOMM.
MPI_CART_GET(COMM, MAXDIMS, DIMS, PERIODS, COORDS, IERR)
INTEGER COMM, MAXDIMS, DIMS(*), COORDS(*), IERR
58

LOGICAL PERIODS(*)

Ihemq_gb_ bgnhjfZpbb h ^_dZjlh\hc lhiheh]bb dhffmgbdZlhjZ COMM b dhhj^bgZlZo\g_c\ua\Z\r_]hijhp_kkZ MAXDIMSaZ^Z_ljZaf_jghklv^_dZjlh\hc lhiheh]bb < iZjZf_lj_ DIMS \ha\jZsZ_lky dhebq_kl\h ijhp_kkh\ ^ey
dZ`^h]hbaf_j_gby\iZjZf_lj_PERIODS –i_jbh^bqghklvihdZ`^hfmbaf_j_gbx\iZjZf_lj_COORDS –dhhj^bgZlu\ua\Z\r_]hijhp_kkZ\^_dZjlh\hc
lhiheh]bb
MPI_CART_SHIFT(COMM, DIRECTION, DISP, SOURCE, DEST, IERR)
INTEGER COMM, DIRECTION, DISP, SOURCE, DEST, IERR
Ihemq_gb_ghf_jh\ihkueZxs_]h SOURCE bijbgbfZxs_]h DEST ijhp_kkh\\^_dZjlh\hclhiheh]bbdhffmgbdZlhjZ COMM^eyhkms_kl\e_gbyk^\b]Z
\^hevbaf_j_gbyDIRECTIONgZ\_ebqbgmDISP.

>eyi_jbh^bq_kdbobaf_j_gbchkms_kl\ey_lkypbdebq_kdbck^\b]^eyg_i_jbh^bq_kdbo – ebg_cguc k^\b] < kemqZ_ ebg_cgh]h k^\b]Z gZ g_dhlhjuo
ijhp_kkZo \ dZq_kl\_ ghf_jh\ ihkueZxs_]h beb ijbgbfZxs_]h ijhp_kkh\
fh`_l [ulv ihemq_gh agZq_gb_ MPI_PROC_NULL hagZqZxs__ \uoh^ aZ ]jZgbpu ^bZiZahgZ < kemqZ_ pbdebq_kdh]h k^\b]Z ihke_^gbc ijhp_kk ih
^Zgghfm baf_j_gbx hkms_kl\ey_l h[f_gu k gme_\uf ijhp_kkhf >ey nf_jghc^_dZjlh\hcj_r_ldbagZq_gb_ DIRECTION^he`gh[ulv\ij_^_eZohl
0^hn-1.
AgZq_gby SOURCEb DESTfh`ghbkihevah\ZlvgZijbf_j^eyh[f_gZkihfhsvxijhp_^mjuMPI_SENDRECV.
< ke_^mxs_f ijbf_j_ kha^Z_lky ^\mf_jgZy ^_dZjlh\Z j_r_ldZ i_jbh^bq_kdZyihh[hbfbaf_j_gbyfhij_^_eyxlkydhhj^bgZluijhp_kkZ\^Zgghcj_r_ld_ Ihlhf ijb ihfhsb ijhp_^mju MPI_CART_SHIFT \uqbkeyxlky dhhj^bgZluijhp_kkh\kdhlhjufbgm`ghkh\_jrblvh[f_g^Zggufb^eyhkms_kl\e_gbypbdebq_kdh]hk^\b]ZkrZ]hf2ihbaf_j_gbx1<dhgp_njZ]f_glZ
ihemq_ggu_agZq_gbyghf_jh\ijhp_kkh\bkihevamxlky^eyh[f_gZ^Zggufb
ijbihfhsbijhp_^mjuMPI_SENDRECV_REPLACE.
periods(1) = .TRUE.
periods(2) = .TRUE.
call MPI_CART_CREATE(MPI_COMM_WORLD, 2, dims,
&
periods, .TRUE., comm, ierr)
call MPI_COMM_RANK(comm, rank, ierr)
call MPI_CART_COORDS(comm, rank, 2, coords, ierr)
shift = 2
dest = 1
call MPI_CART_SHIFT(comm, 0, shift, source, dest, ierr)
call MPI_SENDRECV_REPLACE(a, 1, MPI_REAL, dest, 0,
&
source, 0, comm, status, ierr)

59

Lhiheh]by]jZnZ
MPI_GRAPH_CREATE(COMM, NNODES, INDEX, EDGES, REORDER,
COMM_GRAPH, IERR)
INTEGER COMM, NNODES, INDEX(*), EDGES(*), COMM_GRAPH, IERR
LOGICAL REORDER
Kha^Zgb_gZhkgh\_dhffmgbdZlhjZ COMMgh\h]hdhffmgbdZlhjZ COMM_GRAPH
klhiheh]b_c]jZnZIZjZf_lj NNODESaZ^Z_lqbkeh\_jrbg]jZnZ INDEX(I)
kh^_j`bl kmffZjgh_ dhebq_kl\h khk_^_c ^ey i_j\uo I \_jrbg FZkkb\
EDGES kh^_j`bl mihjy^hq_gguc kibkhd ghf_jh\ ijhp_kkh\-khk_^_c \k_o
\_jrbgIZjZf_lj REORDERijbagZq_gbb .TRUE.hagZqZ_lqlhkbkl_f_jZa-

j_r_ghf_gylvihjy^hdgmf_jZpbbijhp_kkh\

Ijhp_^mjZ y\ey_lky dhee_dlb\ghc Z agZqbl ^he`gZ [ulv \ua\ZgZ \k_fb
ijhp_kkZfbbkoh^gh]hdhffmgbdZlhjZ?kebNNODESf_gvr_qbkeZijhp_kkh\
dhffmgbdZlhjZ COMM lh g_dhlhjuf ijhp_kkZf \_jg_lky agZq_gb_
MPI_COMM_NULL Z agZqbl hgb g_ [m^ml ijbgbfZlv mqZklby \ kha^Z\Z_fhc
lhiheh]bb ?keb NNODES [hevr_ qbkeZ ijhp_kkh\ dhffmgbdZlhjZ COMM lh
\uah\ijhp_^mjuy\ey_lkyhrb[hqguf
<ke_^mxs_clZ[ebqd_ijb\_^_gijbf_jhibkZgby]jZnZq_j_aaZ^Zgb_\k_o
khk_^_cdZ`^hc\_jrbgu
Ijhp_kk

Khk_^b

0
1
2
3

1, 3
0
3
0, 2

>eyhibkZgbylZdh]h]jZnZgm`ghaZihegblvke_^mxsb_kljmdlmju^Zgguo
INDEX=2, 3, 4, 6
EDGES=1, 3, 0, 3, 0, 2

Ihke_ wlh]h fh`gh kha^Zlv lhiheh]bx ]jZnZ gZijbf_j k ihfhsvx
ke_^mxs_]h \uah\Z \uah\ [m^_l dhjj_dlguf ijb \uiheg_gbb gZ g_ f_g__
q_fgZ4ijhp_kkZo 
call MPI_GRAPH_CREATE(MPI_COMM_WORLD, 4, INDEX, EDGES,
.TRUE., comm_graph, ierr)

&

60

MPI_GRAPH_NEIGHBORS_COUNT(COMM, RANK, NNEIGHBORS, IERR)
INTEGER COMM, RANK, NNEIGHBORS, IERR
Hij_^_e_gb_ dhebq_kl\Z NNEIGHBORS g_ihkj_^kl\_gguo khk_^_c ijhp_kkZ k
jZg]hfRANK\]jZnh\hclhiheh]bbk\yaZgghckdhffmgbdZlhjhfCOMM.
MPI_GRAPH_NEIGHBORS(COMM, RANK, MAX, NEIGHBORS, IERR)
INTEGER COMM, RANK, MAX, NEIGHBORS(*), IERR

Hij_^_e_gb_ jZg]h\ g_ihkj_^kl\_gguo khk_^_c ijhp_kkZ k jZg]hf RANK \
]jZnh\hclhiheh]bbk\yaZgghckdhffmgbdZlhjhf COMMJZg]bkhk_^_c\ha\jZsZxlky \ fZkkb\_ NEIGHBORS, MAX aZ^Z_l h]jZgbq_gb_gZdhebq_kl\hkhk_^_c
fh`_l [ulv ihemq_gh gZijbf_j \uah\hf ijhp_^mju
MPI_GRAPH_NEIGHBORS_COUNT).
MPI_GRAPHDIMS_GET(COMM, NNODES, NEDGES, IERR)
INTEGER COMM, NNODES, NEDGES, IERR
Hij_^_e_gb_ qbkeZ \_jrbg NNODES b qbkeZ j_[_j NEDGES]jZnh\hclhiheh]bbk\yaZgghckdhffmgbdZlhjhfCOMM.
MPI_GRAPH_GET(COMM, MAXINDEX, MAXEDGES, INDEX, EDGES, IERR)
INTEGER COMM, MAXINDEX, MAXEDGES, INDEX(*), EDGES(*), IERR

Hij_^_e_gb_ bgnhjfZpbb h lhiheh]bb ]jZnZ k\yaZgghc k dhffmgbdZlhjhf
COMM<fZkkb\Zo INDEXbEDGES\ha\jZsZ_lkyhibkZgb_]jZnh\hclhiheh]bb
\lhf\b^_dZdhgZaZ^Z_lkyijbkha^Zgbblhiheh]bbkihfhsvxijhp_^mju
MPI_GRAPH_CREATEIZjZf_lju MAXINDEXbMAXEDGESaZ^Zxlh]jZgbq_gbygZ
jZaf_jukhhl\_lkl\mxsbofZkkb\h\ fh]ml[ulvihemq_gugZijbf_j\uah\hfijhp_^mjuMPI_GRAPHDIMS_GET).
<ke_^mxs_fijbf_j_kha^Z_lky]jZnh\Zylhiheh]by comm_graph^eyh[s_gby ijhp_kkh\ ih dhffmgbdZpbhgghc ko_f_ PDVWHU-VODYH <k_ ijhp_kku \
jZfdZo ^Zgghc lhiheh]bb fh]ml h[sZlvky lhevdh k gme_\uf ijhp_kkhf
Ihke_kha^Zgbylhiheh]bbkihfhsvx\uah\Zijhp_^mjuMPI_GRAPH_CREATE
dZ`^uc ijhp_kk hij_^_ey_l dhebq_kl\h k\hbo g_ihkj_^kl\_gguo khk_^_c \
jZfdZo ^Zgghc lhiheh]bb
k ihfhsvx \uah\Z ijhp_^mju
MPI_GRAPH_NEIGHBORS_COUNT  b jZg]b ijhp_kkh\-khk_^_c k ihfhsvx \uah\Zijhp_^mju MPI_GRAPH_NEIGHBORS Ihke_wlh]hdZ`^ucijhp_kkfh`_l
\ jZfdZo ^Zgghc lhiheh]bb h[f_gb\Zlvky ^Zggufb kh k\hbfb g_ihkj_^kl\_ggufbkhk_^yfbgZijbf_jijbihfhsb\uah\Zijhp_^mjuMPI_SENDRECV.

61

program example18
include 'mpif.h'
integer ierr, rank, rank1, i, size, MAXPROC, MAXEDGES
parameter (MAXPROC = 128, MAXEDGES = 512)
integer a, b
integer status(MPI_STATUS_SIZE)
integer comm_graph, index(MAXPROC), edges(MAXEDGES)
integer num, neighbors(MAXPROC)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
do i = 1, size
index(i) = size+i-2
end do
do i = 1, size-1
edges(i) = i
edges(size+i-1) = 0
end do
call MPI_GRAPH_CREATE(MPI_COMM_WORLD, size, index, edges,
&
.TRUE., comm_graph, ierr)
call MPI_GRAPH_NEIGHBORS_COUNT(comm_graph, rank, num,
&
ierr)
call MPI_GRAPH_NEIGHBORS(comm_graph, rank, num, neighbors,
&
ierr)
do i = 1, num
call MPI_SENDRECV(rank, 1, MPI_INTEGER, neighbors(i),
&
1, rank1, 1, MPI_INTEGER,
&
neighbors(i), 1, comm_graph,
&
status, ierr)
print *, 'procecc ', rank, ' communicate with process',
&
rank1
end do
call MPI_FINALIZE(ierr)
end

AZ^Zgby
• H[yaZgZ eb \bjlmZevgZy lhiheh]by ih\lhjylv nbabq_kdmx lhiheh]bx
p_e_\h]hdhfivxl_jZ"
• Ex[hcebdhffmgbdZlhjfh`_lh[eZ^Zlv\bjlmZevghclhiheh]b_c"
• Fh`_l eb ijhp_kk \oh^blv h^gh\j_f_ggh \ ^_dZjlh\m lhiheh]bx b \
lhiheh]bx]jZnZ"
• Fh`gh eb \ua\Zlv ijhp_^mjm MPI_CART_CREATE lhevdh gZ iheh\bg_
ijhp_kkh\dhffmgbdZlhjZ"
• G_h[oh^bfhebbkihevah\Zlvijhp_^mjmMPI_DIMS_CREATEi_j_^\uah\hfijhp_^mjuMPI_CART_CREATE?
• Fh`ghebbkihevah\Zlvdhhj^bgZluijhp_kkZ\^_dZjlh\hclhiheh]bb
\ijhp_^mjZoh[f_gZ^Zggufb"
62

• DZdb_
•
•
•

•

i_j_kuedb
^Zgguo
hkms_kl\eyxlky
ijhp_^mjhc
MPI_CART_SHIFT?
DZd hij_^_eblv k dZdbfb ijhp_kkZfb \ lhiheh]bb ]jZnZ k\yaZg ^Zggucijhp_kk"
DZdkha^Zlvlhiheh]bx]jZnZ\dhlhjhcdZ`^ucijhp_kkk\yaZgkdZ`^uf"
J_Zebah\Zlv jZa[b_gb_ ijhp_kkh\ gZ ^\_ ]jmiiu \ h^ghc ba dhlhjuo
hkms_kl\ey_lkyh[f_gihdhevpmijbihfhsbk^\b]Z\h^ghf_jghc^_dZjlh\hclhiheh]bbZ\^jm]hc–dhffmgbdZpbbihko_f_PDVWHU-slave,
j_Zebah\Zgghcijbihfhsblhiheh]bb]jZnZ
Bkihevah\Zlv^\mf_jgmx^_dZjlh\mlhiheh]bxijhp_kkh\ijbj_ZebaZpbbiZjZee_evghcijh]jZffui_j_fgh`_gbyfZljbp

I_j_kuedZjZaghlbiguo^Zgguo
Ih^ khh[s_gb_f \ MPI ihgbfZ_lky fZkkb\ h^ghlbiguo ^Zgguo jZkiheh`_gguo\ihke_^h\Zl_evguoyq_cdZoiZfylbQZklh\ijh]jZffZolj_[mxlky
i_j_kuedb[he__keh`guoh[t_dlh\^ZgguokhklhysbobajZaghlbiguowe_f_glh\ beb jZkiheh`_gguo g_ \ ihke_^h\Zl_evguo yq_cdZo iZfylb < wlhf
kemqZ_fh`gheb[hihkueZlv^Zggu_g_[hevrbfbihjpbyfbjZkiheh`_gguo
ih^jy^we_f_glh\h^gh]hlbiZeb[hbkihevah\Zlvdhibjh\Zgb_^Zgguoi_j_^
hlkuedhc\g_dhlhjucijhf_`mlhqguc[mn_jH[Z\ZjbZglZy\eyxlky^hklZlhqgh g_m^h[gufb b lj_[mxl ^hihegbl_evguo aZljZl dZd \j_f_gb lZd b
hi_jZlb\ghciZfylb
>eyi_j_kuedbjZaghlbiguo^Zgguo\MPIij_^mkfhlj_gu^\Zki_pbZevguo
kihkh[Z
• Ijhba\h^gu_lbiu^Zgguo;
• MiZdh\dZ^Zgguo.
Ijhba\h^gu_lbiu^Zgguo
Ijhba\h^gu_lbiu^Zgguokha^Zxlky\h\j_fy\uiheg_gbyijh]jZffukihfhsvxijhp_^mj-dhgkljmdlhjh\gZhkgh\_kms_kl\mxsbodfhf_glm\uah\Z
dhgkljmdlhjZlbih\^Zgguo
Kha^Zgb_lbiZ^Zgguokhklhblba^\mowlZih\
1. Dhgkljmbjh\Zgb_lbiZ
2. J_]bkljZpbylbiZ
63

Ihke_ j_]bkljZpbb ijhba\h^guc lbi ^Zgguo fh`gh bkihevah\Zlv gZjy^m k
ij_^hij_^_e_ggufblbiZfb\hi_jZpbyoi_j_kuedb\lhfqbke_b\dhee_dlb\guohi_jZpbyoIhke_aZ\_jr_gbyjZ[hlukijhba\h^guflbihf^Zgguo
_]hj_dhf_g^m_lkyZggmebjh\ZlvIjbwlhf\k_ijhba\_^_ggu_gZ_]hhkgh\_
gh\u_lbiu^ZgguohklZxlkybfh]mlbkihevah\Zlvky^Zevr_
Ijhba\h^guclbi^ZgguooZjZdl_jbam_lkyihke_^h\Zl_evghklvx[Zah\uolbih\ ^Zgguo b gZ[hjhf p_ehqbke_gguo agZq_gbc kf_s_gby we_f_glh\ lbiZ
hlghkbl_evghgZqZeZ[mn_jZh[f_gZKf_s_gbyfh]ml[ulvdZdiheh`bl_evgufblZdbhljbpZl_evgufbg_h[yaZgujZaebqZlvkyg_lj_[m_lkybomihjy^hq_gghklvLZdbfh[jZahfihke_^h\Zl_evghklvwe_f_glh\^Zgguo\ijhba\h^ghf lbi_ fh`_l hlebqZlvky hl ihke_^h\Zl_evghklb bkoh^gh]h lbiZ Z
h^bg we_f_gl ^Zgguo fh`_l \klj_qZlvky \ dhgkljmbjm_fhf lbi_ fgh]hdjZlgh
MPI_TYPE_CONTIGUOUS(COUNT, TYPE, NEWTYPE, IERR)
INTEGER COUNT, TYPE, NEWTYPE, IERR
Kha^Zgb_ gh\h]h lbiZ ^Zgguo NEWTYPE khklhys_]h ba COUNT ihke_^h\Zl_evgh jZkiheh`_gguo we_f_glh\ [Zah\h]h lbiZ ^Zgguo TYPE NZdlbq_kdb

kha^Z\Z_fuclbi^Zgguoij_^klZ\ey_lfZkkb\^Zgguo[Zah\h]hlbiZdZdhl^_evguch[t_dl

< ke_^mxs_f ijbf_j_ kha^Z_lky gh\uc lbi ^Zgguo newtype dhlhjuc \
^Zevg_cr_f ihke_j_]bkljZpbblbiZ fh`_lbkihevah\Zlvky^eyi_j_kuedb
iylbjZkiheh`_gguoih^jy^p_euoqbk_e
call MPI_TYPE_CONTIGUOUS(5, MPI_INTEGER, newtype, ierr)
MPI_TYPE_VECTOR(COUNT, BLOCKLEN, STRIDE, TYPE, NEWTYPE, IERR)
INTEGER COUNT, BLOCKLEN, STRIDE, TYPE, NEWTYPE, IERR
Kha^Zgb_ gh\h]h lbiZ ^Zgguo NEWTYPE khklhys_]h ba COUNT [ehdh\ ih
BLOCKLEN we_f_glh\ [Zah\h]h lbiZ ^Zgguo TYPE Ke_^mxsbc [ehd gZqbgZ_lky q_j_a STRIDE we_f_glh\ [Zah\h]h lbiZ ^Zgguo ihke_ gZqZeZ ij_^u^m-

s_]h[ehdZ

<ke_^mxs_fijbf_j_kha^Z_lkygh\uclbi^Zgguo newtypedhlhjucihke_
j_]bkljZpbb fh`_l [ulv bkihevah\Zg ^ey i_j_kuedb dZd _^bgh]h p_eh]h
r_klb we_f_glh\ ^Zgguo dhlhju_ fh`gh ij_^klZ\blv ke_^mxsbf h[jZahf
lbi we_f_glZ ^Zgguo dhebq_kl\h we_f_glh\ ^Zgguo hl gZqZeZ [mn_jZ ihkuedb 
{(MPI_REAL, 0), (MPI_REAL, 1), (MPI_REAL, 2),
(MPI_REAL, 5), (MPI_REAL, 6), (MPI_REAL, 7)}

64

count = 2
blocklen = 3
stride = 5
call MPI_TYPE_VECTOR(count, blocklen, stride,
&
MPI_REAL, newtype, ierr)
MPI_TYPE_HVECTOR(COUNT, BLOCKLEN, STRIDE, TYPE, NEWTYPE, IERR)
INTEGER COUNT, BLOCKLEN, STRIDE, TYPE, NEWTYPE, IERR
Kha^Zgb_ gh\h]h lbiZ ^Zgguo NEWTYPE khklhys_]h ba COUNT [ehdh\ ih
BLOCKLEN we_f_glh\ [Zah\h]h lbiZ ^Zgguo TYPE Ke_^mxsbc [ehd gZqbgZ_lkyq_j_aSTRIDE[Zclihke_gZqZeZij_^u^ms_]h[ehdZ
MPI_TYPE_INDEXED(COUNT, BLOCKLENS, DISPLS, TYPE, NEWTYPE, IERR)
INTEGER COUNT, BLOCKLENS(*), DISPLS(*), TYPE, NEWTYPE, IERR
Kha^Zgb_ gh\h]h lbiZ ^Zgguo NEWTYPE khklhys_]h ba COUNT [ehdh\ ih
BLOCKLENS(I) we_f_glh\ [Zah\h]h lbiZ ^Zgguo I-c [ehd gZqbgZ_lky q_j_a
DISPLS(I)we_f_glh\[Zah\h]hlbiZ^ZgguokgZqZeZ[mn_jZihkuedbIhem-

q_gguclbi^Zgguofh`ghkqblZlvh[h[s_gb_f\_dlhjgh]hlbiZ

< ke_^mxs_f ijbf_j_ aZ^Z_lky lbi ^Zgguo newtype ^ey hibkZgby gb`g_lj_m]hevghcfZljbpulbiZ double precision ijbwlhfmqblu\Z_lkyqlh\
yaud_NhjljZgfZkkb\uojZgylkyihklhe[pZf 
do i = 1, n
blocklens(i) = n-i+1
displs(i) = n*(i-1)+i-1
end do
call MPI_TYPE_INDEXED(n, blocklens, displs,
MPI_DOUBLE_PRECISION, newtype, ierr)
MPI_TYPE_HINDEXED(COUNT, BLOCKLENS, DISPLS, TYPE, NEWTYPE, IERR)
INTEGER COUNT, BLOCKLENS(*), DISPLS(*), TYPE, NEWTYPE, IERR
Kha^Zgb_ gh\h]h lbiZ ^Zgguo NEWTYPE khklhys_]h ba COUNT [ehdh\ ih
BLOCKLENS(I) we_f_glh\ [Zah\h]h lbiZ ^Zgguo I-c [ehd gZqbgZ_lky q_j_a
DISPLS(I)[ZclkgZqZeZ[mn_jZihkuedb
MPI_TYPE_STRUCT(COUNT, BLOCKLENS, DISPLS, TYPES, NEWTYPE, IERR)
INTEGER COUNT, BLOCKLENS(*), DISPLS(*), TYPES(*), NEWTYPE, IERR
Kha^Zgb_ kljmdlmjgh]h lbiZ ^Zgguo NEWTYPE ba COUNT [ehdh\ ih
BLOCKLENS(I) we_f_glh\ lbiZ TYPES(I). I-c [ehd gZqbgZ_lky q_j_a
DISPLS(I)[ZclkgZqZeZ[mn_jZihkuedb

<ke_^mxs_fijbf_j_kha^Z_lkygh\uclbi^Zgguo newtypedhlhjucihke_
j_]bkljZpbbfh`_l[ulvbkihevah\Zg^eyi_j_kuedbdZd_^bgh]hp_eh]hiylb
we_f_glh\ ^Zgguo dhlhju_ fh`gh ij_^klZ\blv ke_^mxsbf h[jZahf lbi
we_f_glZ^Zgguodhebq_kl\h[ZclhlgZqZeZ[mn_jZihkuedb 
{(MPI_DOUBLE_PRECISION, 0), (MPI_DOUBLE_PRECISION, 8),
65

(MPI_DOUBLE_PRECISION, 16), (MPI_CHARACTER, 24), (MPI_CHARACTER, 25)}
blocklens(1) = 3
blocklens(2) = 2
types(1) = MPI_DOUBLE_PRECISION
types(2) = MPI_CHARACTER
displs(1) = 0
displs(2) = 24
call MPI_TYPE_STRUCT(2, blocklens, displs, types,
&
newtype, ierr)
MPI_TYPE_COMMIT(DATATYPE, IERR)
INTEGER DATATYPE, IERR

J_]bkljZpbykha^Zggh]hijhba\h^gh]hlbiZ^Zgguo DATATYPEIhke_j_]bkljZpbb wlhl lbi ^Zgguo fh`gh bkihevah\Zlv \ hi_jZpbyo h[f_gZ gZjZ\g_ k
ij_^hij_^_e_ggufblbiZfb^ZgguoIj_^hij_^_e_ggu_lbiu^Zgguoj_]bkljbjh\Zlvg_gm`gh
MPI_TYPE_FREE(DATATYPE, IERR)
INTEGER DATATYPE, IERR

:ggmebjh\Zgb_ ijhba\h^gh]h lbiZ ^Zgguo DATATYPE IZjZf_lj DATATYPE
mklZgZ\eb\Z_lky \ agZq_gb_ MPI_DATATYPE_NULL =ZjZglbjm_lky qlh ex[hc
gZqZluc h[f_g bkihevamxsbc ^Zggu_ Zggmebjm_fh]h lbiZ [m^_l
ghjfZevgh aZ\_jr_g Ijb wlhf ijhba\h^gu_ hl DATATYPE lbiu ^Zgguo
hklZxlky b fh]ml bkihevah\Zlvky ^Zevr_ Ij_^hij_^_e_ggu_ lbiu ^Zgguo
g_fh]ml[ulvZggmebjh\Zgu
MPI_TYPE_SIZE(DATATYPE, SIZE, IERR)
INTEGER DATATYPE, SIZE, IERR
Hij_^_e_gb_jZaf_jZ SIZElbiZ^Zgguo DATATYPE\[ZclZo h[t_fZiZfylb

aZgbfZ_fh]hh^gbfwe_f_glhf^Zggh]hlbiZ 

MPI_ADDRESS(LOCATION, ADDRESS, IERR)
<type> LOCATION(*)
INTEGER ADDRESS, IERR

Hij_^_e_gb_ Z[khexlgh]h [Zcl-Z^j_kZ ADDRESS jZaf_s_gby fZkkb\Z
LOCATION \ hi_jZlb\ghc iZfylb dhfivxl_jZ :^j_k hlkqblu\Z_lky hl [Zah\h]h Z^j_kZ agZq_gb_ dhlhjh]h kh^_j`blky \ kbkl_fghc dhgklZgl_
MPI_BOTTOM Ijhp_^mjZ iha\hey_l hij_^_eylv Z[khexlgu_ Z^j_kZ h[t_dlh\
dZd \ yaud_ NhjljZg lZd b \ Kb ohly \ Kb ^ey wlh]h ij_^mkfhlj_gu bgu_
kj_^kl\Z<yaud_KbiZjZf_ljADDRESSbf__llbiMPI_Aint.
<ke_^mxs_fijbf_j_hibku\Z_lkygh\uclbi^Zgguonewtypedhlhjucihke_ j_]bkljZpbb bkihevam_lky ^ey i_j_kuedbdZd_^bgh]hp_eh]h^\mowe_f_glh\^Zgguolbih\ double precisionb character(1)<dZq_kl\_Z^j_kZ
[mn_jZihkuedbbkihevam_lky[Zah\ucZ^j_k MPI_BOTTOMZ^eyhij_^_e_gby
kf_s_gbc we_f_glh\ ^Zgguo dat1 b dat2 bkihevamxlky \uah\u ijhp_^mju
66

MPI_ADDRESSI_j_^i_j_kuedhcgh\uclbij_]bkljbjm_lkyijbihfhsb\uah\Zijhp_^mju MPI_TYPE_COMMITAZf_lbfqlhi_j_kueZ_lkyh^bgwe_f_gl

^Zgguo ijhba\h^gh]h lbiZ ohly hg b khklhbl ba ^\mo jZaghlbiguo
we_f_glh\
blocklens(1) = 1
blocklens(2) = 1
types(1) = MPI_DOUBLE_PRECISION
types(2) = MPI_CHARACTER
call MPI_ADDRESS(dat1, address(1), ierr)
displs(1) = address(1)
call MPI_ADDRESS(dat2, address(2), ierr)
displs(2) = address(2)
call MPI_TYPE_STRUCT(2, blocklens, displs, types,
&
newtype, ierr)
call MPI_TYPE_COMMIT(newtype, ierr)
call MPI_SEND(MPI_BOTTOM, 1, newtype, dest, tag,
&
MPI_COMM_WORLD, ierr)
MPI_TYPE_LB(DATATYPE, DISPL, IERR)
INTEGER DATATYPE, DISPL, IERR
Hij_^_e_gb_kf_s_gby DISPL\[ZclZogb`g_c]jZgbpuwe_f_glZlbiZ^ZgguoDATATYPEhlgZqZeZ[mn_jZ^Zgguo

MPI_TYPE_UB(DATATYPE, DISPL, IERR)
INTEGER DATATYPE, DISPL, IERR
Hij_^_e_gb_kf_s_gby DISPL\[ZclZo\_jog_c]jZgbpuwe_f_glZlbiZ^ZgguoDATATYPEhlgZqZeZ[mn_jZ^Zgguo
MPI_TYPE_EXTENT(DATATYPE, EXTENT, IERR)
INTEGER DATATYPE, EXTENT, IERR
Hij_^_e_gb_ ^bZiZahgZ EXTENT jZagbpu f_`^m \_jog_c b gb`g_c ]jZgbpZfbwe_f_glZ^Zggh]hlbiZ lbiZ^ZgguoDATATYPE\[ZclZo

< ke_^mxs_f ijbf_j_ ijhba\h^guc lbi ^Zgguo bkihevam_lky ^ey i_j_klZgh\dbklhe[ph\fZljbpu\h[jZlghfihjy^d_Lbi^Zgguo matr_revkha^Z\Z_fucijhp_^mjhc MPI_TYPE_VECTORhibku\Z_lehdZevgmxqZklvfZljbpu
^Zggh]hijhp_kkZ\i_j_klZ\e_ggufb\h[jZlghfihjy^d_klhe[pZfbIhke_
j_]bkljZpbb wlhl lbi ^Zgguo fh`_l bkihevah\Zlvky ijb i_j_kued_
Ijh]jZffZ jZ[hlZ_l ijZ\bevgh _keb jZaf_j fZljbpu N ^_eblky gZp_eh gZ
qbkehijhp_kkh\ijbeh`_gby

67

program example19
include 'mpif.h'
integer ierr, rank, size, N, nl
parameter (N = 8)
double precision a(N, N), b(N, N)
call MPI_INIT(ierr)
call MPI_COMM_SIZE(MPI_COMM_WORLD, size, ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
nl = (N-1)/size+1
call work(a, b, N, nl, size, rank)
call MPI_FINALIZE(ierr)
end
subroutine work(a, b, n, nl, size, rank)
include 'mpif.h'
integer ierr, rank, size, n, nl, ii, matr_rev
double precision a(n, nl), b(n, nl)
integer i, j, status(MPI_STATUS_SIZE)
do j = 1, nl
do i = 1, n
b(i,j) = 0.d0
ii = j+rank*nl
a(i,j) = 100*ii+i
enddo
enddo
call MPI_TYPE_VECTOR(nl, n, -n, MPI_DOUBLE_PRECISION,
&
matr_rev, ierr)
call MPI_TYPE_COMMIT(matr_rev, ierr)
call MPI_SENDRECV(a(1, nl), 1, MATR_REV, size-rank-1, 1,
&
b, nl*n, MPI_DOUBLE_PRECISION,
&
size-rank-1, 1, MPI_COMM_WORLD,
&
status, ierr)
do j = 1, nl
do i = 1, n
print *, 'process ', rank, ': ',
&
j+rank*nl, ' ', i, a(i,j), ' ', b(i,j)
enddo
enddo
end

MiZdh\dZ^Zgguo
>eyi_j_kuehdjZaghjh^guo^ZgguogZjy^mkkha^Zgb_fijhba\h^guolbih\
fh`ghbkihevah\Zlvhi_jZpbbmiZdh\dbbjZkiZdh\db^ZgguoJZaghjh^gu_
bebjZkiheh`_ggu_g_\ihke_^h\Zl_evguoyq_cdZoiZfylb^Zggu_ihf_sZxlky\h^bgg_ij_ju\guc[mn_ji_j_kueZ_lkyZihlhfihemq_ggh_khh[s_gb_kgh\ZjZkij_^_ey_lkyihgm`gufyq_cdZfiZfylb

68

MPI_PACK(INBUF, INCOUNT, DATATYPE, OUTBUF, OUTSIZE, POSITION,
COMM, IERR)
<type> INBUF(*), OUTBUF(*)
INTEGER INCOUNT, DATATYPE, OUTSIZE, POSITION, COMM, IERR
MiZdh\dZ INCOUNT we_f_glh\ lbiZ DATATYPE ba fZkkb\Z INBUF \ fZkkb\
OUTBUFkhk^\b]hf POSITION[ZclhlgZqZeZfZkkb\Z;mn_j OUTBUF^he`_g
kh^_j`ZlvihdjZcg_cf_j_ OUTSIZE[ZclIhke_\uiheg_gbyijhp_^mjuiZjZf_lj POSITIONm\_ebqb\Z_lkygZqbkeh[ZcljZ\gh_jZaf_jmaZibkbIZjZf_lj COMMmdZau\Z_lgZdhffmgbdZlhj\dhlhjhf\^Zevg_cr_f[m^_li_j_-

kueZlvkykhh[s_gb_>eyi_j_kuedbmiZdh\Zgguo^Zgguobkihevam_lkylbi
^ZgguoMPI_PACKED.

MPI_UNPACK(INBUF, INSIZE, POSITION, OUTBUF, OUTCOUNT, DATATYPE,
COMM, IERR)
<type> INBUF(*), OUTBUF(*)
INTEGER INSIZE, POSITION, OUTCOUNT, DATATYPE, COMM, IERR
JZkiZdh\dZ OUTCOUNTwe_f_glh\lbiZ DATATYPEbafZkkb\Z INBUFkhk^\b]hf
POSITION [Zcl hl gZqZeZ fZkkb\Z \ fZkkb\ OUTBUF FZkkb\ INBUF bf__l
jZaf_jg_f_g__INSIZE[Zcl
MPI_PACK_SIZE(INCOUNT, DATATYPE, COMM, SIZE, IERR)
INTEGER INCOUNT, DATATYPE, COMM, SIZE, IERR
Hij_^_e_gb_ g_h[oh^bfh]h h[t_fZ iZfylb SIZE \ [ZclZo  ^ey miZdh\db
INCOUNT we_f_glh\ lbiZ DATATYPE G_h[oh^bfuc ^ey miZdh\db jZaf_j fh-

`_lij_\urZlvkmffmjZaf_jh\iZdm_fuowe_f_glh\^Zgguo

< ke_^mxs_f ijbf_j_ fZkkb\ bufbkihevam_lky\dZq_kl\_[mn_jZ^eymiZdh\db 10 we_f_glh\ fZkkb\Z a lbiZ real b 10 we_f_glh\ fZkkb\Z b lbiZ
character Ihemq_ggh_ khh[s_gb_ i_j_kueZ_lky ijhp_^mjhc MPI_BCAST hl
ijhp_kkZ 0\k_fhklZevgufijhp_kkZfihemq_ggh_khh[s_gb_jZkiZdh\u\Z_lkyijbihfhsb\uah\h\ijhp_^mjMPI_UNPACK.
program example20
include 'mpif.h'
integer ierr, rank, position
real a(10)
character b(10), buf(100)
call MPI_INIT(ierr)
call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierr)
do i = 1, 10
a(i) = rank + 1.0
if(rank .eq. 0) then
b(i) = 'a'
else
b(i) = 'b'
end if
end do
position=0
69

if(rank .eq. 0) then
call MPI_PACK(a, 10, MPI_REAL, buf, 100, position,
&
MPI_COMM_WORLD, ierr)
call MPI_PACK(b, 10, MPI_CHARACTER, buf, 100, position,
&
MPI_COMM_WORLD, ierr)
call MPI_BCAST(buf, 100, MPI_PACKED, 0,
&
MPI_COMM_WORLD, ierr)
else
call MPI_BCAST(buf, 100, MPI_PACKED, 0,
&
MPI_COMM_WORLD, ierr)
position=0
call MPI_UNPACK(buf, 100, position, a, 10, MPI_REAL,
&
MPI_COMM_WORLD, ierr)
call MPI_UNPACK(buf, 100, position, b, 10,
&
MPI_CHARACTER, MPI_COMM_WORLD, ierr)
end if
print *, 'procecc ', rank, ' a=', a, ' b=', b
call MPI_FINALIZE(ierr)
end

AZ^Zgby
• Kha^Zlv ijhba\h^guc lbi ^Zgguo ^ey i_j_kuehd ^bZ]hgZevghc fZljbpu
• DZdkhhlghkylkyagZq_gby\ha\jZsZ_fu_ijhp_^mjZfbMPI_TYPE_SIZE
bMPI_TYPE_EXTENT?
• Fh`ghebbkihevah\Zlvijhba\h^gu_lbiu^Zgguo[_a\uah\Zijhp_^mjuMPI_TYPE_COMMIT?
• I_j_keZlv gme_\hfm ijhp_kkm hl \k_o ijhp_kkh\ ijbeh`_gby kljmdlmjmkhklhysmxbajZg]Zijhp_kkZbgZa\ZgbymaeZgZdhlhjhf^Zgguc
ijhp_kk aZims_g
ihemq_ggh]h k ihfhsvx ijhp_^mju
MPI_GET_PROCESSOR_NAME).
• Ijyfhm]hevgZy fZljbpZ jZkij_^_e_gZ ih ijhp_kkZf ih kljhdZf
I_j_klZ\blvkljhdbfZljbpu\h[jZlghfihjy^d_bkihevamy^eyi_j_kuehdijhba\h^guclbi^Zgguo
• K^_eZlv ij_^u^msmx aZ^Zqm k bkihevah\Zgb_f i_j_kuehd miZdh\Zgguo^Zgguo
• <q_fij_bfms_kl\Zbg_^hklZldbbkihevah\Zgbyi_j_kuehdmiZdh\Zgguo^ZgguoihkjZ\g_gbxki_j_kuedZfb^Zgguoijhba\h^guolbih\"
• GZibkZlv ijh]jZffm ljZgkihgbjh\Zgby fZljbpu k bkihevah\Zgb_f
ijhba\h^guolbih\^Zgguo

70

Ebl_jZlmjZ
1. MPI: A Message-Passing Interface Standard (Version 1.1)
(http://parallel.ru/docs/Parallel/mpi1.1/mpi-report.html)
2. <h_\h^bg<<<h_\h^bg<e<IZjZee_evgu_\uqbke_gbyKI[
;O<-I_l_j[mj]
3. :glhgh\:K<\_^_gb_\iZjZee_evgu_\uqbke_gby f_lh^bq_kdh_ihkh[b_ FBa^-\hNbabq_kdh]hnZdmevl_lZF=M
4. ;mdZlh\::>Zpxd<G@_]meh:BIjh]jZffbjh\Zgb_
fgh]hijhp_kkhjguo\uqbkebl_evguokbkl_fJhklh\-gZ->hgmBa^Zl_evkl\hHHHP<<J
5. RiZdh\kdbc=BK_jbdh\ZG<Ijh]jZffbjh\Zgb_^ey
fgh]hijhp_kkhjguokbkl_f\klZg^Zjl_03,Ihkh[b_Fbgkd;=M
2002.
6. G_fgx]bgK:Kl_kbdHEIZjZee_evgh_ijh]jZffbjh\Zgb_^ey
fgh]hijhp_kkhjguo\uqbkebl_evguokbkl_fKI[;O<-I_l_j[mj]
2002.
7. Dhjg__\<>IZjZee_evgh_ijh]jZffbjh\Zgb_\03,Gh\hkb[bjkd
Ba^-\hKHJ:G

71

Mq_[gh_ba^Zgb_

:glhgh\:e_dkZg^jK_j]__\bq
I:J:EE?EVGH?IJH=J:FFBJH<:GB?
KBKIHEVAH<:GB?FL?OGHEH=BB
MPI

Ih^ibkZgh\i_qZlvNhjfZlo
;mfZ]Zhnk_lgZyI_qZlvjbahMkei_qe
Mq-ba^eLbjZ`wdaAZdZa
Hj^_gZAgZdIhq_lZBa^Zl_evkl\hFhkdh\kdh]hmgb\_jkbl_lZ
Fhkd\Zme;GbdblkdZy
MqZklhdhi_jZlb\ghci_qZlbGB<PF=M
=KI-Fhkd\ZGB<PF=M
72

